# This workflow will build and run the test suite
# on all opened and updated (and labeled) PRs where
# at least one file does not match paths-ignore.
name: Build & test

on:
  # manual run
  workflow_dispatch:
    branding:
      icon: eye
  # Build when a PR
  pull_request:
    types: [opened, synchronize, labeled, ready_for_review]
    # Will only run if files other than these are edited
    paths-ignore:
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/PULL_REQUEST_TEMPLATE/**"
      - ".storybook/**"
      - "docs/**"
      - "generators/**"
      - "**/*.md"
      - "**/*.text"
  # Build when PRs are merged into master/main
  push:
    branches: ["master", "main"]

env:
  # For github action
  BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USER }}
  BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_KEY }}
  # For webdriver script
  BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
  BROWSERSTACK_KEY: ${{ secrets.BROWSERSTACK_KEY }}
  # Turn this on to debug an action
  GITHUB_CONTEXT: ${{ toJson(github.event_name) }}
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    # Confirm that the PR is not in draft
    # if: github.event_name == "pull_request" && github.event.pull_request.draft == false
    steps:
      # Turn this on to debug an action
      - run: echo "$GITHUB_CONTEXT"

      - name: Checkout repository
        uses: actions/checkout@v2

      # Caching speeds up the npm install step
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install

      - name: Build
        id: build
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: compiled-assets
          path: elements/*/dist/*
          if-no-files-found: error
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: npm test -- --verbose
  e2e:
    needs: build
    if: contains(github.event.pull_request.labels.*.name, 'ready to merge') || contains(github.event.pull_request.labels.*.name, 'run e2e')
    runs-on: ubuntu-latest
    steps:
      # Only run visual tests if the PR is labeled "ready to merge" or "run e2e"
      - name: Start BrowserStackLocal
        uses: "browserstack/github-actions/setup-local@master"
        with:
          local-testing: start
          local-identifier: random
          # local-logging-level: all-logs

      - name: Visual regression tests
        run: npm run e2e -- --verbose

      - name: Stop BrowserStackLocal
        uses: "browserstack/github-actions/setup-local@master"
        with:
          local-testing: stop
