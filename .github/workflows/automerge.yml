# This workflow will attempt to merge a pull request
# https://github.com/pascalgn/automerge-action
name: Auto-merge pull request if requirements met

on:
  pull_request:
    types:
      - labeled

env:
  TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  # https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

jobs:
  # Visual regression tests can run concurrent with test so it downloads the
  # compiled assets from the build and uses those instead of reinstalling.
  # Only run visual tests if the PR is labeled "ready to merge" or "run vrt"
  vrt:
    name: Visual regression testing
    if: |
      contains(github.event.pull_request.labels.*.name, 'ready to merge') ||
      contains(github.event.pull_request.labels.*.name, 'run vrt') &&
      !contains(github.event.pull_request.labels.*.name, 'skip vrt')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10]
    steps:
      - name: BrowserStack environment setup
        uses: "browserstack/github-actions/setup-env@master"
        with:
          username: ${{ secrets.BROWSERSTACK_USER }}
          access-key: ${{ secrets.BROWSERSTACK_KEY }}

      - name: Start BrowserStackLocal
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: start
          local-identifier: random
          # local-logging-level: all-logs

      - name: Checkout repository
        uses: actions/checkout@v2

      # Configures the node version used on GitHub-hosted runners
      - name: Configure node version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      # Caching speeds up the npm install step
      - name: Access cached node modules
        id: get-node-cache
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            **/node_modules
          key: ${{ needs.build.outputs.CACHE_KEY }}

      - name: Install dependencies
        if: steps.get-node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Access compiled assets
        uses: actions/download-artifact@v2
        id: download-compiled-assets
        with:
          name: compiled-assets
          path: elements

      - name: Build
        if: failure()
        run: npm run build

      - name: Visual regression tests
        run: npm run e2e -- --verbose

      # Upload assets even if the e2e fails
      - name: Archive baseline images
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: visual-regression-snapshots
          path: |
            .tmp/
            test/vrt-baseline
            test/vrt-snapshots
          if-no-files-found: error

      - name: Stop BrowserStackLocal
        if: always()
        uses: browserstack/github-actions/setup-local@master
        with:
          local-testing: stop

  try_to_merge:
    name: Try to merge the PR if allowed
    runs-on: ubuntu-latest
    needs: [vrt]
    steps:
      - name: "Attempt merge PR #${{ github.event.pull_request.number }}"
        if: (needs.vrt.result == 'success' || needs.vrt.result == 'skipped') && (contains(github.event.pull_request.labels.*.name, 'ready to merge') || contains(github.event.pull_request.labels.*.name, 'release'))
        uses: pascalgn/automerge-action@v0.12.0
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_REMOVE_LABELS: "ready to merge"
          MERGE_METHOD: if(contains(github.event.pull_request.labels.*.name, 'release' ), "merge", "squash")
          MERGE_COMMIT_MESSAGE: "pull-request-title"
          MERGE_RETRIES: 3
          MERGE_RETRY_SLEEP: 50000
          UPDATE_METHOD: if(contains(github.event.pull_request.labels.*.name, 'release' ), "merge", "squash")
