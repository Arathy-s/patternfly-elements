{"version":3,"file":"rh-avatar.umd.js","sources":["rh-avatar.umd.js","djb-hash.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport RHElement from \"../rhelement/rhelement.umd.js\";\nimport { hash } from \"./djb-hash.js\";\n\nclass RhAvatar extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  --rh-avatar--pattern-color1: var(\n    --rh-avatar--color--background,\n    var(--rh-theme--color--ui-accent, #cce6ff)\n  );\n  --rh-avatar--pattern-color2: var(\n    --rh-avatar--color--foreground,\n    var(--rh-theme--color--ui-accent--hover, #cce6ff)\n  );\n  --rh-avatar--text-color: var(--rh-theme--color--text--on-dark, #333);\n  --rh-avatar--font-size: var(--rh-theme--font-size--heading--alpha, 1em);\n  --rh-avatar--width: 128px;\n  display: block;\n  position: relative;\n  width: var(--rh-avatar--width);\n  height: var(--rh-avatar--width); }\n  :host canvas {\n    width: 100%;\n    height: 100%;\n    image-rendering: optimizeSpeed;\n    \n    image-rendering: -moz-crisp-edges;\n    \n    image-rendering: -webkit-optimize-contrast;\n    \n    image-rendering: -o-crisp-edges;\n    \n    image-rendering: pixelated;\n    \n    -ms-interpolation-mode: nearest-neighbor;\n     }\n  :host #initials {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: var(--rh-avatar--text-color);\n    font-size: calc(2 * var(--rh-avatar--font-size));\n    line-height: 1em;\n    font-weight: bold;\n    text-shadow: 0px 1px 4px rgba(0, 0, 0, 0.3); }\n\n:host([shape=\"rounded\"]) img,\n:host([shape=\"rounded\"]) canvas {\n  border-radius: calc(var(--rh-avatar--width) / 8 + 1px); }\n\n:host([shape=\"circle\"]) img,\n:host([shape=\"circle\"]) canvas {\n  border-radius: 50%; }\n\n:host([src]) canvas {\n  display: none; }\n\n:host([src]) img {\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: cover; }\n\n:host(:not([src])) img {\n  display: none; }\n\n:host(:not([show-initials])) #initials {\n  display: none; }\n\n:host([hidden]) {\n  display: none; }\n</style>\n<div id=\"initials\"></div>\n<canvas></canvas>\n<img>`;\n  }\n\n  static get tag() {\n    return \"rh-avatar\";\n  }\n\n  get templateUrl() {\n    return \"rh-avatar.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-avatar.scss\";\n  }\n\n  static get observedAttributes() {\n    return [\"name\", \"pattern\", \"src\", \"shape\"];\n  }\n\n  static get patterns() {\n    return {\n      triangles: \"triangles\",\n      squares: \"squares\"\n    };\n  }\n\n  get name() {\n    return this.getAttribute(\"name\");\n  }\n\n  set name(val) {\n    return this.setAttribute(\"name\", val);\n  }\n\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n\n  set src(href) {\n    return this.setAttribute(\"src\", href);\n  }\n\n  get pattern() {\n    return this.getAttribute(\"pattern\") || RhAvatar.patterns.squares;\n  }\n\n  set pattern(name) {\n    if (!RhAvatar.patterns[name]) {\n      this.log(\n        `invalid pattern \"${name}\", valid patterns are: ${Object.values(\n          RhAvatar.patterns\n        )}`\n      );\n      return;\n    }\n    return this.setAttribute(\"pattern\", name);\n  }\n\n  constructor() {\n    super(RhAvatar);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._initCanvas();\n\n    this.dispatchEvent(\n      new CustomEvent(`${RhAvatar.tag}:connected`, {\n        bubbles: false\n      })\n    );\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    super.attributeChangedCallback(...arguments);\n\n    switch (attr) {\n      case \"name\":\n      case \"pattern\":\n        break;\n      case \"src\":\n        break;\n\n      default:\n    }\n\n    if (this.connected) {\n      this.update();\n    } else {\n      this.addEventListener(`${RhAvatar.tag}:connected`, () => this.update());\n    }\n  }\n\n  _initCanvas() {\n    this._canvas = this.shadowRoot.querySelector(\"canvas\");\n    const size = this.var(\"--rh-avatar--width\").replace(/px$/, \"\");\n    this._canvas.width = size;\n    this._canvas.height = size;\n\n    this._squareSize = this._canvas.width / 8;\n    this._triangleSize = this._canvas.width / 4;\n\n    this._ctx = this._canvas.getContext(\"2d\");\n  }\n\n  _findInitials(name) {\n    if (!name || name.length === 0) {\n      return [];\n    }\n    const nameArr = name.trim().split(/\\s+/);\n    const fi = nameArr[0][0];\n    const li = nameArr.length > 1 ? nameArr[nameArr.length - 1][0] : \"\";\n    return [fi, li];\n  }\n\n  _setInitials(initials) {\n    this.shadowRoot.querySelector(\"#initials\").textContent = initials.join(\"\");\n  }\n\n  _getColors() {\n    this._color1 = this.var(\"--rh-avatar--pattern-color1\");\n    this._color2 = this.var(\"--rh-avatar--pattern-color2\");\n  }\n\n  update() {\n    this._setInitials(this._findInitials(this.name));\n\n    // if we have a src element, update the img, otherwise update the random pattern\n    if (this.hasAttribute(\"src\")) {\n      this.shadowRoot.querySelector(\"img\").src = this.src;\n    } else {\n      const bitPattern = hash(this.name).toString(2);\n      const arrPattern = bitPattern.split(\"\").map(n => Number(n));\n\n      this._getColors();\n      this._clear();\n      this._drawBackground();\n      if (this.pattern === RhAvatar.patterns.squares) {\n        this._drawSquarePattern(arrPattern);\n      } else if (this.pattern === RhAvatar.patterns.triangles) {\n        this._drawTrianglePattern(arrPattern);\n      }\n      this._drawGradient();\n    }\n  }\n\n  _clear() {\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  _drawBackground() {\n    this._ctx.fillStyle = this._color1;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  _drawSquarePattern(pattern) {\n    this._ctx.fillStyle = this._color2;\n    if (this._ctx) {\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          this._drawMirroredSquare(i % 4, Math.floor(i / 4));\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position, mirrored onto both the left and right half of the canvas.\n   */\n  _drawMirroredSquare(x, y) {\n    if (this._ctx) {\n      this._drawSquare(x, y);\n      this._drawSquare(7 - x, y);\n    }\n  }\n\n  _drawSquare(x, y) {\n    this._ctx.fillRect(\n      this._squareSize * x,\n      this._squareSize * y,\n      this._squareSize,\n      this._squareSize\n    );\n  }\n\n  _drawTrianglePattern(pattern) {\n    this._ctx.fillStyle = this._color2;\n    if (this._ctx) {\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          const x = Math.floor(i / 2) % 2;\n          const y = Math.floor(i / 4);\n          const alt = i % 4;\n\n          const p1 = [x, y];\n          const p2 = [x, y];\n          const p3 = [x, y];\n\n          switch (alt) {\n            case 0:\n              p2[1]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 1:\n              p2[0]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 2:\n              p2[0]++;\n              p3[1]++;\n              break;\n            case 3:\n              p1[0]++;\n              p2[0]++;\n              p2[1]++;\n              p3[1]++;\n              break;\n          }\n\n          this._drawMirroredTriangle(p1, p2, p3);\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position in the top-left quadrant of the\n   * canvas, and mirrored to the other three quadrants.\n   */\n  _drawMirroredTriangle(p1, p2, p3) {\n    if (this._ctx) {\n      this._drawTriangle(p1, p2, p3);\n      this._drawTriangle(\n        [4 - p1[0], p1[1]],\n        [4 - p2[0], p2[1]],\n        [4 - p3[0], p3[1]]\n      );\n    }\n  }\n\n  _drawTriangle(p1, p2, p3) {\n    this._ctx.beginPath();\n    this._ctx.moveTo(...p1.map(c => c * this._triangleSize));\n    this._ctx.lineTo(...p2.map(c => c * this._triangleSize));\n    this._ctx.lineTo(...p3.map(c => c * this._triangleSize));\n    this._ctx.closePath();\n    this._ctx.fill();\n    this._ctx.fill();\n  }\n\n  _drawGradient() {\n    const gradient = this._ctx.createLinearGradient(\n      0,\n      this._canvas.height,\n      this._canvas.width,\n      0\n    );\n    let gradientColor1 = `${this._color2}`;\n    let gradientColor2 = `${this._color2}`;\n    if (/^#[A-f0-9]{3}$/.test(this._color2)) {\n      // color is of the form \"#fff\"\n      gradientColor1 += \"c\";\n      gradientColor2 += \"0\";\n    } else if (/^#[A-f0-9]{6}$/.test(this._color2)) {\n      // color is of the form \"#ffffff\"\n      gradientColor1 += \"cc\";\n      gradientColor2 += \"00\";\n    }\n    gradient.addColorStop(0, gradientColor1);\n    gradient.addColorStop(1, gradientColor2);\n    gradient.addColorStop(1, gradientColor1);\n    this._ctx.fillStyle = gradient;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n}\n\nRHElement.create(RhAvatar);\n\nexport default RhAvatar;\n","/**\n * djb2 string hashing function.\n *\n * @see http://www.cse.yorku.ca/~oz/hash.html\n * @param {String} str the string to hash.\n * @return {Number} a positive integer\n */\n\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  return hash >>> 0;\n}\n\nexport { hash };\n"],"names":["RhAvatar","RHElement","this","getAttribute","val","setAttribute","href","patterns","squares","name","log","Object","values","_initCanvas","dispatchEvent","CustomEvent","tag","attr","oldValue","newValue","arguments","connected","update","addEventListener","_this2","_canvas","shadowRoot","querySelector","size","var","replace","width","height","_squareSize","_triangleSize","_ctx","getContext","length","nameArr","trim","split","initials","textContent","join","_color1","_color2","_setInitials","_findInitials","hasAttribute","src","arrPattern","str","hash","i","charCodeAt","toString","map","Number","n","_getColors","_clear","_drawBackground","pattern","_drawSquarePattern","triangles","_drawTrianglePattern","_drawGradient","clearRect","fillStyle","fillRect","_drawMirroredSquare","Math","floor","x","y","_drawSquare","p1","p2","p3","_drawMirroredTriangle","_drawTriangle","beginPath","moveTo","c","_this3","lineTo","closePath","fill","gradient","createLinearGradient","gradientColor1","gradientColor2","test","addColorStop","create"],"mappings":"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"}