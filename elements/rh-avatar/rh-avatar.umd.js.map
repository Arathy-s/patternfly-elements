{"version":3,"file":"rh-avatar.umd.js","sources":["rh-avatar.umd.js","djb-hash.js"],"sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport RHElement from \"../rhelement/rhelement.umd.js\";\nimport { hash } from \"./djb-hash.js\";\n\nclass RhAvatar extends RHElement {\n  get html() {\n    return `\n<style>\n:host {\n  display: block; }\n  :host canvas {\n    width: 100%;\n    image-rendering: optimizeSpeed;\n    \n    image-rendering: -moz-crisp-edges;\n    \n    image-rendering: -webkit-optimize-contrast;\n    \n    image-rendering: -o-crisp-edges;\n    \n    image-rendering: pixelated;\n    \n    -ms-interpolation-mode: nearest-neighbor;\n     }\n\n:host([hidden]) {\n  display: none; }\n</style>\n<canvas></canvas>`;\n  }\n\n  static get tag() {\n    return \"rh-avatar\";\n  }\n\n  get templateUrl() {\n    return \"rh-avatar.html\";\n  }\n\n  get styleUrl() {\n    return \"rh-avatar.scss\";\n  }\n\n  static get observedAttributes() {\n    return [\"value\", \"shape\"];\n  }\n\n  static get shapes() {\n    return {\n      triangle: \"triangle\",\n      square: \"square\"\n    };\n  }\n\n  get value() {\n    return this.getAttribute(\"value\");\n  }\n\n  set value(val) {\n    return this.setAttribute(\"value\", val);\n  }\n\n  get shape() {\n    return this.getAttribute(\"shape\") || RhAvatar.shapes.square;\n  }\n\n  set shape(name) {\n    if (!RhAvatar.shapes[name]) {\n      this.log(\n        `invalid shape \"${name}\", valid shapes are: ${Object.values(\n          RhAvatar.shapes\n        )}`\n      );\n      return;\n    }\n    return this.setAttribute(\"shape\", name);\n  }\n\n  constructor() {\n    super(RhAvatar);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._canvas = this.shadowRoot.querySelector(\"canvas\");\n    this._canvas.width = 608;\n    this._canvas.height = 608;\n\n    this._squareSize = this._canvas.width / 8;\n    this._triangleSize = this._canvas.width / 4;\n\n    this._ctx = this._canvas.getContext(\"2d\");\n\n    this._color1 =\n      window\n        .getComputedStyle(this)\n        .getPropertyValue(\"--rh-theme--color--ui-accent\")\n        .trim() || \"#cce6ff\";\n    this._color2 =\n      window\n        .getComputedStyle(this)\n        .getPropertyValue(\"--rh-theme--color--ui-accent--hover\")\n        .trim() || \"#464646\";\n\n    this.dispatchEvent(\n      new CustomEvent(`${RhAvatar.tag}:connected`, {\n        bubbles: false\n      })\n    );\n  }\n\n  attributeChangedCallback(attr, oldValue, newValue) {\n    super.attributeChangedCallback(...arguments);\n\n    const value = this.getAttribute(\"value\");\n\n    if (this.connected) {\n      this._update(value);\n    } else {\n      this.addEventListener(`${RhAvatar.tag}:connected`, () =>\n        this._update(value)\n      );\n    }\n  }\n\n  _update(newValue) {\n    const bitPattern = hash(newValue).toString(2);\n    const arrPattern = bitPattern.split(\"\").map(n => Number(n));\n\n    this._clear();\n    this._drawBackground();\n    if (this.shape === RhAvatar.shapes.square) {\n      this._drawSquarePattern(arrPattern);\n    } else if (this.shape === RhAvatar.shapes.triangle) {\n      this._drawTrianglePattern(arrPattern);\n    }\n    this._drawGradient();\n\n    console.log(arrPattern.join(\"\").padStart(32, 0));\n  }\n\n  _clear() {\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  _drawBackground() {\n    this._ctx.fillStyle = this._color1;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n\n  _drawSquarePattern(pattern) {\n    this._ctx.fillStyle = this._color2;\n    if (this._ctx) {\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          this._drawMirroredSquare(i % 4, Math.floor(i / 4));\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position, mirrored onto both the left and right half of the canvas.\n   */\n  _drawMirroredSquare(x, y) {\n    if (this._ctx) {\n      this._drawSquare(x, y);\n      this._drawSquare(7 - x, y);\n    }\n  }\n\n  _drawSquare(x, y) {\n    this._ctx.fillRect(\n      this._squareSize * x,\n      this._squareSize * y,\n      this._squareSize,\n      this._squareSize\n    );\n  }\n\n  _drawTrianglePattern(pattern) {\n    this._ctx.fillStyle = this._color2;\n    if (this._ctx) {\n      const patternFlip = pattern;\n      let i = patternFlip.length;\n      while (i--) {\n        if (patternFlip[i]) {\n          const x = Math.floor(i / 2) % 2;\n          const y = Math.floor(i / 4);\n          const alt = i % 4;\n\n          const p1 = [x, y];\n          const p2 = [x, y];\n          const p3 = [x, y];\n\n          switch (alt) {\n            case 0:\n              p2[1]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 1:\n              p2[0]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 2:\n              p2[0]++;\n              p3[1]++;\n              break;\n            case 3:\n              p1[0]++;\n              p2[0]++;\n              p2[1]++;\n              p3[1]++;\n              break;\n          }\n\n          this._drawMirroredTriangle(p1, p2, p3);\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position in the top-left quadrant of the\n   * canvas, and mirrored to the other three quadrants.\n   */\n  _drawMirroredTriangle(p1, p2, p3) {\n    if (this._ctx) {\n      this._drawTriangle(p1, p2, p3);\n      this._drawTriangle(\n        [4 - p1[0], p1[1]],\n        [4 - p2[0], p2[1]],\n        [4 - p3[0], p3[1]]\n      );\n    }\n  }\n\n  _drawTriangle(p1, p2, p3) {\n    this._ctx.beginPath();\n    this._ctx.moveTo(...p1.map(c => c * this._triangleSize));\n    this._ctx.lineTo(...p2.map(c => c * this._triangleSize));\n    this._ctx.lineTo(...p3.map(c => c * this._triangleSize));\n    this._ctx.closePath();\n    this._ctx.fill();\n    this._ctx.fill();\n  }\n\n  _drawGradient() {\n    const gradient = this._ctx.createLinearGradient(\n      0,\n      this._canvas.height,\n      this._canvas.width,\n      0\n    );\n    gradient.addColorStop(0, `${this._color2}cc`);\n    gradient.addColorStop(1, `${this._color2}00`);\n    gradient.addColorStop(1, `${this._color2}CC`);\n    this._ctx.fillStyle = gradient;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n  }\n}\n\nRHElement.create(RhAvatar);\n\nexport default RhAvatar;\n","/**\n * djb2 string hashing function.\n *\n * @see http://www.cse.yorku.ca/~oz/hash.html\n * @param {String} str the string to hash.\n * @return {Number} a positive integer\n */\n\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  return hash >>> 0;\n}\n\nexport { hash };\n"],"names":["RhAvatar","RHElement","this","getAttribute","val","setAttribute","shapes","square","name","log","Object","values","_canvas","shadowRoot","querySelector","width","height","_squareSize","_triangleSize","_ctx","getContext","_color1","window","getComputedStyle","getPropertyValue","trim","_color2","dispatchEvent","CustomEvent","tag","attr","oldValue","newValue","arguments","value","connected","_update","addEventListener","_this2","arrPattern","str","hash","i","length","charCodeAt","toString","split","map","Number","n","_clear","_drawBackground","shape","_drawSquarePattern","triangle","_drawTrianglePattern","_drawGradient","join","padStart","clearRect","fillStyle","fillRect","pattern","_drawMirroredSquare","Math","floor","x","y","_drawSquare","patternFlip","p1","p2","p3","_drawMirroredTriangle","_drawTriangle","beginPath","moveTo","c","_this3","lineTo","closePath","fill","gradient","createLinearGradient","addColorStop","create"],"mappings":"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"}