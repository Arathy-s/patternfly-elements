{"version":3,"sources":["pfe-typography-classes.scss","../../pfe-sass/mixins/_copy-mixins.scss","pfe-typography-classes.css"],"names":[],"mappings":"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","file":"pfe-typography-classes.css","sourcesContent":["@import \"../../pfe-sass/pfe-sass\";\n\n// TITLES\n@each $size in (6xl, 5xl, 4xl, 3xl, 2xl, xl, lg, md, sm, xs) {\n  .pfe-title--#{$size}  {\n      @include pfe-typography($sizing: $size, $important: true); \n  }\n}\n\n// TEXT\n@each $size in (xl, lg, md, sm, xs) {\n  .pfe-text--#{$size}  {\n      @include pfe-typography($sizing: $size, $type: text, $important: true);  \n  }\n}","@import \"../maps/_typography\";\n\n/// Mixin for creating an accessible focus state\n/// @group tools\n/// @param {Color} $color [$pfe-color--link]\n/// @see {variable} $pfe-color--link\n/// @example - scss\n/// .thing {\n///   @include pfe-accessibility-focus($pfe-color--link--on-dark);\n/// }\n/// @example - css\n/// .thing {\n///   outline-offset: 1px;\n///   outline-style: dotted;\n///   outline-width: 1px;\n///   text-decoration: none !important;\n///   outline-color: #73bcf7;\n/// }\n@mixin pfe-accessibility-focus($color: $pfe-color--link) {\n  outline-offset: 1px;\n  outline-style: dotted;\n  outline-width: 1px;\n  text-decoration: none !important;\n\n  @if type-of($color) ==color {\n    outline-color: $color;\n  }\n}\n\n@mixin pfe-underline($color: default-link-hover-line, $opacity: 1) {\n  text-decoration: underline;\n  text-decoration-skip: ink;\n}\n\n/// Mixin for authors outside of PFE to control spacing between content\n/// @group typography\n/// @param {*} $sizing [lg, md, sm] \n/// @param {*} $type [heading, body] \n/// @example - scss\n///   @include pfe-content--text--spacing-block(sm);\n@mixin pfe-content--text--spacing-block($sizing: md, $type: body) {\n    &:not(:last-child):not(:empty) {\n        margin-bottom: pfe-var(content-spacer--#{$type}--#{$sizing}); //16px\n    }\n} \n\n/// Mixin for authors outside of PFE to customize block level elements\n/// The variable stack includes a hook just for headings when they appear in the \n/// light DOM within components: --pf-c--FontSize\n///\n/// Components can't control the font size of block level elements like HTML headings \n/// when they are in the light DOM.  A component _could_ redefine the variables for \n/// standard headings by using the variable hooks such as: `--pf-c--content--h4--FontSize` \n/// but it can't know if the light DOM might contain an H1, H2, H3, etc. it shouldn't\n/// redefine the variables for all possible headings. Instead, there is one dedicated\n/// variable for this purpose. \n/// @group typography\n/// @param {*} $sizing [h1, h2, h3, h4, h5, h6, p, small] \n/// @example - scss\n///  .project-wrapper h3  {\n///      @include pfe-title(xl); \n///  }\n/// @example - css\n///  .project-wrapper  h3 {\n///    font-family: \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif;\n///    font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif);\n///    line-height: 1.3;\n///    line-height: var(--pfe-theme--line-height--heading, 1.3);\n///    font-weight: 500;\n///    font-weight: var(--pfe-theme--font-weight--normal, 500);\n///    font-size: 1.25rem;\n///    font-size: var(--pf-c--FontSize, var(--pf-c--content--h3--FontSize, var(--pf-global--FontSize--xl, 1.25rem)));\n///  }\n@mixin pfe-content ($element: \"p\", $base: false){\n    // TEXT\n    @if $element == \"p\" or $element == \"small\" {\n        // Extend includes: line height, weight, font family\n        @extend %pfe-content-base;\n\n        // Accomodate for irregular variable naming\n        @if $element == \"p\" {\n            font-size: var(--pf-c--FontSize, pfe-var(content--FontSize));\n        }\n        @else {\n            font-size: var(--pf-c--FontSize, pfe-var(content--#{$element}--FontSize));\n        }\n        @if $base {\n            font-family: pfe-var(font-family);\n            line-height: pfe-var(line-height);\n            font-weight: pfe-var(font-weight--normal);\n        }\n        // spacing\n        @include pfe-content--text--spacing-block(sm);\n    } \n    @else { // HEADINGS\n        font-family: pfe-var(font-family--heading);\n        line-height: pfe-var(line-height--heading);\n        font-weight: pfe-var(font-weight--normal);\n\n        font-size: var(--pf-c--FontSize, #{pfe-var(content--#{$element}--FontSize)});\n        // spacing\n        @include pfe-content--text--spacing-block(sm, heading);\n    }\n}\n\n\n\n/// Mixin to generate a typography stack - font-family, font-size, line-height, font-weight\n/// and spacing between elements. It accepts a few inputs and determines what variable stack\n/// and CSS properties to output. NOTE! There is an alias mixin `pfe-c-typography` below for easier usage within components. \n/// @group typography\n/// @param {String} $sizing [xl] - Human-readable description for the font-size of the stack you are building.\n/// @param {String} $type [title] - Describes the type of element being created and determines which variable stack to pull from. Also accepts \"text\".\n/// @param {Bool} $base [true] You may opt out of other typography properties (besides size) such as font-weight and line-height (and font-family on text).  \n/// @param {Bool} $spacing [true] - You may opt out of the margin-bottom which adds space below the typographical element \n/// @param {Bool} $important [false] - Boolean value for if properties need to be postfixed with `!important`. Use of `!important` is only recommended for utility classes.\n/// @param {Boolean} $use-local [false] - Set this to true when using the mixin within components. This will print a local CSS variable at the beginning of the CSS variable stack and will omit title/text variables. Note that this mixin will not utilize any values from the $LOCAL-VARIABLES map.\n/// @param {String} $region [null] - For use with local variables only. For more about the regional designation, see pfe-var().\n/// @param {Boolean} $light-dom-heading: [false] - Print the --pf-c--FontSize variable with a value of the font-size variable stack. For more information about --pf-c--FontSize, see the HTML HEADINGS section in pfe-base.scss.\n/// @requires {function} pfe-var\n/// @requires {function} pfe-local\n/// @requires {variable} $pf-title-set--mega\n/// @requires {variable} $pf-title-set--regular\n/// @requires {variable} $pf-title-set--tiny\n/// @example - scss - Basic example for xs text typography set\n/// .small-text {\n///   @include pfe-typography(\n///     $sizing: \"xs\",\n///     $type: \"text\",\n///     $base: true,\n///     $important: true,\n///     $use-local: false\n///   )\n/// }\n/// @example - css - Rendered result\n/// .small-text {\n///   font-size: 0.75rem !important;\n///   font-size: var(--pf-c-text--m-xs--FontSize, var(--pf-global--FontSize--xs, 0.75rem)) !important;\n///   font-family: \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif !important;\n///   font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n///   line-height: 1.5 !important;\n///   line-height: var(--pfe-theme--line-height, 1.5) !important;\n///   font-weight: 400 !important;\n///   font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n/// }\n/// \n/// .small-text:not(:last-child):not(:empty) {\n///   margin-bottom: 0.5rem !important;\n///   margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n/// }\n/// @example - scss - Basic example for 5xl title typography set\n/// .large-heading {\n///   @include pfe-typography(\n///     $sizing: \"5xl\",\n///     $type: \"title\",\n///     $important: true,\n///     $use-local: false\n///   )\n/// }\n/// @example - css - Rendered result\n/// .large-heading {\n///   font-family: \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif !important;\n///   font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n///   font-size: 2.5rem !important;\n///   font-size: var(--pf-c-title--m-5xl--FontSize, var(--pf-global--FontSize--5xl, 2.5rem)) !important;\n///   line-height: 1.2 !important;\n///   line-height: var(--pfe-theme--line-height--heading-mega, 1.2) !important;\n///   font-weight: 300 !important;\n///   font-weight: var(--pfe-theme--font-weight--light, 300) !important;\n/// }\n/// \n/// .large-heading:not(:last-child) {\n///   margin-bottom: 1.5rem !important;\n///   margin-bottom: var(--pfe-theme--content-spacer--heading--md, 1.5rem) !important;\n/// }\n@mixin pfe-typography (\n        $sizing: \"xl\", \n        $type: \"title\", \n        $base: true, \n        $spacing: true, \n        $use-local: false,\n        $region: null,\n        $light-dom-heading: false,\n        $important: false\n    ){\n\n    // Ensure that even numerical entries are treated like strings, \"6xl\" vs. 6xl\n    $sizing: \"#{$sizing}\";\n\n    // Adds !important to the end of the property; useful for utility classes only. Use with caution. \n    $rules: \"\";\n    @if $important {\n        $rules: \" !important\";\n    }\n    // Text / body copy typography!\n    @if $type == \"text\" {  \n        // Capture the values of properties to use directly or wrapped in the pfe-local function below\n        $font-family: pfe-var(font-family);\n        $line-height: pfe-var(line-height);\n        $font-weight: pfe-var(font-weight--normal);\n        $margin-bottom: pfe-var(content-spacer--body--sm);\n\n        @if $use-local {\n            $font-size: pfe-var(FontSize--#{$sizing});\n            font-size: pfe-local(FontSize, $font-size, $region)#{$rules};\n            @if $base { \n                font-family: pfe-local(LineHeight, $font-family, $region)#{$rules};\n                line-height: pfe-local(LineHeight, $line-height, $region)#{$rules};\n                font-weight: pfe-local(FontWeight, $font-weight, $region)#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child) {\n                    margin-bottom: pfe-local(MarginBottom, $margin-bottom, $region)#{$rules};\n                }\n            }\n        }\n        @else {\n            // include text var and global var in stack\n            $font-size: pfe-var(text--m-#{$sizing}--FontSize);\n            font-size:   $font-size#{$rules};\n            @if $base {  // these styles are ordinarily inherited from the body tag, but some projects may need extra specificity\n                font-family: $font-family#{$rules};\n                line-height: $line-height#{$rules};\n                font-weight: $font-weight#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child):not(:empty) {\n                    margin-bottom: $margin-bottom#{$rules}; //16px\n                }\n            }\n        }\n        // this CSS custom property is an extra hook for components to override things, like .pfe-card { --pf-c-FontSize: 32px; }\n        @if $use-local and $light-dom-heading {\n            --pf-c--FontSize: #{pfe-local(FontSize)};\n        }\n    }\n    // Title typography!\n    @else {\n        // Capture the values of properties to use directly or wrapped in the pfe-local function below\n        // Initialize variables at the $pf-title-set--tiny size\n        // $sizing == \"lg\" or \"md\" or \"sm\" or \"xs\" \n        $line-height: pfe-var(line-height);\n        $font-weight: pfe-var(font-weight--normal);\n        $margin-bottom: pfe-var(content-spacer--heading--sm);\n\n        @if index($pf-title-set--mega, $sizing) != null {\n            $line-height: pfe-var(line-height--heading-mega);\n            $font-weight: pfe-var(font-weight--light);\n            @if $spacing { \n                $margin-bottom: pfe-var(content-spacer--heading--md);\n            }\n        }\n        // $sizing == \"4xl\" or \"3xl\" or \"2xl\" \n        @else if index($pf-title-set--regular, $sizing) != null {\n            $line-height: pfe-var(line-height--heading);\n            $font-weight: pfe-var(font-weight--normal);\n            @if $spacing { \n                $margin-bottom: pfe-var(content-spacer--heading--sm);\n            }\n        }\n        // If this value was not found in the tiny set, it's likely not supported\n        @else if index($pf-title-set--tiny, $sizing) == null {\n            @warn \"#{$sizing} was not found in $pf-title-set--mega, $pf-title-set--regular, or $pf-title-set--tiny.\";\n        }\n\n        // For component use, this option allows the mixin to use values set in the component level map\n        @if $use-local {\n            // remove title var from stack, use global only\n            $font-size: pfe-var(FontSize--#{$sizing});\n\n            font-family: pfe-var(font-family--heading)#{$rules};\n            font-size: pfe-local(FontSize, $font-size, $region)#{$rules};\n            @if $base == true {\n                line-height: pfe-local(LineHeight, $line-height, $region)#{$rules};\n                font-weight: pfe-local(FontWeight, $font-weight, $region)#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child) {\n                    margin-bottom: pfe-local(MarginBottom, $margin-bottom, $region)#{$rules};\n                }\n            }\n        }\n         \n        @else {\n            // include title var and global var in stack\n            $font-size: pfe-var(title--m-#{$sizing}--FontSize);\n            font-family: pfe-var(font-family--heading)#{$rules};\n            font-size: $font-size#{$rules};\n            @if $base == true {\n                line-height: $line-height#{$rules};\n                font-weight: $font-weight#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child) {\n                    margin-bottom: $margin-bottom#{$rules};\n                }\n            }\n        }\n        // this CSS custom property is an extra hook for components to override things, like .pfe-card { --pf-c-FontSize: 32px; }\n        @if $use-local and $light-dom-heading {\n            --pf-c--FontSize: #{pfe-local(FontSize)};\n        }\n    }\n}\n\n/// ALIAS Typography mixin for generating the font-size only within components. Still accepts all arguments.\n/// @group typography\n/// @param {String} $sizing [xl] - Human-readable description for the font-size of the stack you are building.\n/// @param {String} $type [title] - Describes the type of element being created and determines which variable stack to pull from. Also accepts \"text\".\n/// @param {Bool} $base [false] You may opt out of other typography properties (besides size) such as font-weight and line-height (and font-family on text).  \n/// @param {Bool} $spacing [false] - You may opt out of the margin-bottom which adds space below the typographical element \n/// @param {Bool} $important [false] - Boolean value for if properties need to be postfixed with `!important`. Use of `!important` is only recommended for utility classes.\n/// @param {Boolean} $use-local [true] - Set this to true when using the mixin within components. This will print a local CSS variable at the beginning of the CSS variable stack and will omit title/text variables. Note that this mixin will not utilize any values from the $LOCAL-VARIABLES map.\n/// @param {String} $region [null] - For use with local variables only. For more about the regional designation, see pfe-var().\n/// @param {Boolean} $light-dom-heading: [false] - Print the --pf-c--FontSize variable with a value of the font-size variable stack. For more information about --pf-c--FontSize, see the HTML HEADINGS section in pfe-base.scss.\n/// @requires {function} pfe-var\n/// @requires {function} pfe-local\n/// @requires {variable} $pf-title-set--mega\n/// @requires {variable} $pf-title-set--regular\n/// @requires {variable} $pf-title-set--tiny\n/// @example - scss - Basic example for medium text sizing\n/// $LOCAL: jump-links;\n/// .jump-links-text {\n///    @include pfe-c-typography($type: text, $sizing: md, $region: header, $light-dom-heading: true)\n/// }\n/// @example - css - Rendered result\n/// .jump-links-text {\n///   font-size: 1rem;\n///   font-size: var(--pfe-clipboard__header--FontSize, var(--pf-global--FontSize--md, 1rem));\n///   --pf-c--FontSize: var(--pfe-clipboard--FontSize, 1rem);\n/// }\n@mixin pfe-c-typography (\n        $sizing: \"xl\", \n        $type: \"title\", \n        $base: false,     // different than mixin above\n        $spacing: false,  // different than mixin above\n        $use-local: true, \n        $region: null,\n        $light-dom-heading: false,\n        $important: false\n) {\n  @include pfe-typography(\n        $sizing: $sizing,\n        $type: $type,\n        $base: $base,\n        $spacing: $spacing,\n        $use-local: $use-local,\n        $region: $region,\n        $light-dom-heading: $light-dom-heading,\n        $important: $important,\n  );\n}",".pfe-title--6xl {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-6xl--FontSize, var(--pf-global--FontSize--6xl, 3rem)) !important;\n  line-height: var(--pfe-theme--line-height--heading-mega, 1.2) !important;\n  font-weight: var(--pfe-theme--font-weight--light, 300) !important;\n}\n\n.pfe-title--6xl:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--md, 1.5rem) !important;\n}\n\n.pfe-title--5xl {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-5xl--FontSize, var(--pf-global--FontSize--5xl, 2.5rem)) !important;\n  line-height: var(--pfe-theme--line-height--heading-mega, 1.2) !important;\n  font-weight: var(--pfe-theme--font-weight--light, 300) !important;\n}\n\n.pfe-title--5xl:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--md, 1.5rem) !important;\n}\n\n.pfe-title--4xl {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-4xl--FontSize, var(--pf-global--FontSize--4xl, 2.25rem)) !important;\n  line-height: var(--pfe-theme--line-height--heading, 1.3) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--4xl:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--3xl {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-3xl--FontSize, var(--pf-global--FontSize--3xl, 1.75rem)) !important;\n  line-height: var(--pfe-theme--line-height--heading, 1.3) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--3xl:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--2xl {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-2xl--FontSize, var(--pf-global--FontSize--2xl, 1.5rem)) !important;\n  line-height: var(--pfe-theme--line-height--heading, 1.3) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--2xl:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--xl {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-xl--FontSize, var(--pf-global--FontSize--xl, 1.25rem)) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--xl:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--lg {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-lg--FontSize, var(--pf-global--FontSize--lg, 1.125rem)) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--lg:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--md {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-md--FontSize, var(--pf-global--FontSize--md, 1rem)) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--md:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--sm {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-sm--FontSize, var(--pf-global--FontSize--sm, 0.875rem)) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--sm:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-title--xs {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  font-size: var(--pf-c-title--m-xs--FontSize, var(--pf-global--FontSize--xs, 0.75rem)) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-title--xs:not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem) !important;\n}\n\n.pfe-text--xl {\n  font-size: var(--pf-c-text--m-xl--FontSize, var(--pf-global--FontSize--xl, 1.25rem)) !important;\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-text--xl:not(:last-child):not(:empty) {\n  margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n}\n\n.pfe-text--lg {\n  font-size: var(--pf-c-text--m-lg--FontSize, var(--pf-global--FontSize--lg, 1.125rem)) !important;\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-text--lg:not(:last-child):not(:empty) {\n  margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n}\n\n.pfe-text--md {\n  font-size: var(--pf-c-text--m-md--FontSize, var(--pf-global--FontSize--md, 1rem)) !important;\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-text--md:not(:last-child):not(:empty) {\n  margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n}\n\n.pfe-text--sm {\n  font-size: var(--pf-c-text--m-sm--FontSize, var(--pf-global--FontSize--sm, 0.875rem)) !important;\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-text--sm:not(:last-child):not(:empty) {\n  margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n}\n\n.pfe-text--xs {\n  font-size: var(--pf-c-text--m-xs--FontSize, var(--pf-global--FontSize--xs, 0.75rem)) !important;\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n  line-height: var(--pfe-theme--line-height, 1.5) !important;\n  font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n}\n\n.pfe-text--xs:not(:last-child):not(:empty) {\n  margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n}\n"],"sourceRoot":"../src"}