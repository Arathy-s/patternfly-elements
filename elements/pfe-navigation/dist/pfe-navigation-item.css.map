{"version":3,"sources":["pfe-navigation-item.scss","_shared-assets.scss","../../pfe-sass/functions/_functions.scss","pfe-navigation-item.css","../../pfe-sass/mixins/_mixins.scss"],"names":[],"mappings":"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","file":"pfe-navigation-item.css","sourcesContent":["@import \"_shared-assets\";\n\n$variables: (\n  BackgroundColor: pfe-color(surface--darkest),\n  Color:           pfe-color(surface--darkest--text)\n);\n\n:host {\n  --pfe-navigation--BackgroundColor: transparent;\n  --pfe-navigation--Color:           #{pfe-color(surface--darkest--text)};\n  --pfe-navigation--BorderColor:     transparent;\n  --pfe-navigation--BorderTopColor:  transparent;\n\n  --pfe-navigation__trigger-icon--Visible: hidden;\n  --pfe-navigation__trigger--FontSize: 16px;\n\n  display: flex;\n  flex-direction: column;\n  \n  height: 100%;\n  width: 100%;\n}\n\n// Indicates this is the current section the user is visiting\n:host([aria-current=\"location\"]) {\n  --pfe-navigation--BorderTopColor: #{pfe-color(surface--accent)};\n}\n\n:host(.expanded) {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  --pfe-navigation--BorderColor:     #{pfe-color(surface--lightest)};\n  --pfe-navigation--BorderTopColor:  #{pfe-color(surface--accent)};\n  \n  --pfe-navigation--BackgroundColor: #{pfe-color(surface--lightest)};\n  --pfe-navigation--Color: #{pfe-color(surface--lightest--text)};\n}\n\n:host([pfe-icon]) {\n  --pfe-navigation__trigger--FontSize: 14px;\n}\n\n:host(:not([has_tray])),\n:host([pfe-icon]),\n:host(:not([pfe-icon]):not([is_nested]):not(.expanded)) {\n  --pfe-navigation__trigger-icon--Visible: hidden;\n}\n\n/* ----------------- */\n/*  TRIGGER STYLES   */\n/* ----------------- */\n.pfe-navigation-item__trigger {\n  @each $prop in (text-decoration, text-decoration--hover, text-decoration--focus) {\n    --pfe-theme--link--#{$prop}: none;\n  }\n\n  @each $prop in (text, ui-link, ui-link--hover, ui-link--visited, ui-link--focus) {\n    --pfe-broadcasted--color--#{$prop}: #{pfe-local($cssvar: Color, $fallback: #{$trigger--Color--fallback})};\n  }\n\n  // Enforce the font-size for the navigation regardless of h-level settings\n  @each $level in (alpha, beta, gamma) {\n    --pfe-theme--font-size--#{$level}:   #{pfe-local($cssvar: FontSize, $region: trigger, $fallback: #{$trigger--FontSize--fallback})};\n    --pfe-theme--font-weight--#{$level}: #{pfe-local($cssvar: FontWeight, $fallback: #{$trigger--FontWeight--fallback})};\n  }\n\n  border-top: #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-local(BorderTopColor)};\n  border-right: #{pfe-var(surface--border-width)} dashed #{pfe-local(BorderColor)};\n  border-bottom: #{pfe-var(surface--border-width)} dashed #{pfe-local(BorderColor)};\n  border-left: #{pfe-var(surface--border-width)} dashed #{pfe-local(BorderColor)};\n  background-color: #{pfe-local(BackgroundColor)};\n  padding: calc(#{pfe-var(container-padding)} / 2) #{pfe-var(container-padding)} !important;\n\n  position: relative;\n  flex-grow: 1;\n  \n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  transition: all #{pfe-var(animation-timing)};\n\n  outline: none;\n\n  &:hover {\n    --pfe-navigation--BorderTopColor: #{pfe-color(surface--accent)};\n    --pfe-navigation__trigger-icon--Visible: visible;\n\n    cursor: pointer;\n\n    :host([variant=\"wind\"]) & {\n      --pfe-navigation--Color: #{pfe-color(ui-link--hover)};\n    }\n\n    :host([has_tray]:not([pfe-icon]):not([is_nested]):not(.expanded)) & {\n      --pfe-navigation__trigger-icon--Visible: visible;\n      @include pfe-arrow-color(#{pfe-local(Color)});\n    }\n\n    :host([is_nested]:not([parent_hidden])) & {\n      border-left: #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-local(BorderLeftColor--focus)};\n    }\n\n    @media screen and (min-width: #{pfe-breakpoint(xl)}) {\n      :host([has_tray]:not(.expanded)) & {\n        --pfe-navigation__trigger-icon--Visible: visible;\n      }\n    }\n  }\n\n  &:focus {\n    --pfe-navigation--BorderTopColor: #{pfe-color(surface--accent)};\n    --pfe-navigation--BorderColor: #{pfe-color(surface--lightest)};\n\n    :host([variant=\"wind\"]) & {\n      --pfe-navigation--Color: #{pfe-color(ui-link--focus)};\n    }\n  }\n\n  // After element is the filled-in dropdown caret\n  :host(:not([pfe-icon])) &::after {\n    display: block;\n    content: \" \";\n    visibility: pfe-local($cssvar: Visible, $region: trigger-icon, $fallback: hidden);\n\n    @include pfe-arrow(down, #{pfe-color(feedback--default)}, $width: 6px, $height: 6px);\n    position: absolute;\n    bottom: #{pfe-var(container-spacer)};\n  }\n\n  // At mobile if inside the main context, update the color to a text color\n  :host([is_nested]:not([parent_hidden])) & {\n    --pfe-navigation--Color: #{pfe-local(aux)};\n\n    @include pfe-trigger-button;\n\n    box-sizing: border-box;\n    align-items: stretch;\n  }\n\n  :host([is_nested].expanded:not([parent_hidden])) & {\n    @include pfe-trigger-expanded;\n    @include pfe-trigger-color-expanded($component-name: navigation);\n  }\n    \n  // Chevron styles for the navigation accordion on mobile\n  &::after {\n    :host([is_nested]:not(.expanded):not([parent_hidden])) & {\n      @include pfe-chevron-expanded($state: false);\n    }\n\n    :host([is_nested].expanded:not([parent_hidden])) & {\n      @include pfe-chevron-expanded;\n    }\n\n    :host([is_nested]:not([parent_hidden])) & {\n      --pfe-navigation__trigger-icon--Visible: visible;\n      border-color: #{pfe-local(Color)};\n    }\n\n    :host([is_nested]:not([has_tray]):not([parent_hidden])) & {\n      transform: rotate(-45deg);\n    }\n  }\n\n  :host([variant=\"wind\"]) & {\n    --pfe-navigation--Color: #{pfe-color(ui-link)};\n    --pfe-navigation--BackgroundColor: transparent !important;\n\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: flex-start;\n\n    border: none;\n    padding: calc(#{pfe-var(container-padding)} / 2) 0;\n  }\n\n  pfe-icon {\n    --pfe-icon--Color: #{pfe-local(Color)};\n\n    margin-bottom: calc(#{pfe-var(container-spacer)} / 2);\n\n    :host([variant=\"wind\"]) & {\n      margin-bottom: 0;\n      margin-right: calc(#{pfe-var(container-spacer)} / 2);\n    }\n    \n    &[icon=\"web-plus\"] {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n// Typography styles\n::slotted([slot=\"trigger\"]) {\n  @extend %trigger;\n}\n\n/* ----------------- */\n/*    TRAY STYLES    */\n/* ----------------- */\n.pfe-navigation-item__tray {\n  --pfe-navigation--Color: #{pfe-color(text)};\n  --pfe-navigation--FontWeight: #{pfe-color(text)};\n\n  @each $prop in (text, ui-link, ui-link--hover, ui-link--visited, ui-link--focus) {\n    --pfe-broadcasted--color--#{$prop}: #{pfe-color($prop)};\n  }\n\n  transition: all #{pfe-var(animation-timing)};\n  box-sizing: border-box;\n\n  display: none;\n  visibility: hidden;\n  \n  &[aria-expanded=\"true\"] {\n    display: block;\n    visibility: visible;\n  }\n\n  :host([show_links]:not([parent_hidden])) & {\n    flex-grow: 1;\n    display: flex;\n    visibility: visible;\n    width: 100%;\n  }\n\n  :host([pfe-icon=\"web-mobile-menu\"]:not([show_links])) &,\n  :host(:not([pfe-icon=\"web-mobile-menu\"]):not([is_nested])) &,\n  :host([is_nested][parent_hidden]) & {\n    position: absolute;\n    top: 100%;\n    left: 0;\n\n    background-color: #{pfe-color(surface--lightest)};\n    color: #{pfe-local(Color)};\n\n    padding: #{pfe-local($cssvar: Padding, $region: tray)};\n    width: 100%;\n    max-height: calc(100vh - var(--pfe-navigation--Height, 84px));\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  //  Styles for the nested elements\n  :host([is_nested]:not([parent_hidden])) & {\n    --pfe-navigation--Padding: calc(#{pfe-local(Padding--vertical)} / 2)  #{pfe-local(Padding--horizontal)};\n\n    @include pfe-container;\n  }\n\n  :host([is_nested]:not([parent_hidden])) & {\n    @include pfe-accordion-panel;\n    box-sizing: border-box;\n    width: 100%;\n  }\n\n  :host([is_nested].expanded:not([parent_hidden])) & {\n    @include pfe-accordion-panel-expanded;\n    @include pfe-accordion-panel-expanded-style;\n  }\n}\n\n::slotted([slot=\"tray\"]) {\n  display: flex;\n  flex-grow: 1;\n}\n\n:host([is_nested]:not([parent_hidden])) {\n  @include pfe-trigger-color($component-name: navigation);\n}\n\n// Styles for navigation items appearing inside the mobile menu\n:host([is_nested][first]:not([parent_hidden])) {\n  @include pfe-trigger-button-first($theme: light);\n}\n\n// Let the main item or the tray be hidden with the attribute\n:host([hidden]:not([show_tray])),\n:host([show_links]) > .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__tray,\n:host(:not(.expanded):not([show_links])) .pfe-navigation-item__tray {\n  display: none;\n  visibility: hidden;\n}\n\n:host([show_tray]),\n:host([show_links]) ::slotted([slot=\"tray\"][hidden]) {\n  display: flex;\n  visibility: visible;\n  flex-grow: 1;\n}\n\n// @TODO set up tray opening animation?\n// :host(.animating) {\n//   transition: transform 0.3s #{pfe-var(animation-timing)};\n// }\n","@import \"../../pfe-sass/pfe-sass\";\n\n$overlay--BackgroundColor--fallback: rgba(37, 37, 37, 0.5);\n\n$trigger--FontSize--fallback:   #{map-get($pfe-vars, font-size--heading--zeta)};\n$trigger--FontWeight--fallback: #{map-get($pfe-vars, font-weight--light)};\n$trigger--Color--fallback: #{map-get($pfe-colors, text--on-dark)};\n\n$LOCAL: navigation;\n$USE-FALLBACK: true; // turn on automatic fallbacks for broadcasted variables\n\n// -- Typography\n%link-styles {\n    color: #{pfe-radio(color, ui-link)};\n    text-decoration: #{pfe-var(link, text-decoration)};\n    &:visited {\n        color: #{pfe-radio(color, ui-link, visited)};\n    }\n    &:hover {\n        color: #{pfe-radio(color, ui-link, hover)};\n        text-decoration: #{pfe-var(link, text-decoration, hover)};\n    }\n    &:focus {\n        outline-offset: 1px;\n        outline-style: dotted;\n        outline-width: 1px;\n        outline-color: #{pfe-radio(color, ui-link, focus)};\n        color: #{pfe-radio(color, ui-link, focus)};\n    }\n}\n\n%trigger {\n    font-family: pfe-var(font-family);\n    font-size:   pfe-local($cssvar: FontSize, $region: trigger, $fallback: #{$trigger--FontSize--fallback});\n    font-weight: pfe-local($cssvar: FontWeight, $fallback: #{$trigger--FontWeight--fallback});\n    color:       pfe-local($cssvar: Color, $fallback: #{$trigger--Color--fallback});\n\n    white-space: nowrap;\n\n    margin: 0 !important;\n}","@function pfe-strip-unit($number) {\n    @if type-of($number) == \"number\" and not unitless($number) {\n      @return $number / ($number * 0 + 1);\n    }\n  \n    @return $number;\n  }\n\n@function pfe-size-pem($pxval, $base: $pfe-global--font-size-root) {\n    @return pfe-strip-unit($pxval) / $base * 1em;\n}\n\n@function pfe-size-prem($pxval, $base: $pfe-global--font-size-root) {\n    @return pfe-strip-unit($pxval) / $base * 1rem;\n}\n\n@function pfe-size-rem2px($remval, $base: $pfe-global--font-size-root) {\n    @return pfe-strip-unit($remval) * ($base / 1px);\n}\n\n/// Map deep get\n/// @author Hugo Giraudel\n/// @access public\n/// @param {Map} $map - Map\n/// @param {Arglist} $keys - Key chain\n/// @return {*} - Desired value\n@function map-deep-get($map, $keys...) {\n    @each $key in $keys {\n        @if type-of($map)==\"map\" {\n            $map: map-get($map, $key);\n        }\n\n        @else {\n            @warn \"Map provided is not a map.\"\n        }\n    }\n\n    @return $map;\n}\n\n// Collect all maps and merge them together\n@function map-collect($maps...) {\n    $collection: ();\n\n    @each $map in $maps {\n        $collection: map-merge($collection, $map);\n    }\n\n    @return $collection;\n}\n\n// New color function to only return theme colors\n@function color($name, $theme: \"light\", $opacity: 1) {\n    $map: map-get($color-map, $name);\n    $error: false;\n    $color: null;\n\n    @if $map !=null {\n        $color: map-get($map, $theme);\n    }\n\n    @else {\n        $error: true;\n    }\n\n    @if type-of($color)==color {\n        @if $opacity==1 {\n            @return $color;\n        }\n\n        @if $opacity < 1 {\n            @return rgba($color, $opacity);\n        }\n    }\n\n    @else {\n        $error: true;\n    }\n\n    @if $error {\n        @warn \"#{$name} is not a valid color\";\n    }\n}\n\n// https://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/\n// Get the first item in a list\n@function first($list) {\n    @return nth($list, 1);\n}\n\n// Get the last item in a list\n@function last($list) {\n    @return nth($list, length($list));\n}\n\n@function str-replace($string, $search, $replace: \"\") {\n    @if type-of($string)==\"string\"and type-of($search)==\"string\" {\n        $index: str-index($string, $search);\n\n        @if $index {\n            @return str-slice($string, 1, $index - 1)+$replace+str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n        }\n    }\n\n    @return $string;\n}\n\n@function to-string($list, $glue: '', $is-nested: false) {\n    $result: null;\n\n    @for $i from 1 through length($list) {\n        $e: nth($list, $i);\n\n        @if type-of($e)==list {\n            $result: $result#{to-string($e, $glue, true)};\n        }\n\n        @else {\n            $result: if($i !=length($list) or $is-nested,\n            $result#{$e}#{$glue},\n            $result#{$e});\n        }\n    }\n\n    @return $result;\n}\n\n@function str-split($string, $separator) {\n    // empty array/list\n    $split-arr: ();\n    // first index of separator in string\n    $index: str-index(\"#{$string}\", $separator);\n\n    // loop through string\n    @while $index !=null {\n        // get the substring from the first character to the separator\n        $item: str-slice($string, 1, $index - 1);\n        // push item to array\n        $split-arr: append($split-arr, $item);\n        // remove item and separator from string\n        $string: str-slice($string, $index + 1);\n        // find new index of separator\n        $index: str-index($string, $separator);\n    }\n\n    // add the remaining string to list (the last item) and return\n    @return append($split-arr, $string);\n}\n\n// https://github.com/HugoGiraudel/SassyStrings/blob/master/dist/_SassyStrings.scss\n/// Remove all trailing and leading whitespaces from `$string`.\n/// @since 1.2.0\n/// @param {String} $string - string\n/// @return {String}\n\n@function str-trim($string) {\n    $start: 1;\n    $end: str-length($string);\n\n    @for $i from 1 through str-length($string) {\n        $first: str-slice($string, $i, $i);\n        $last: str-slice($string, -$i, -$i);\n\n        @if $first==\" \"and $i+1==$start+1 {\n            $start: $i + 1;\n        }\n\n        @if $last==\" \"and str-length($string) - $i==$end - 1 {\n            $end: str-length($string) - $i;\n        }\n    }\n\n    @return str-slice($string, $start, $end);\n}\n\n// https://github.com/HugoGiraudel/SassyStrings/blob/master/dist/_SassyStrings.scss\n/// Check whether `$string` stars with `$needle`.\n/// @param {String} $string - string to check\n/// @param {String} $needle - substring to check\n/// @return {Bool}\n\n@function str-starts-with($string, $needle) {\n    @return str-slice($string, 1, str-length($needle))==$needle;\n}\n\n// https://hugogiraudel.com/2013/08/08/advanced-sass-list-functions/#removing-values-from-list\n@function remove($list, $value, $recursive: false) {\n    $result: ();\n\n    @for $i from 1 through length($list) {\n        @if type-of(nth($list, $i))==list and $recursive {\n            $result: append($result, remove(nth($list, $i), $value, $recursive));\n        }\n\n        @else if nth($list, $i) !=$value {\n            $result: append($result, nth($list, $i));\n        }\n    }\n\n    @return $result;\n}\n\n\n\n/// Var\n///\n/// Returns CSS Var stack with exposed theme Var and respective SCSS fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {Map} $map - SASS Map of variables\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @use -\n///\n///     1.look up a color: /elements/pfe-sass/variables/_maps.scss\n///         (FYI, maps references: /elements/pfe-sass/variables/_colors.scss)\n///\n///     2. use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var(  container-spacer  )};\n///           font-size:   #{pfe-var(  font-size  )};\n///         }\n///         ```\n@function pfe-var($cssvar, $category: '', $fallback: null, $map: $pfe-vars) {\n    @if $category !=\"\" {\n        $category: \"#{$category}--\";\n    }\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--#{$category}#{$cssvar}\";\n    // If a fallback is defined, pass that in too\n    @if $fallback != null or map-get($map, $cssvar) != null {\n        @if $fallback == null {\n            $fallback: map-get($map, $cssvar);\n        }\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n\n\n/// Var Fallback\n///\n/// Returns the SCSS fallback value only\n///\n/// @param {String} $size - Variable name to be used and prepended with --pfe-theme\n/// @use -\n/// ```\n/// @media screen and (min-width: pfe-breakpoint(sm)) {\n///    --pfe-band--width: #{pfe-breakpoint(sm) - $box-padding * 2};\n/// }\n/// ```\n@function pfe-breakpoint($size, $max: false) {\n    $bp: map-get($pfe-vars, grid-breakpoint--#{$size});\n    @if $max {\n        $bp: (pfe-strip-unit($bp) - 1) * 1px;\n    }\n    @return $bp;\n}\n\n/// Color\n///\n/// Returns CSS Var stack with exposed theme Var and respective SCSS fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $category - Category name to be appended to variables within the map/system, default is \"color\"\n/// @param {Map} $map - SASS Map of variables\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @use -\n///\n///     1.look up a color: /elements/pfe-sass/variables/_maps.scss\n///         (FYI, maps references: /elements/pfe-sass/variables/_colors.scss)\n///\n///     2. use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-color(  surface--base--text  )};\n///           background:  #{pfe-color(  surface--base )};\n///         }\n///         ```\n@function pfe-color($cssvar, $category: 'color', $map: $pfe-colors) {\n    @if $category !=\"\" {\n        $category: \"#{$category}--\";\n    }\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--#{$category}#{$cssvar}\";\n    // If a fallback is defined, pass that in too\n    @if map-get($map, $cssvar) != null {\n        $var-declaration: \"#{$var-declaration}, #{map-get($map, $cssvar)}\";\n    }\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n@function pfe-fallback($cssvar, $category: 'color', $map: $pfe-colors) {\n    @if $category !=\"\" {\n        $category: \"#{$category}--\";\n    }\n    // Return the variable declaration string\n    @return #{map-get($map, $cssvar)};\n}\n\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop`)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    // If a fallback is defined, pass that in too\n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Radio\n///\n/// Returns CSS Var for a broadcasted variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {Boolean} $USE-FALLBACK - global default is false; by setting this global var to true, adds fallbacks to broadcasted variables\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @use -\n///     ```\n///     a:visited {\n///         color:       #{pfe-radio(  color, ui-link, visited  )};\n///     }\n///     ```\n///\n/// @returns - var(--pfe-broadcasted--color--ui-link--visited);\n///\n@function pfe-radio($cssvar...) {\n    $fallback: \"\";\n    $varname: #{to-string($cssvar, '--')};\n    @if $USE-FALLBACK {\n        @if str-starts-with($varname, \"color\") {\n            $cssvar: remove($cssvar, \"color\");\n            $fallback: map-get($pfe-colors, #{to-string($cssvar, '--')});\n        }\n        @else if str-starts-with($varname, \"ui\") {\n            $fallback: map-get($pfe-colors, #{to-string($cssvar, '--')});\n        }\n        @else {\n            $fallback: map-get($pfe-vars, $varname);\n        }\n    }\n\n    @if $fallback != \"\" {\n        @return var(--#{$repo}-broadcasted--#{$varname}, $fallback);\n    }\n    @else {\n        @return var(--#{$repo}-broadcasted--#{$varname});\n    }\n}","::slotted([slot=\"trigger\"]) {\n  font-family: var(--pfe-theme--font-family, \"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif);\n  font-size: var(--pfe-navigation__trigger--FontSize, 14px);\n  font-weight: var(--pfe-navigation--FontWeight, 300);\n  color: var(--pfe-navigation--Color, #fff);\n  white-space: nowrap;\n  margin: 0 !important;\n}\n\n:host {\n  --pfe-navigation--BackgroundColor: transparent;\n  --pfe-navigation--Color:           var(--pfe-theme--color--surface--darkest--text, #fff);\n  --pfe-navigation--BorderColor:     transparent;\n  --pfe-navigation--BorderTopColor:  transparent;\n  --pfe-navigation__trigger-icon--Visible: hidden;\n  --pfe-navigation__trigger--FontSize: 16px;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n}\n\n:host([aria-current=\"location\"]) {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--surface--accent, #fe460d);\n}\n\n:host(.expanded) {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  --pfe-navigation--BorderColor:     var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--BorderTopColor:  var(--pfe-theme--color--surface--accent, #fe460d);\n  --pfe-navigation--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--Color: var(--pfe-theme--color--surface--lightest--text, #333);\n}\n\n:host([pfe-icon]) {\n  --pfe-navigation__trigger--FontSize: 14px;\n}\n\n:host(:not([has_tray])),\n:host([pfe-icon]),\n:host(:not([pfe-icon]):not([is_nested]):not(.expanded)) {\n  --pfe-navigation__trigger-icon--Visible: hidden;\n}\n\n/* ----------------- */\n/*  TRIGGER STYLES   */\n/* ----------------- */\n.pfe-navigation-item__trigger {\n  --pfe-theme--link--text-decoration: none;\n  --pfe-theme--link--text-decoration--hover: none;\n  --pfe-theme--link--text-decoration--focus: none;\n  --pfe-broadcasted--color--text: var(--pfe-navigation--Color, #fff);\n  --pfe-broadcasted--color--ui-link: var(--pfe-navigation--Color, #fff);\n  --pfe-broadcasted--color--ui-link--hover: var(--pfe-navigation--Color, #fff);\n  --pfe-broadcasted--color--ui-link--visited: var(--pfe-navigation--Color, #fff);\n  --pfe-broadcasted--color--ui-link--focus: var(--pfe-navigation--Color, #fff);\n  --pfe-theme--font-size--alpha:   var(--pfe-navigation__trigger--FontSize, 14px);\n  --pfe-theme--font-weight--alpha: var(--pfe-navigation--FontWeight, 300);\n  --pfe-theme--font-size--beta:   var(--pfe-navigation__trigger--FontSize, 14px);\n  --pfe-theme--font-weight--beta: var(--pfe-navigation--FontWeight, 300);\n  --pfe-theme--font-size--gamma:   var(--pfe-navigation__trigger--FontSize, 14px);\n  --pfe-theme--font-weight--gamma: var(--pfe-navigation--FontWeight, 300);\n  border-top: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderTopColor);\n  border-right: var(--pfe-theme--surface--border-width, 1px) dashed var(--pfe-navigation--BorderColor);\n  border-bottom: var(--pfe-theme--surface--border-width, 1px) dashed var(--pfe-navigation--BorderColor);\n  border-left: var(--pfe-theme--surface--border-width, 1px) dashed var(--pfe-navigation--BorderColor);\n  background-color: var(--pfe-navigation--BackgroundColor);\n  padding: calc(var(--pfe-theme--container-padding, 16px) / 2) var(--pfe-theme--container-padding, 16px) !important;\n  position: relative;\n  flex-grow: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n  outline: none;\n}\n\n.pfe-navigation-item__trigger:hover {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--surface--accent, #fe460d);\n  --pfe-navigation__trigger-icon--Visible: visible;\n  cursor: pointer;\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation--Color: var(--pfe-theme--color--ui-link--hover, #003366);\n}\n\n:host([has_tray]:not([pfe-icon]):not([is_nested]):not(.expanded)) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  border-top-color: var(--pfe-navigation--Color);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover {\n  border-left: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-navigation--BorderLeftColor--focus);\n}\n\n@media screen and (min-width: 1200px) {\n  :host([has_tray]:not(.expanded)) .pfe-navigation-item__trigger:hover {\n    --pfe-navigation__trigger-icon--Visible: visible;\n  }\n}\n\n.pfe-navigation-item__trigger:focus {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--surface--accent, #fe460d);\n  --pfe-navigation--BorderColor: var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger:focus {\n  --pfe-navigation--Color: var(--pfe-theme--color--ui-link--focus, #003366);\n}\n\n:host(:not([pfe-icon])) .pfe-navigation-item__trigger::after {\n  display: block;\n  content: \" \";\n  visibility: var(--pfe-navigation__trigger-icon--Visible, hidden);\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  border-width: 6px 6px 0;\n  border-color: transparent;\n  border-top-color: var(--pfe-theme--color--feedback--default, #606060);\n  transform: rotate(0deg);\n  position: absolute;\n  bottom: var(--pfe-theme--container-spacer, 16px);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--Color: var(--pfe-navigation--aux);\n  margin: 0;\n  width: 100%;\n  height: auto;\n  font-family: inherit;\n  font-weight: var(--pfe-theme--font-weight--bold, 700);\n  text-align: left;\n  cursor: pointer;\n  z-index: 1;\n  position: relative;\n  font-size: calc(var(--pfe-theme--font-size, 16px) * 1.1);\n  line-height: var(--pfe-theme--line-height, 1.5);\n  color: var(--pfe-navigation--aux);\n  background-color: var(--pfe-navigation--main);\n  border-left: var(--pfe-navigation--BorderLeft);\n  border-right: var(--pfe-navigation--BorderRight);\n  border-bottom: var(--pfe-navigation--BorderBottom);\n  border-top: 0;\n  padding: var(--pfe-theme--container-spacer, 16px) 50px var(--pfe-theme--container-spacer, 16px) calc(var(--pfe-theme--container-spacer, 16px) * 1.5) !important;\n  box-sizing: border-box;\n  align-items: stretch;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover {\n  outline: none;\n  border-left-color: var(--pfe-navigation--BorderLeftColor--focus);\n  z-index: 2;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:focus {\n  outline: none;\n  z-index: 2;\n  text-decoration: underline;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger::-moz-focus-inner {\n  border: 0;\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__trigger {\n  position: relative;\n  display: block;\n  border-bottom: 0;\n  --pfe-navigation--main:              var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--aux:               var(--pfe-theme--color--surface--lightest--text, #333);\n  --pfe-navigation--focus:             var(--pfe-theme--color--surface--lightest--link, #06c);\n  --pfe-navigation--BorderLeft:        var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--lightest--link, #06c);\n  --pfe-navigation--BorderRight:       var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n:host([is_nested]:not(.expanded):not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  content: \"\";\n  position: absolute;\n  top: calc((var(--pfe-theme--container-spacer, 16px) * 0.75) + 0.5935em);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.313em;\n  width: 0.313em;\n  text-align: center;\n  transition: transform 0.15s;\n  border-width: 0 0.15em 0.15em 0;\n  transform: rotate(45deg);\n  right: calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  content: \"\";\n  position: absolute;\n  top: calc((var(--pfe-theme--container-spacer, 16px) * 0.75) + 0.5935em);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.313em;\n  width: 0.313em;\n  text-align: center;\n  transition: transform 0.15s;\n  border-width: 0.15em 0.15em 0 0;\n  border-bottom: 0;\n  transform: rotate(-45deg);\n  right: calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  border-color: var(--pfe-navigation--Color);\n}\n\n:host([is_nested]:not([has_tray]):not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  transform: rotate(-45deg);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger {\n  --pfe-navigation--Color: var(--pfe-theme--color--ui-link, #06c);\n  --pfe-navigation--BackgroundColor: transparent !important;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: flex-start;\n  border: none;\n  padding: calc(var(--pfe-theme--container-padding, 16px) / 2) 0;\n}\n\n.pfe-navigation-item__trigger pfe-icon {\n  --pfe-icon--Color: var(--pfe-navigation--Color);\n  margin-bottom: calc(var(--pfe-theme--container-spacer, 16px) / 2);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger pfe-icon {\n  margin-bottom: 0;\n  margin-right: calc(var(--pfe-theme--container-spacer, 16px) / 2);\n}\n\n.pfe-navigation-item__trigger pfe-icon[icon=\"web-plus\"] {\n  transform: rotate(-45deg);\n}\n\n/* ----------------- */\n/*    TRAY STYLES    */\n/* ----------------- */\n.pfe-navigation-item__tray {\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #333);\n  --pfe-navigation--FontWeight: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--color--text: var(--pfe-theme--color--text, #333);\n  --pfe-broadcasted--color--ui-link: var(--pfe-theme--color--ui-link, #06c);\n  --pfe-broadcasted--color--ui-link--hover: var(--pfe-theme--color--ui-link--hover, #003366);\n  --pfe-broadcasted--color--ui-link--visited: var(--pfe-theme--color--ui-link--visited, rebeccapurple);\n  --pfe-broadcasted--color--ui-link--focus: var(--pfe-theme--color--ui-link--focus, #003366);\n  transition: all var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n  box-sizing: border-box;\n  display: none;\n  visibility: hidden;\n}\n\n.pfe-navigation-item__tray[aria-expanded=\"true\"] {\n  display: block;\n  visibility: visible;\n}\n\n:host([show_links]:not([parent_hidden])) .pfe-navigation-item__tray {\n  flex-grow: 1;\n  display: flex;\n  visibility: visible;\n  width: 100%;\n}\n\n:host([pfe-icon=\"web-mobile-menu\"]:not([show_links])) .pfe-navigation-item__tray,\n:host(:not([pfe-icon=\"web-mobile-menu\"]):not([is_nested])) .pfe-navigation-item__tray,\n:host([is_nested][parent_hidden]) .pfe-navigation-item__tray {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  background-color: var(--pfe-theme--color--surface--lightest, #fff);\n  color: var(--pfe-navigation--Color);\n  padding: var(--pfe-navigation__tray--Padding);\n  width: 100%;\n  max-height: calc(100vh - var(--pfe-navigation--Height, 84px));\n  overflow-x: hidden;\n  overflow-y: scroll;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n  --pfe-navigation--Padding: calc(var(--pfe-navigation--Padding--vertical) / 2)  var(--pfe-navigation--Padding--horizontal);\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: calc(var(--pfe-navigation--Padding--vertical) / 2) var(--pfe-navigation--Padding--horizontal);\n}\n\n@media (min-width: 576px) {\n  :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n    padding: var(--pfe-navigation--Padding);\n  }\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n  display: none;\n  overflow: hidden;\n  will-change: height;\n  border-color: transparent;\n  opacity: 0;\n  box-sizing: border-box;\n  width: 100%;\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__tray {\n  display: block;\n  position: relative;\n  opacity: 1;\n  border-right: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) transparent;\n  border-left: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  box-shadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  border-left-color: var(--pfe-theme--color--surface--lightest--link, #06c);\n  background-color: var(--pfe-theme--color--surface--lightest, #fff);\n  border-right-color: var(--pfe-theme--color--surface--border, #d2d2d2);\n  border-bottom: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n::slotted([slot=\"tray\"]) {\n  display: flex;\n  flex-grow: 1;\n}\n\n:host([is_nested]:not([parent_hidden])) {\n  --pfe-navigation--main:         transparent;\n  --pfe-navigation--aux:          var(--pfe-theme--color--surface--lightest--text, #333);\n  --pfe-navigation--BorderLeft:  var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  --pfe-navigation--BorderRight: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) transparent;\n  --pfe-navigation--BorderBottom: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-navigation--BorderLeftColor--focus: var(--pfe-theme--color--surface--lightest--link, #06c);\n}\n\n:host([is_nested][first]:not([parent_hidden])) {\n  border-top: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2);\n}\n\n:host([hidden]:not([show_tray])),\n:host([show_links]) > .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__tray,\n:host(:not(.expanded):not([show_links])) .pfe-navigation-item__tray {\n  display: none;\n  visibility: hidden;\n}\n\n:host([show_tray]),\n:host([show_links]) ::slotted([slot=\"tray\"][hidden]) {\n  display: flex;\n  visibility: visible;\n  flex-grow: 1;\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    /* IE10+ */\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n        @content;\n      }\n    }\n\n    /* Microsoft Edge Browser 12+ (All) */\n    @if $browser == edge {\n      @supports (-ms-ime-align:auto) {\n        @content;\n      }\n    }\n  }\n}\n \n// $boxSize = any box-sizing property, default is border-box\n@mixin pfe-box-sizing($boxSize: border-box) {\n  *, *::before, *::after {\n    box-sizing: $boxSize;\n  }\n}\n\n@mixin pfe-clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n\n@mixin pfe-reset-list() {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n@mixin pfe-reset-box() {\n  margin: 0;\n  padding: 0;\n}\n\n@mixin pfe-reset-button() {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n}\n\n@mixin pfe-sr-only() {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0,0,0,0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n@mixin print-variables-map($variables) {\n  @each $property, $value in $variables {\n    $name: \"--#{$property}\";\n    $styles: $value;\n    @if type-of($value) == \"map\" {\n      @each $prop, $v in $value {\n        $name: \"__#{$property}--#{$prop}\";\n        $styles: $v;\n      }\n    }\n\n    --pfe-#{$LOCAL}#{$name}: #{$styles};\n  }\n}\n\n/// ===========================================================================\n/// Theme Color Vars   - use with on=\"dark\" to affect light DOM\n/// ===========================================================================\n\n@mixin pfe-theme($theme) {\n  // GENERAL CONTEXT-BASED UPDATES, ON=\"DARK\"\n  @if $theme == dark {\n    --pfe-broadcasted--color--text:               #{pfe-color(text--on-dark)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(ui-link--on-dark)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(ui-link--on-dark--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(ui-link--on-dark--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(ui-link--on-dark--focus)};\n  }\n  @else if $theme == light {\n    --pfe-broadcasted--color--text:               #{pfe-color(text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(ui-link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(ui-link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(ui-link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(ui-link--focus)};\n  }\n  // MORE SPECIFIC COLOR BASED UPDATES, COLOR=\"DARKER\"\n  @else if $theme == darker {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--darker--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--darker--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--darker--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--darker--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--darker--link--focus)};\n  }\n  @else if $theme == darkest {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--darkest--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--darkest--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--darkest--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--darkest--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--darkest--link--focus)};\n  }\n  @else if $theme == accent {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--accent--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--accent--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--accent--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--accent--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--accent--link--focus)};\n  }\n  @else if $theme == complement {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--complement--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--complement--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--complement--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--complement--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--complement--link--focus)};\n  }\n\n  @else if $theme == lighter {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--lighter--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--lighter--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--lighter--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--lighter--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--lighter--link--focus)};\n  }\n  @else if $theme == lightest {\n    --pfe-broadcasted--color--text:               #{pfe-color(surface--lightest--text)};\n    --pfe-broadcasted--color--ui-link:            #{pfe-color(surface--lightest--link)};\n    --pfe-broadcasted--color--ui-link--visited:   #{pfe-color(surface--lightest--link--visited)};\n    --pfe-broadcasted--color--ui-link--hover:     #{pfe-color(surface--lightest--link--hover)};\n    --pfe-broadcasted--color--ui-link--focus:     #{pfe-color(surface--lightest--link--focus)};\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: #{pfe-var(surface--border-style)};\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n// scss-lint:disable ImportantRule\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n// scss-lint:enable ImportantRule\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n// Mixin for building slot selectors\n@mixin pfe-slot($slot-name, $selector: \"\") {\n  // This logic makes it much easier to style default slots in a loop\n  // with named slots\n  @if $slot-name != default {\n    ::slotted([slot=\"#{$slot-name}\"]#{$selector}) {\n      @content;\n    }\n  }\n  @else {\n    ::slotted(*) {\n      @content;\n    }\n  }\n}\n\n/// ===========================================================================\n/// Accordion Specific SASS Vars\n/// ===========================================================================\n\n$pfe-expand_button--LineHeight:      1.5;\n$pfe-expand_button--padding:         #{pfe-var(container-spacer)};\n$pfe-expand_button--padding--factor: .75;\n$pfe-expand_button--padding--wide:   calc(#{$pfe-expand_button--padding} * 1.5);\n\n$pfe-expand_chevron--size:           .4em;\n$pfe-expand_chevron--weight:         .1em;\n$pfe-expand_chevron--padding:        3em;\n$pfe-expand_chevron--placement:      #{$pfe-expand_button--LineHeight / 2 - $pfe-expand_chevron--size / 2};\n\n@mixin pfe-accordion-header {\n  display: block;\n  > * {\n    margin: 0;\n  }\n}\n\n@mixin pfe-trigger-button($align: left) {\n    // -webkit-appearance: button;\n    margin: 0;\n    width: 100%;\n    height: auto;\n    font-family: inherit;\n    font-weight: #{pfe-var(font-weight--bold)};\n    text-align: left;\n    cursor: pointer;\n    z-index: 1;\n    position: relative;\n\n    font-size:   calc(#{pfe-var(font-size)} * 1.1);\n    line-height: #{pfe-var(line-height)};\n\n    color:            #{pfe-local(aux)};\n    background-color: #{pfe-local(main)};\n    border-left:      #{pfe-local(BorderLeft)};\n    border-right:     #{pfe-local(BorderRight)};\n    border-bottom:    #{pfe-local(BorderBottom)};\n    border-top: 0;\n\n    &:hover {\n        outline: none;\n        border-left-color: #{pfe-local(BorderLeftColor--focus)};\n        z-index: 2;\n    }\n\n    &:focus {\n        outline: none;\n        z-index: 2;\n        text-decoration: underline;\n    }\n\n    &::-moz-focus-inner {\n        border: 0;\n    }\n\n    @if $align == right {\n        padding: #{$pfe-expand_button--padding} #{$pfe-expand_button--padding--wide} #{$pfe-expand_button--padding} 50px !important;\n    } @else {\n        padding: #{$pfe-expand_button--padding} 50px #{$pfe-expand_button--padding} #{$pfe-expand_button--padding--wide} !important;\n    }\n}\n\n@mixin pfe-trigger-button-last($theme: light) {\n  border-bottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  border-top: 0;\n  // @TODO Support differences based on theme\n}\n\n@mixin pfe-trigger-button-first($theme: light) {\n  border-top: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  // @TODO Support differences based on theme\n}\n\n@mixin pfe-trigger-expanded {\n    position: relative;\n    display: block;\n    border-bottom: 0;\n}\n\n@mixin pfe-trigger-color($component-name, $theme: light) {\n  @if $theme == dark {\n    --pfe-#{$component-name}--main:         transparent;\n    --pfe-#{$component-name}--aux:          #{pfe-color(surface--darkest--text)};\n    --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest)};\n  }\n  @else {\n    --pfe-#{$component-name}--main:         transparent;\n    --pfe-#{$component-name}--aux:          #{pfe-color(surface--lightest--text)};\n\n    --pfe-#{$component-name}--BorderLeft:  #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} transparent;\n    --pfe-#{$component-name}--BorderRight: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n    --pfe-#{$component-name}--BorderBottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n\n    --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest--link)};\n  }\n}\n\n@mixin pfe-trigger-color-expanded($component-name, $theme: light) {\n  @if $theme == dark {\n    --pfe-#{$component-name}--main:         #{pfe-color(surface--darker)};\n    --pfe-#{$component-name}--aux:          #{pfe-color(surface--darkest--text)};\n    --pfe-#{$component-name}--BorderLeft:   #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n    --pfe-#{$component-name}--BorderRight:  #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n\n    --pfe-#{$component-name}--BorderLeftColor--focus: #{pfe-color(surface--lightest)};\n  }\n  @else {\n    --pfe-#{$component-name}--main:              #{pfe-color(surface--lightest)};\n    --pfe-#{$component-name}--aux:               #{pfe-color(surface--lightest--text)};\n    --pfe-#{$component-name}--focus:             #{pfe-color(surface--lightest--link)};\n    --pfe-#{$component-name}--BorderLeft:        #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} #{pfe-color(surface--lightest--link)};\n    --pfe-#{$component-name}--BorderRight:       #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  }\n}\n\n/// ===========================================================================\n/// Accordion chevrons\n/// ===========================================================================\n\n@mixin pfe-chevron-expanded($state: true, $position: after) {\n  content: \"\";\n  position: absolute;\n  top: calc((#{pfe-var(container-spacer)} * #{$pfe-expand_button--padding--factor}) + #{$pfe-expand_chevron--placement} );\n  display: block;\n  border-style: #{pfe-var(surface--border-style)};\n  height: #{$pfe-expand_chevron--size};\n  width:  #{$pfe-expand_chevron--size};\n  text-align: center;\n  transition: transform 0.15s;\n  @if $state {\n    border-width: #{$pfe-expand_chevron--weight} #{$pfe-expand_chevron--weight} 0 0;\n    border-bottom: 0;\n    transform: rotate(-45deg);\n    @if $position == before {\n      left: #{$pfe-expand_button--padding--wide};\n    }\n    @else {\n      right: #{$pfe-expand_button--padding--wide};\n    }\n  }\n  @else {\n    border-width: 0 #{$pfe-expand_chevron--weight} #{$pfe-expand_chevron--weight} 0;\n    transform: rotate(45deg);\n    @if $position == before {\n      left: #{$pfe-expand_button--padding--wide};\n    }\n    @else {\n      right: #{$pfe-expand_button--padding--wide};\n    }\n  }\n}\n\n/// ===========================================================================\n/// Accordion panel\n/// ===========================================================================\n\n@mixin pfe-container {\n  position: relative;\n  display: block;\n  width: 100%;\n\n  padding: calc(#{pfe-local(Padding--vertical)} / 2)  #{pfe-local(Padding--horizontal)};\n\n  @media (min-width: #{pfe-breakpoint(sm)}) {\n     padding: #{pfe-local(Padding)};\n  }\n}\n\n@mixin pfe-accordion-panel {\n  display: none;\n  overflow: hidden;\n  will-change: height;\n  border-color: transparent;\n  opacity: 0;\n}\n\n@mixin pfe-accordion-panel-expanded {\n  display: block;\n  position: relative;\n  opacity: 1;\n}\n\n@mixin pfe-accordion-panel-expanded-style($theme: light) {\n  border-right: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} transparent;\n  border-left: #{pfe-var(surface--border-width--heavy)} #{pfe-var(surface--border-style)} transparent;\n  @if $theme == dark {\n    box-shadow: none;\n    background-color: #{pfe-color(surface--darker)};\n    border-left-color: #{pfe-color(surface--border)};\n    border-right-color: #{pfe-color(surface--border)};\n  }\n  @else {\n    box-shadow: 0 5px #{pfe-var(surface--border-width--heavy)} rgba(140, 140, 140, 0.35);\n    border-left-color: #{pfe-color(surface--lightest--link)};\n    background-color: #{pfe-color(surface--lightest)};\n    border-right-color: #{pfe-color(surface--border)};\n    border-bottom: #{pfe-var(surface--border-width)} #{pfe-var(surface--border-style)} #{pfe-color(surface--border)};\n  }\n}\n\n@mixin pfe-accordion-panel-container-inset($align: left)  {\n  box-sizing: border-box;\n  width: 100%;\n\n  @if $align == left {\n    padding: 0 #{$pfe-expand_chevron--padding} #{$pfe-expand_button--padding} #{$pfe-expand_button--padding--wide};\n  }\n  @else {\n    padding: 0 #{$pfe-expand_button--padding--wide} #{$pfe-expand_button--padding} #{$pfe-expand_chevron--padding};\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;}\n"]}