{"version":3,"sources":["pfe-navigation-item.scss","../../pfe-sass/extends/_extends.scss","../../pfe-sass/functions/_custom-properties.scss","pfe-navigation-item.css","../../pfe-sass/mixins/_mixins.scss","../../pfe-sass/mixins/_custom-properties.scss","../../pfe-sass/mixins/_components.scss","../../pfe-sass/maps/_general.scss","../../../node_modules/@patternfly/patternfly/sass-utilities/colors.scss","../../pfe-sass/mixins/_containers.scss"],"names":[],"mappings":"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RpD,SAAS;EACT,WJVkC;EIUlC,yCJVkC;EIWlC,eAAe;EACf,YAAY;EACZ,kBAAkB;EAGlB,6BJhBkC;EIgBlC,qEJhBkC;EIiBlC,WJjBkC;EIiBlC,iFJjBkC;EIoBlC,eAAe;EACf,mBJ/DkC;EI+DlC,4DJ/DkC;EIgElC,yBJtBkC;EIsBlC,6DJtBkC;EIuBlC,qBJvBkC;EIuBlC,qGJvBkC;EIwBlC,qBJxBkC;EIwBlC,8DJxBkC;EIyBlC,wBJzBkC;EIyBlC,2GJzBkC;EI0BlC,sBJ1BkC;EI0BlC,8GJ1BkC;EIoClC,6DJpCkC;EIsClC,oDJtCkC;UIsClC,4CJtCkC;EIuClC,sCJvCkC;EIqElC,eAAe;EAEf,oBAAoB;EACpB,2BJxEkC;EIwElC,iGJxEkC;EIyElC,gBJnHkC;EImHlC,qDJnHkC;EIoHlC,gBJ1EkC;EI0ElC,kDJ1EkC;EI2ElC,gBJrHkC;EIqHlC,+CJrHkC;EIsHlC,wBJ5EkC;EI4ElC,sGJ5EkC;EFoIhC,8BAAsB;UAAtB,sBAAsB;EACtB,0BAAoB;EAApB,4BAAoB;MAApB,uBAAoB;UAApB,oBAAoB;AGNxB;;AC3MM;EJgMJ;IIhM0F,UAAA;IEyGxF,qBCxFgC;IDyFhC,qBAAuB;IACvB,wBC1FgC;ID2FhC,sBC1FgC;EJkMlC;AACF;;AHrBE;EK/FI,oEAA8C;AFwHpD;;ACzNM;EJgMJ;IIhM0F,UAAA;IE4HtF,uBE9G+B;ELiNnC;AACF;;AHhCE;EMrCE,aAAa;EACb,sBJ1HgC;EI0HhC,sEJ1HgC;ACmMpC;;AHrCE;EMhCI,aAAa;EACb,0BAA0B;AHyEhC;;AH1CE;EM3BI,SAAS;AHyEf;;AH1BE;EKnHI,gFAA8C;EAA9C,gFAA8C;EAA9C,sFAA8C;EAA9C,wCAA8C;EAA9C,+DAA8C;EAA9C,oEAA8C;EAA9C,gHAA8C;EAA9C,2BAA8C;AFwJpD;;AH3BE;EK7HI,iFAA8C;AF4JpD;;AHxBI;EMnBF,WAAW;EACX,kBAAkB;EAClB,qBAAoD;EAApD,yDAAoD;EAEpD,cAAc;EACd,mBJrLkC;EIqLlC,4DJrLkC;EIsLlC,aAR4D;EAS5D,YAT4D;EAU5D,2CAA2B;EA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","file":"pfe-navigation-item.css","sourcesContent":["@import \"_shared-assets\";\n\n$LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n  BackgroundColor: transparent,\n  Color:           pfe-var(text--on-dark),\n  BorderColor:     transparent,\n  BorderTopColor:  transparent,\n  MinWidth:        auto,\n  Height:          84px,\n  trigger-icon: (\n    Visible: hidden\n  ),\n  trigger: (\n    FontSize: $pf-global--FontSize--md,\n    Padding:  calc(#{pfe-var(container-padding)} * .5),\n    MaxWidth: 100%\n  ),\n  tray: (\n    BackgroundColor:  pfe-var(surface--lightest),\n    Color:            pfe-var(text)\n  )\n));\n\n:host {\n  display: flex;\n  flex-direction: column;\n  line-height: 1.2;\n\n  height: 100%;\n  min-width: pfe-local(MinWidth);\n\n  @media screen and (max-width: pfe-breakpoint(xl)) {\n    width: 100%;\n  }\n  @media screen and (min-width: pfe-breakpoint(\"sm-mobile\", $map: false)) {\n    --pfe-navigation__trigger--Padding: #{pfe-var(container-padding)};\n  }\n}\n\n// ---------------------//\n// -- STATES\n// ---------------------//\n\n// Indicates this is the current section the user is visiting\n:host([aria-current=\"location\"]) {\n  --pfe-navigation--BorderTopColor: #{pfe-var(ui-accent)};\n}\n\n// When the navigation item is expanded\n:host(.expanded) {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  --pfe-navigation--BorderColor:     #{pfe-var(surface--lightest)};\n  --pfe-navigation--BorderTopColor:  #{pfe-var(ui-accent)};\n\n  --pfe-navigation--BackgroundColor: #{pfe-var(surface--lightest)};\n  --pfe-navigation--Color: #{pfe-var(text)};\n}\n\n// ---------------------//\n// -- CONTEXTS\n// ---------------------//\n\n// If the navigation item has an icon, i.e. a utility link\n:host([pfe-icon]) {\n  --pfe-navigation--MinWidth: 50px;\n  --pfe-navigation__trigger--FontSize: 12px;\n  --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} * .625);\n  --pfe-navigation__trigger-icon--Visible: hidden;\n  flex: auto;// 1 0 22%;\n  width: auto;\n  min-width: 65px;\n\n  // when utilities are shown in the black bar\n  @media screen and (min-width: 640px) {\n    width: 70px;\n  }\n  @media screen and (max-height: 500px) {\n    --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} / 3) calc(#{pfe-var(container-padding)} *.5);\n  }\n\n  @media screen and (min-width: 1024px) {\n    flex: auto;// 1 0 26%;\n  }\n}\n\n:host(:not([pfe-icon])) {\n  --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} * .75);\n}\n\n// Hide the icon if there is no tray\n:host(:not([has_tray])),\n:host(:not([pfe-icon]):not([is_nested]):not(.expanded)) {\n  --pfe-navigation__trigger-icon--Visible: hidden;\n}\n\n// Mobile menu experience\n:host([is_nested]:not([parent_hidden])) {\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  max-width: pfe-local(Width, $fallback: 100%);\n}\n\n/* ----------------- */\n/*  TRIGGER STYLES   */\n/* ----------------- */\n.pfe-navigation-item__trigger {\n\n  @each $prop in (text-decoration, text-decoration--hover, text-decoration--focus) {\n    --pfe-theme--link--#{$prop}: none;\n  }\n\n  --pfe-broadcasted--text: #{pfe-local(Color)};\n  --pfe-broadcasted--link: #{pfe-local(Color)};\n  @each $state in (hover, focus, visited) {\n    --pfe-broadcasted--link--#{$state}: #{pfe-local(Color)};\n\n  }\n  // --pf-c--title--m-6xl--FontSize\n  // Enforce the font-size for the navigation regardless of h-level settings\n  @each $level in (\"4xl\", \"3xl\", \"2xl\") {\n    --pf-c--title--m-#{$level}--FontSize: #{pfe-local(\n      $cssvar: FontSize,\n      $region: trigger,\n      $fallback: #{pfe-var(FontSize--md)}\n    )};\n  }\n  --pf-c--title--m--font-weight--normal: #{pfe-local(\n    $cssvar: FontWeight,\n    $fallback: #{pfe-var(font-weight--light)}\n  )};\n\n  border-width: pfe-var(surface--border-width);\n  border-style: dashed;\n  border-color: pfe-local(BorderColor);\n\n  border-top-width: pfe-var(surface--border-width--heavy);\n  border-top-style: pfe-var(surface--border-style);\n  border-top-color: pfe-local(BorderTopColor);\n\n  background-color:   pfe-local(BackgroundColor);\n  color:              pfe-local(Color);\n  padding:            pfe-local(Padding, $region: trigger);\n  position:           relative;\n  display:            flex;\n  flex-grow:          1;\n  flex-direction:     column;\n  flex-wrap:          nowrap;\n  align-items:        center;\n  justify-content:    center;\n  transition:         all pfe-var(animation-timing);\n  outline:            none;\n  cursor:             pointer;\n\n  &:hover {\n    --pfe-navigation--BorderTopColor: #{pfe-var(ui-accent)};\n    --pfe-navigation__trigger-icon--Visible: visible;\n\n    :host([variant=\"wind\"]) & {\n      --pfe-navigation--Color: #{pfe-var(link--hover)};\n    }\n\n    :host([has_tray]:not([pfe-icon]):not([is_nested]):not(.expanded)) & {\n      --pfe-navigation__trigger-icon--Visible: visible;\n      @include pfe-arrow-color(#{pfe-local(Color)});\n    }\n\n    @media screen and (min-width: pfe-breakpoint(xl)) {\n      :host([has_tray]:not(.expanded)) & {\n        --pfe-navigation__trigger-icon--Visible: visible;\n      }\n    }\n  }\n\n  &:focus {\n    --pfe-navigation--BorderTopColor: #{pfe-var(ui-accent)};\n    --pfe-navigation--BorderColor:    #{pfe-var(surface--lightest)};\n\n    :host([variant=\"wind\"]) & {\n      --pfe-navigation--Color: #{pfe-var(link--focus)};\n    }\n  }\n\n  // After element is the filled-in dropdown caret.\n  :host(:not([pfe-icon])) &::after {\n    display: block;\n    content: \" \";\n    visibility: pfe-local(Visible, $region: trigger-icon, $fallback: hidden);\n\n    @include pfe-arrow(down, #{pfe-var(feedback--default)}, $width: 6px, $height: 6px);\n    position: absolute;\n    bottom: calc(#{pfe-var(container-spacer)} / 2) ;\n  }\n\n  // At mobile if inside the main context, update the color to a text color\n  :host([is_nested]:not([parent_hidden])) & {\n    --pfe-navigation--Color: #{pfe-var(text)};\n\n    @each $prop in $BROADCAST-VARS {\n      --pfe-broadcasted--#{$prop}: #{pfe-local(Color, $region: tray)};\n    }\n\n    $accordion: pfe-accordion-variables();\n\n    $LOCAL-VARIABLES: map-merge($LOCAL-VARIABLES, (\n      trigger: $accordion\n    ));\n\n    @include pfe-print-local($accordion);\n    @include pfe-trigger;\n\n    box-sizing: border-box;\n    align-items: stretch;\n  }\n\n  :host([is_nested].expanded:not([parent_hidden])) & {\n    $accordion: pfe-accordion-variables($state: expanded);\n\n    $LOCAL-VARIABLES: map-merge($LOCAL-VARIABLES, (\n      trigger: $accordion\n    ));\n\n    @include pfe-print-local($accordion);\n  }\n\n  :host([is_nested][last]:not(.expanded):not([parent_hidden])) & {\n    @include pfe-trigger-last;\n  }\n\n  // Chevron styles for the navigation accordion on mobile\n  &::after {\n    // closed:\n    :host([is_nested]:not(.expanded):not([parent_hidden])) & {\n      @include pfe-chevron($state: closed, $offset: 0px);\n    }\n    // open:\n    :host([is_nested].expanded:not([parent_hidden])) & {\n      @include pfe-chevron($state: open, $offset: 4px);\n    }\n    :host([is_nested]:not([parent_hidden])) & {\n      --pfe-navigation__trigger-icon--Visible: visible;\n      border-color: pfe-local(Color);\n    }\n\n    :host([is_nested]:not([has_tray]):not([parent_hidden])) & {\n      transform: rotate(-45deg);\n    }\n  }\n\n  // The wind variant is used to render an icon with text inline, direct links\n  :host([variant=\"wind\"]) & {\n    --pfe-navigation__trigger--Padding: calc(#{pfe-var(container-padding)} / 2) 0 calc(#{pfe-var(container-padding)} / 2) calc(#{pfe-var(container-spacer)} * 1.5);\n    --pfe-navigation--Color: pfe-var(link);\n    --pfe-navigation--BackgroundColor: transparent !important;\n\n    flex-direction: row;\n    align-items: stretch;\n    justify-content: flex-start;\n\n    border: none;\n  }\n\n  pfe-icon {\n    --pfe-icon--Color: #{pfe-local(Color)};\n\n    :host([variant=\"wind\"]) & {\n      margin-bottom: 0;\n      margin-right: calc(#{pfe-var(container-spacer)} / 2);\n    }\n\n    &[icon=\"web-plus\"] {\n      transform: rotate(-45deg);\n    }\n  }\n}\n\n// Typography styles need specificity over bootstrap\n::slotted([slot=\"trigger\"]) {\n  font-family: pfe-var(font-family);\n  font-size: pfe-local(FontSize, $region: trigger, $fallback: pfe-var(FontSize--md)) !important;\n  font-weight: pfe-local(FontWeight, $fallback: pfe-var(font-weight--light));\n  color: pfe-local(Color, $fallback: pfe-var(text--on-dark));\n  z-index: 2;\n  line-height: 1.1;\n  margin: 0 !important;\n  max-width: 100%; // added\n  text-align: center;\n\n  @media screen and (min-width: pfe-breakpoint(xs) ) {\n      max-width: 100%;\n  }\n  @media screen and (min-width: pfe-breakpoint(xl) ) {\n      max-width: 190px;\n  }\n  \n  :host([pfe-icon]) & {\n    margin: 0.25em 0 0 0 !important;\n    max-width: 100px;\n  }\n}\n\n// Override bootstrap styles\n::slotted(*) {\n  font-size: inherit !important;\n  font-weight: pfe-local(FontWeight, $fallback: #{pfe-var(font-weight--light)}) !important;\n}\n\n/* ----------------- */\n/*    TRAY STYLES    */\n/* ----------------- */\n.pfe-navigation-item__tray {\n  --pfe-navigation--FontWeight: #{pfe-var(text)};\n\n  @include pfe-set-broadcast-context(light);\n\n  transition: all pfe-var(animation-timing);\n  box-sizing: border-box;\n\n  display: none;\n  visibility: hidden;\n\n  &[aria-expanded=\"true\"] {\n    display: block;\n    visibility: visible;\n  }\n\n  :host([show_links]:not([parent_hidden])) & {\n    flex-grow: 1;\n    display: flex;\n    visibility: visible;\n    width: 100%;\n    padding-right: 40px; // ensure gap between main menu links and utility links\n  }\n\n  :host([pfe-icon=\"web-mobile-menu\"]:not([show_links])) &,\n  :host(:not([pfe-icon=\"web-mobile-menu\"]):not([is_nested])) &,\n  :host([is_nested][parent_hidden]) & {\n    position: absolute;\n    top: 100%;\n    left: 0;\n\n    background-color: pfe-local(BackgroundColor, $region: tray);\n    color:            pfe-local(Color, $region: tray);\n    //mobile tray padding\n    padding: pfe-local(Padding, $region: tray);\n    width: 100%;\n    max-height: calc(100vh - #{pfe-local(Height)});\n    overflow-x: hidden;\n    overflow-y: scroll;\n    padding-right: 9px; // OFFSET SCROLLBAR HACK\n  }\n\n  //  Styles for the nested elements\n  :host([is_nested]:not([parent_hidden])) & {\n    @include pfe-collapsible($state: closed);\n    @include pfe-accordion-props;\n    @include pfe-box-sizing;\n    @include pfe-panel-container;\n     //mobile tray padding\n    padding: calc(#{pfe-local(Padding--vertical)} / 2)  calc(#{pfe-local(Padding--horizontal)} * 1.75);\n  }\n\n  :host([is_nested].expanded:not([parent_hidden])) & {\n    $accordion: pfe-accordion-variables($state: expanded);\n\n    $LOCAL-VARIABLES: map-merge($LOCAL-VARIABLES, (\n      trigger: $accordion\n    ));\n\n    @include pfe-print-local($accordion);\n    @include pfe-panel-variables;\n    @include pfe-collapsible($state: open);\n  }\n}\n\n::slotted([slot=\"tray\"]) {\n  display: flex;\n  justify-content: center;\n}\n\n// Let the main item or the tray be hidden with the attribute\n:host([hidden]:not([show_tray])),\n:host([show_links]) > .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__tray,\n:host(:not(.expanded):not([show_links])) .pfe-navigation-item__tray {\n  display: none;\n  visibility: hidden;\n}\n\n:host([show_tray]),\n:host([show_links]) ::slotted([slot=\"tray\"][hidden]) {\n  display: flex;\n  visibility: visible;\n  flex-grow: 1;\n}\n\n// Left-align text in accordions on mobile.\n:host([is_nested]) ::slotted([slot=\"trigger\"]) {\n  text-align: left;\n}\n\n:host([is_nested]) [slot=\"trigger\"] > a {\n  color: pfe-var(text) !important;\n}\n\n:host([pfe-icon=web-mobile-menu]) {\n  align-items: flex-end;\n  flex: 0 1 99%;//0 1 60%;\n}\n\n:host([is_nested][parent_hidden][pfe-full-width]) {\n  .pfe-navigation-item__tray {\n    padding: pfe-local(Padding, $region: tray) 0 pfe-local(Padding, $region: tray);\n  }\n}\n\n// @TODO set up tray opening animation?\n// :host(.animating) {\n//   transition: transform 0.3s #{pfe-var(animation-timing)};\n// }\n","// @todo Change to mixins; no efficiency gain with placeholders in web components\n\n/// Clear box element styles\n%reset-box {\n  margin: 0;\n  padding: 0;\n}\n\n/// Clear list styles\n%reset-list {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n/// Clear button styles\n%reset-button {\n  background-color: transparent;\n  border: none;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n}\n\n/// Set up a container element\n%container {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: pfe-var(container-spacer);\n}\n\n/// Screen-reader only content\n%sr-only {\n  position: absolute;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  width: 1px;\n  margin: -1px;\n  padding: 0;\n  border: 0;\n}\n\n/// Fallback surface styles for IE11 only\n%fallback-surface {\n  @include browser-query(ie11) {\n    background-color: pfe-fetch(surface--lightest) !important;\n    color: pfe-fetch(text) !important;\n  }\n}\n\n/// Fallback text styles for IE11 only\n%fallback-text {\n  @include browser-query(ie11) {\n    color: pfe-fetch(text) !important;\n  }\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}",":host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: var(--pfe-theme--container-spacer, 1rem);\n}\n\n:host {\n  display: flex;\n  flex-direction: column;\n  line-height: 1.2;\n  height: 100%;\n  min-width: var(--pfe-navigation--MinWidth, auto);\n}\n\n@media screen and (max-width: 1200px) {\n  :host {\n    width: 100%;\n  }\n}\n\n@media screen and (min-width: 500px) {\n  :host {\n    --pfe-navigation__trigger--Padding: var(--pfe-theme--container-padding, 1rem);\n  }\n}\n\n:host([aria-current=\"location\"]) {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--ui-accent, #06c);\n}\n\n:host(.expanded) {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  --pfe-navigation--BorderColor:     var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--BorderTopColor:  var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n}\n\n:host([pfe-icon]) {\n  --pfe-navigation--MinWidth: 50px;\n  --pfe-navigation__trigger--FontSize: 12px;\n  --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 1rem) * .625);\n  --pfe-navigation__trigger-icon--Visible: hidden;\n  flex: auto;\n  width: auto;\n  min-width: 65px;\n}\n\n@media screen and (min-width: 640px) {\n  :host([pfe-icon]) {\n    width: 70px;\n  }\n}\n\n@media screen and (max-height: 500px) {\n  :host([pfe-icon]) {\n    --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 1rem) / 3) calc(var(--pfe-theme--container-padding, 1rem) *.5);\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  :host([pfe-icon]) {\n    flex: auto;\n  }\n}\n\n:host(:not([pfe-icon])) {\n  --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 1rem) * .75);\n}\n\n:host(:not([has_tray])),\n:host(:not([pfe-icon]):not([is_nested]):not(.expanded)) {\n  --pfe-navigation__trigger-icon--Visible: hidden;\n}\n\n:host([is_nested]:not([parent_hidden])) {\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  max-width: var(--pfe-navigation--Width, 100%);\n}\n\n/* ----------------- */\n/*  TRIGGER STYLES   */\n/* ----------------- */\n.pfe-navigation-item__trigger {\n  --pfe-theme--link--text-decoration: none;\n  --pfe-theme--link--text-decoration--hover: none;\n  --pfe-theme--link--text-decoration--focus: none;\n  --pfe-broadcasted--text: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link--hover: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link--focus: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pfe-broadcasted--link--visited: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  --pf-c--title--m-4xl--FontSize: var(--pfe-navigation__trigger--FontSize, var(--pf-global--FontSize--md, 1rem));\n  --pf-c--title--m-3xl--FontSize: var(--pfe-navigation__trigger--FontSize, var(--pf-global--FontSize--md, 1rem));\n  --pf-c--title--m-2xl--FontSize: var(--pfe-navigation__trigger--FontSize, var(--pf-global--FontSize--md, 1rem));\n  --pf-c--title--m--font-weight--normal: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300));\n  border-width: var(--pfe-theme--surface--border-width, 1px);\n  border-style: dashed;\n  border-color: var(--pfe-navigation--BorderColor, transparent);\n  border-top-width: var(--pfe-theme--surface--border-width--heavy, 4px);\n  border-top-style: var(--pfe-theme--surface--border-style, solid);\n  border-top-color: var(--pfe-navigation--BorderTopColor, transparent);\n  background-color: var(--pfe-navigation--BackgroundColor, transparent);\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  padding: var(--pfe-navigation__trigger--Padding, calc(var(--pfe-theme--container-padding, 1rem) * .5));\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n  outline: none;\n  cursor: pointer;\n}\n\n.pfe-navigation-item__trigger:hover {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation__trigger-icon--Visible: visible;\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation--Color: var(--pfe-theme--color--link--hover, #004080);\n}\n\n:host([has_tray]:not([pfe-icon]):not([is_nested]):not(.expanded)) .pfe-navigation-item__trigger:hover {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  border-top-color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n}\n\n@media screen and (min-width: 1200px) {\n  :host([has_tray]:not(.expanded)) .pfe-navigation-item__trigger:hover {\n    --pfe-navigation__trigger-icon--Visible: visible;\n  }\n}\n\n.pfe-navigation-item__trigger:focus {\n  --pfe-navigation--BorderTopColor: var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation--BorderColor:    var(--pfe-theme--color--surface--lightest, #fff);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger:focus {\n  --pfe-navigation--Color: var(--pfe-theme--color--link--focus, #004080);\n}\n\n:host(:not([pfe-icon])) .pfe-navigation-item__trigger::after {\n  display: block;\n  content: \" \";\n  visibility: var(--pfe-navigation__trigger-icon--Visible, hidden);\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  border-width: 6px 6px 0;\n  border-color: transparent;\n  border-top-color: var(--pfe-theme--color--feedback--default, #4f5255);\n  transform: rotate(0deg);\n  position: absolute;\n  bottom: calc(var(--pfe-theme--container-spacer, 1rem) / 2);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--text: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  --pfe-broadcasted--link: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  --pfe-broadcasted--link-decoration: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  --pfe-navigation--BorderColor--accent: transparent;\n  --pfe-navigation--BorderColor: var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-navigation--BorderTopWidth: var(--pfe-theme--surface--border-width, 1px);\n  --pfe-navigation--BorderRightWidth: 0;\n  --pfe-navigation--BorderBottomWidth: var(--pfe-theme--surface--border-width, 1px);\n  --pfe-navigation--BorderLeftWidth: var(--pfe-theme--surface--border-width--heavy, 4px);\n  --pfe-navigation--Color: var(--pfe-broadcasted--text, #3c3f42);\n  --pfe-navigation--TextAlign: left;\n  --pfe-navigation--accent: var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation__base--Padding: var(--pfe-theme--container-spacer, 1rem);\n  --pfe-navigation--BorderBottomWidth: 0;\n  --pfe-navigation--ZIndex: 3;\n  --pfe-navigation__trigger--Padding: var(--pfe-navigation__base--Padding) 50px var(--pfe-navigation__base--Padding) calc(var(--pfe-navigation__base--Padding) * 1.5);\n  margin: 0;\n  width: var(--pfe-navigation--Width, 100%);\n  max-width: 100%;\n  height: auto;\n  position: relative;\n  background-color: var(--pfe-navigation--BackgroundColor, transparent);\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  border-width: 0;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  border-color: var(--pfe-navigation--BorderColor, transparent);\n  border-top-width: var(--pfe-navigation--BorderTopWidth, var(--pfe-theme--surface--border-width, 1px));\n  border-right-width: var(--pfe-navigation--BorderRightWidth, 0);\n  border-bottom-width: var(--pfe-navigation--BorderBottomWidth, var(--pfe-theme--surface--border-width, 1px));\n  border-left-width: var(--pfe-navigation--BorderLeftWidth, var(--pfe-theme--surface--border-width--heavy, 4px));\n  border-left-color: var(--pfe-navigation--BorderColor--accent);\n  box-shadow: var(--pfe-navigation--BoxShadow);\n  z-index: var(--pfe-navigation--ZIndex);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--pfe-navigation--FontSize--header, calc(var(--pfe-theme--font-size, 1rem) * 1.1));\n  font-weight: var(--pfe-theme--font-weight--bold, 700);\n  text-align: var(--pfe-navigation--TextAlign, left);\n  line-height: var(--pfe-theme--line-height, 1.5);\n  padding: var(--pfe-navigation__trigger--Padding, calc(var(--pfe-theme--container-padding, 1rem) * .5));\n  box-sizing: border-box;\n  align-items: stretch;\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger {\n    /* IE10+ */\n    border-top-width: 1px;\n    border-right-width: 0;\n    border-bottom-width: 1px;\n    border-left-width: 4px;\n  }\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover, :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:focus {\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover, :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:focus {\n    /* IE10+ */\n    border-left-color: #06c;\n  }\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:hover {\n  outline: none;\n  border-left-width: var(--pfe-theme--surface--border-width--heavy, 4px);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger:focus {\n  outline: none;\n  text-decoration: underline;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger::-moz-focus-inner {\n  border: 0;\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--BorderColor: var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-navigation--BorderRightWidth: var(--pfe-theme--surface--border-width, 1px);\n  --pfe-navigation--BorderLeftWidth: var(--pfe-theme--surface--border-width--heavy, 4px);\n  --pfe-navigation--BackgroundColor: white;\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n  --pfe-navigation--BoxShadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  --pfe-navigation--ZIndex: 3;\n}\n\n:host([is_nested][last]:not(.expanded):not([parent_hidden])) .pfe-navigation-item__trigger {\n  --pfe-navigation--BorderBottomWidth: var(--pfe-theme--surface--border-width, 1px);\n}\n\n:host([is_nested]:not(.expanded):not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  content: \"\";\n  position: absolute;\n  top: calc(var(--pfe-theme--container-spacer, 1rem) + 0px);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.4em;\n  width: 0.4em;\n  transition: transform 0.15s;\n  border-width: 0 .1em .1em 0;\n  transform: rotate(45deg);\n  right: calc(var(--pfe-theme--container-spacer, 1rem) * 1.3125);\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  content: \"\";\n  position: absolute;\n  top: calc(var(--pfe-theme--container-spacer, 1rem) + 4px);\n  display: block;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  height: 0.4em;\n  width: 0.4em;\n  transition: transform 0.15s;\n  border-width: .1em .1em 0 0;\n  border-bottom: 0;\n  transform: rotate(-45deg);\n  top: calc(var(--pfe-theme--container-spacer, 1rem) + 4px);\n  right: calc(var(--pfe-theme--container-spacer, 1rem) * 1.3125);\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  --pfe-navigation__trigger-icon--Visible: visible;\n  border-color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n}\n\n:host([is_nested]:not([has_tray]):not([parent_hidden])) .pfe-navigation-item__trigger::after {\n  transform: rotate(-45deg);\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger {\n  --pfe-navigation__trigger--Padding: calc(var(--pfe-theme--container-padding, 1rem) / 2) 0 calc(var(--pfe-theme--container-padding, 1rem) / 2) calc(var(--pfe-theme--container-spacer, 1rem) * 1.5);\n  --pfe-navigation--Color: pfe-var(link);\n  --pfe-navigation--BackgroundColor: transparent !important;\n  flex-direction: row;\n  align-items: stretch;\n  justify-content: flex-start;\n  border: none;\n}\n\n.pfe-navigation-item__trigger pfe-icon {\n  --pfe-icon--Color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n}\n\n:host([variant=\"wind\"]) .pfe-navigation-item__trigger pfe-icon {\n  margin-bottom: 0;\n  margin-right: calc(var(--pfe-theme--container-spacer, 1rem) / 2);\n}\n\n.pfe-navigation-item__trigger pfe-icon[icon=\"web-plus\"] {\n  transform: rotate(-45deg);\n}\n\n::slotted([slot=\"trigger\"]) {\n  font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif);\n  font-size: var(--pfe-navigation__trigger--FontSize, var(--pf-global--FontSize--md, 1rem)) !important;\n  font-weight: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300));\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  z-index: 2;\n  line-height: 1.1;\n  margin: 0 !important;\n  max-width: 100%;\n  text-align: center;\n}\n\n@media screen and (min-width: 0) {\n  ::slotted([slot=\"trigger\"]) {\n    max-width: 100%;\n  }\n}\n\n@media screen and (min-width: 1200px) {\n  ::slotted([slot=\"trigger\"]) {\n    max-width: 190px;\n  }\n}\n\n:host([pfe-icon]) ::slotted([slot=\"trigger\"]) {\n  margin: 0.25em 0 0 0 !important;\n  max-width: 100px;\n}\n\n::slotted(*) {\n  font-size: inherit !important;\n  font-weight: var(--pfe-navigation--FontWeight, var(--pfe-theme--font-weight--light, 300)) !important;\n}\n\n/* ----------------- */\n/*    TRAY STYLES    */\n/* ----------------- */\n.pfe-navigation-item__tray {\n  --pfe-navigation--FontWeight: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--text: var(--pfe-theme--color--text, #151515);\n  --pfe-broadcasted--link: var(--pfe-theme--color--link, #06c);\n  --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover, #004080);\n  --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus, #004080);\n  --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited, #6753ac);\n  --pfe-broadcasted--link-decoration: var(--pfe-theme--link-decoration, none);\n  --pfe-broadcasted--link-decoration--hover: var(--pfe-theme--link-decoration--hover, underline);\n  --pfe-broadcasted--link-decoration--focus: var(--pfe-theme--link-decoration--focus, underline);\n  --pfe-broadcasted--link-decoration--visited: var(--pfe-theme--link-decoration--visited, none);\n  transition: all var(--pfe-theme--animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));\n  box-sizing: border-box;\n  display: none;\n  visibility: hidden;\n}\n\n.pfe-navigation-item__tray[aria-expanded=\"true\"] {\n  display: block;\n  visibility: visible;\n}\n\n:host([show_links]:not([parent_hidden])) .pfe-navigation-item__tray {\n  flex-grow: 1;\n  display: flex;\n  visibility: visible;\n  width: 100%;\n  padding-right: 40px;\n}\n\n:host([pfe-icon=\"web-mobile-menu\"]:not([show_links])) .pfe-navigation-item__tray,\n:host(:not([pfe-icon=\"web-mobile-menu\"]):not([is_nested])) .pfe-navigation-item__tray,\n:host([is_nested][parent_hidden]) .pfe-navigation-item__tray {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  background-color: var(--pfe-navigation__tray--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n  color: var(--pfe-navigation__tray--Color, var(--pfe-theme--color--text, #151515));\n  padding: var(--pfe-navigation__tray--Padding);\n  width: 100%;\n  max-height: calc(100vh - var(--pfe-navigation--Height, 84px));\n  overflow-x: hidden;\n  overflow-y: scroll;\n  padding-right: 9px;\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n  display: none;\n  overflow: hidden;\n  will-change: height;\n  border-color: transparent;\n  opacity: 0;\n  margin: 0;\n  width: var(--pfe-navigation--Width, 100%);\n  max-width: 100%;\n  height: auto;\n  position: relative;\n  background-color: var(--pfe-navigation--BackgroundColor, transparent);\n  color: var(--pfe-navigation--Color, var(--pfe-theme--color--text--on-dark, #fff));\n  border-width: 0;\n  border-style: var(--pfe-theme--surface--border-style, solid);\n  border-color: var(--pfe-navigation--BorderColor, transparent);\n  border-top-width: var(--pfe-navigation--BorderTopWidth, var(--pfe-theme--surface--border-width, 1px));\n  border-right-width: var(--pfe-navigation--BorderRightWidth, 0);\n  border-bottom-width: var(--pfe-navigation--BorderBottomWidth, var(--pfe-theme--surface--border-width, 1px));\n  border-left-width: var(--pfe-navigation--BorderLeftWidth, var(--pfe-theme--surface--border-width--heavy, 4px));\n  border-left-color: var(--pfe-navigation--BorderColor--accent);\n  box-shadow: var(--pfe-navigation--BoxShadow);\n  z-index: var(--pfe-navigation--ZIndex);\n  --pfe-navigation--BoxShadow: none;\n  padding: var(--pfe-navigation__panel-container--Padding);\n  padding: calc(var(--pfe-navigation--Padding--vertical) / 2) calc(var(--pfe-navigation--Padding--horizontal) * 1.75);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray {\n    /* IE10+ */\n    border-top-width: 1px;\n    border-right-width: 0;\n    border-bottom-width: 1px;\n    border-left-width: 4px;\n  }\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray:hover, :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray:focus {\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n}\n\n@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {\n  :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray:hover, :host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray:focus {\n    /* IE10+ */\n    border-left-color: #06c;\n  }\n}\n\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray *,\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray *::before,\n:host([is_nested]:not([parent_hidden])) .pfe-navigation-item__tray *::after {\n  box-sizing: border-box;\n}\n\n:host([is_nested].expanded:not([parent_hidden])) .pfe-navigation-item__tray {\n  --pfe-navigation--BorderColor: var(--pfe-theme--color--surface--border, #d2d2d2);\n  --pfe-navigation--BorderRightWidth: var(--pfe-theme--surface--border-width, 1px);\n  --pfe-navigation--BorderLeftWidth: var(--pfe-theme--surface--border-width--heavy, 4px);\n  --pfe-navigation--BackgroundColor: white;\n  --pfe-navigation--Color: var(--pfe-theme--color--text, #151515);\n  --pfe-navigation--BorderColor--accent: var(--pfe-navigation--accent);\n  --pfe-navigation--BoxShadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  --pfe-navigation--ZIndex: 3;\n  --pfe-navigation--accent: var(--pfe-theme--color--ui-accent, #06c);\n  --pfe-navigation--BorderTopWidth: 0;\n  --pfe-navigation--BoxShadow: 0 5px var(--pfe-theme--surface--border-width--heavy, 4px) rgba(140, 140, 140, 0.35);\n  display: block;\n  position: relative;\n  opacity: 1;\n}\n\n::slotted([slot=\"tray\"]) {\n  display: flex;\n  justify-content: center;\n}\n\n:host([hidden]:not([show_tray])),\n:host([show_links]) > .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__trigger,\n:host([hidden]) .pfe-navigation-item__tray,\n:host(:not(.expanded):not([show_links])) .pfe-navigation-item__tray {\n  display: none;\n  visibility: hidden;\n}\n\n:host([show_tray]),\n:host([show_links]) ::slotted([slot=\"tray\"][hidden]) {\n  display: flex;\n  visibility: visible;\n  flex-grow: 1;\n}\n\n:host([is_nested]) ::slotted([slot=\"trigger\"]) {\n  text-align: left;\n}\n\n:host([is_nested]) [slot=\"trigger\"] > a {\n  color: var(--pfe-theme--color--text, #151515) !important;\n}\n\n:host([pfe-icon=\"web-mobile-menu\"]) {\n  align-items: flex-end;\n  flex: 0 1 99%;\n}\n\n:host([is_nested][parent_hidden][pfe-full-width]) .pfe-navigation-item__tray {\n  padding: var(--pfe-navigation__tray--Padding) 0 var(--pfe-navigation__tray--Padding);\n}\n","@mixin browser-query($browser-list) {\n  @each $browser in $browser-list {\n    @if $browser == ie11 {\n      @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n        @content;\n      }\n    }\n    @if $browser == edge12 {\n      @supports (-ms-accelerator: true) { /* Microsoft Edge Browser 12+ */\n        @content;\n      }\n    }\n    @if $browser == edge {\n      @supports (-ms-ime-align: auto) { /* Microsoft Edge Browser 16+ (All) */\n        @content;\n      }\n    }\n    @if $browser == firefox {\n      @media all and (min--moz-device-pixel-ratio:0) { /* Mozilla Firefox (All) */\n        @content;\n      }\n    }\n  }\n}\n\n@mixin pfe-transition($properties...) {\n  $return: null;\n  @each $property in $properties {\n    @if length($property) == 1 {\n      $return: append($return, #{$property} 250ms $pfe-global--animation-timing, comma);\n    }\n    @else if length($property) == 2 {\n      $return: append($return, nth($property, 1) nth($property, 2), comma);\n    }\n  }\n  transition: $return;\n}\n\n// Make a CSS arrow\n@mixin pfe-arrow($type, $color, $width: 8px, $height: 5px, $pseudo: false) {\n  $direction: (\n    up: 180deg,\n    down: 0deg,\n    right: -90deg,\n    left: 90deg,\n  );\n  border-style: pfe-var(surface--border-style);\n  border-width: $width $height 0;\n  border-color: transparent;\n  border-top-color: $color;\n  transform: rotate(map-get($direction, $type));\n  @if $pseudo {\n    display: inline-block;\n    content: \"\";\n    @content;\n  }\n}\n\n@mixin pfe-arrow-color($color) {\n  border-top-color: $color;\n}\n\n@mixin pfe-print-media {\n  @media print {\n    @content;\n  }\n}\n\n@mixin pfe-print-background {\n  -webkit-print-color-adjust: exact;\n  color-adjust: exact;\n}\n\n@mixin pfe-no-print-background {\n  @include pfe-print-media {\n    background-color: white !important;\n    background-image: none !important;\n    box-shadow: none !important;\n  }\n}\n\n@mixin pfe-hidden {\n  @at-root #{&}([hidden]) {\n    display: none;\n  }\n}\n\n@mixin pfe-pipe( $position: right, $padding: 0, $margin: 0, $color: $border-color) {\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;\n  border-#{$position}-color: $color;\n  @if $position == right {\n    padding-left: $padding;\n    margin-right: $margin;\n  }\n  @else if $position == left {\n    padding-right: $padding;\n    margin-left: $margin;\n  }\n}\n\n@mixin pfe-retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n@mixin pfe-icon($path, $display: flex, $size: 1em) {\n  display: #{$display};\n  @if $path {\n    background: #{$path} no-repeat;\n    background-size: contain;\n    background-position: center;\n  }\n  width: #{$size};\n  height: #{$size};\n  @content;\n}\n\n@mixin pfe-local-debug($map: $LOCAL-VARIABLES) {\n  :root {\n      @include pfe-print-local($map);\n  }\n} ","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// This will print all the broadcast variables, and set the value to the context of your choosing, like on-dark or on-saturated.\n/// @param {String} $context - Look up values from contexts, i.e. \"light\" or \"saturated\"\n/// @param {List | String} $broadcast [$BROADCAST-VARS] -  Optionally specify only one broadcast variable instead of the whole set, i.e. \"text\"\n/// @see $custom-prop-prefix\n/// @see $BROADCAST-VARS\n/// @example - scss - Usage in a container component, i.e. pfe-card\n///    :host {\n///      @include pfe-set-broadcast-context(dark);\n///    }\n/// @example - css - Rendered output\n///   :host {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///\n@mixin pfe-set-broadcast-context($context, $broadcast: $BROADCAST-VARS) {\n  @each $type in $broadcast {\n    $list: ();\n    $string: \"\";\n    $context_string: \"\";\n    $state: \"\";\n\n    @if str-starts-with($type, \"link\") {\n      $list: append($list, \"#{$type}\");\n\n      @each $s in (hover, focus, visited) {\n        $state: \"--#{$s}\";\n        $string: \"#{$type}#{$state}\";\n\n        @if not index($list, $string) {\n          $list: append($list, \"#{$type}#{$state}\");\n        }\n      }\n    } @else {\n      @if not index($list, $string) {\n        $list: append($list, \"#{$type}\");\n      }\n    }\n\n    @if index($CONTEXTS, $context) != null {\n      @if $context != \"light\" {\n        $context_string: \"--on-#{$context}\";\n      }\n    }\n\n    @each $item in $list {\n      @if not index($BROADCAST-VARS, $type) {\n        @warn \"--#{$custom-prop-prefix}-broadcasted--#{$item} variable is not in the $BROADCAST-VARS list.\";\n      } @else if not pfe-broadcasted(#{$item}#{$context_string}) {\n        @warn \"#{$item}#{$context_string} value does not currently exist.\";\n      } @else {\n        @if index($CONTEXTS, $context) != null {\n          --#{$custom-prop-prefix}-broadcasted--#{$item}: #{pfe-var(#{$item}#{$context_string})};\n        } @else {\n          @error \"The #{$context} context does not appear to be part of a supported context.\";\n        }\n      }\n    }\n  }\n}\n\n/// Returns CSS Variable for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $value - The value of the css variable being defined\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example - scss\n///   :host {\n///       padding-top:      pfe-local(paddingTop);\n///       padding-bottom:   pfe-local(paddingBottom);\n///   }\n@mixin pfe-print-local($map: $LOCAL-VARIABLES) {\n  @each $property, $value in $map {\n    $name: \"--#{$property}\";\n    $styles: $value;\n\n    @if type-of($value) == \"map\" {\n      @each $prop, $v in $value {\n        $name: \"__#{$property}--#{$prop}\";\n        $styles: $v;\n\n        // Print the variable definition\n        --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n      }\n    } @else {\n      // Print the variable definition\n      --#{$custom-prop-prefix}-#{$LOCAL}#{$name}: #{$styles};\n    }\n  }\n}\n\n/// Surface properties\n/// This mixin creates an attribute for all the surface colors, then prints the local background color variable for the component, with the correct context colors.\n/// @param {List | String} $surfaces [$SURFACES] - defaults to the global $SURFACES list of all supported colors\n/// @param {String} $attr-name [pfe-var] - defaults to pfe-var, optionally pass in a custom name for the data attribute\n/// @example - scss - In your component stylesheet\n///   $LOCAL: band;\n///   @include pfe-surfaces;\n/// @example - css - Rendered result\n///   :host([color=\"darker\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darker, #464646);\n///     --context: dark;\n///   }\n///   :host([color=\"darkest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--darkest, #131313);\n///     --context: dark;\n///   }\n///   :host([color=\"base\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--base, #dfdfdf);\n///     --context: light;\n///   }\n///   :host([color=\"lighter\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lighter, #ececec);\n///     --context: light;\n///   }\n///   :host([color=\"lightest\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--lightest, #fff);\n///     --context: light;\n///   }\n///   :host([color=\"accent\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--accent, #ee0000);\n///     --context: saturated;\n///   }\n///   :host([color=\"complement\"]) {\n///     --pfe-band--BackgroundColor: var(--pfe-theme--color--surface--complement, #0477a4);\n///     --context: saturated;\n///   }\n@mixin pfe-surfaces($surfaces: $SURFACE, $attr-name: color) {\n  @each $color in $surfaces {\n    $context: #{pfe-get-context(surface--#{$color}--context)};\n    :host([#{$attr-name}=\"#{$color}\"]) {\n      @include pfe-print-local(\n        (\n          BackgroundColor: pfe-var(surface--#{$color}),\n          context: pfe-var(surface--#{$color}--context, #{$context})\n        )\n      );\n      @extend %fallback-surface;\n    }\n  }\n}\n\n/// Prints the `on` attribute with IE11 fallbacks\n/// @param {List} contexts [$CONTEXTS] - defaults to the global $CONTEXTS list of all supported contexts\n/// @param {Boolean} ie-fallback [true] - defaults to true, prints IE11 fallbacks\n/// @example - scss - In your component styles\n///   @include pfe-contexts; // imports on=\"light\" etc support\n/// @example - css - Rendered outputs\n///   :host([on=\"dark\"]) {\n///     --pfe-broadcasted--text: var(--pfe-theme--color--text--on-dark, #fff);\n///     --pfe-broadcasted--link: var(--pfe-theme--color--link--on-dark, #99ccff);\n///     --pfe-broadcasted--link--hover: var(--pfe-theme--color--link--hover--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--focus: var(--pfe-theme--color--link--focus--on-dark, #cce6ff);\n///     --pfe-broadcasted--link--visited: var(--pfe-theme--color--link--visited--on-dark, #b38cd9);\n///     --pfe-broadcasted--link-decoration: none;\n///     --pfe-broadcasted--link-decoration--hover: underline;\n///     --pfe-broadcasted--link-decoration--focus: underline;\n///     --pfe-broadcasted--link-decoration--visited: none;\n///   }\n///   @media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) { /* IE10+ */\n///     :host([on=\"dark\"]) {\n///       color: #fff;\n///       color: var(--pfe-theme--color--text--on-dark, #fff);\n///     }\n///   }\n///   // ...as well as all the values for :host([on=\"saturated\"])  and  :host([on=\"light\"])\n@mixin pfe-contexts($contexts: $CONTEXTS, $ie-fallback: true) {\n  // Helper attributes to aid in theming\n  @each $context in $contexts {\n    :host([on=\"#{$context}\"]) {\n      @include pfe-set-broadcast-context($context);\n    }\n  }\n  @if $ie-fallback {\n    :host {\n      @extend %fallback-text;\n    }\n  }\n}\n","////\n/// Accordion-specific SASS Vars\n/// @group accordion\n////\n\n@function pfe-accordion-variables($state: default, $context: default, $variant: default) {\n  // Shared variables for all contexts\n  $accordion-styles: ();\n\n  @if $state != expanded { // Default state\n    // Shared variables for all contexts\n    $accordion-styles: (\n      BorderColor--accent: transparent,\n      BorderColor:         pfe-var(surface--border),\n      BorderTopWidth:      pfe-var(surface--border-width),\n      BorderRightWidth:    0,\n      BorderBottomWidth:   pfe-var(surface--border-width),\n      BorderLeftWidth:     pfe-var(surface--border-width--heavy),\n      Color:               pfe-broadcasted(text),\n      TextAlign:           left,\n      accent: pfe-var(ui-accent),\n      base: (\n        Padding:         pfe-var(container-spacer)\n      )\n    );\n\n    @if $context == dark { // Dark context\n      $accordion-styles: (\n        accent: pfe-var(ui-accent--on-dark)\n      );\n    }\n    @else if $context == saturated { // Saturated context\n      $accordion-styles: (\n        accent: pfe-var(ui-accent--on-saturated)\n      );\n    }\n\n    @if $variant == disclosure {\n      $accordion-styles: (\n        BorderRightWidth: pfe-var(surface--border-width),\n        BorderLeftWidth: pfe-var(surface--border-width),\n        BorderColor--accent: pfe-var(surface--border)\n      );\n    }\n  }\n  @else { // Expanded state\n    // Shared variables for all contexts\n    $accordion-styles: (\n      BorderColor:         pfe-var(surface--border),\n      BorderRightWidth:    pfe-var(surface--border-width),\n      BorderLeftWidth:     pfe-var(surface--border-width--heavy),\n      // Defaults for light context\n      BackgroundColor:     rgba(255, 255, 255, 1),\n      Color:               pfe-var(text),\n      BorderColor--accent: pfe-local(accent),\n      BoxShadow: 0 5px pfe-var(surface--border-width--heavy) rgba(140, 140, 140, 0.35),\n      ZIndex: 3\n    );\n\n    @if $context == dark { // Dark context\n      $accordion-styles: (\n        BackgroundColor:    rgba(247, 247, 249, .1),\n        Color:               pfe-broadcasted(text),\n        BorderColor--accent: pfe-var(ui-accent--on-dark),\n        BoxShadow: none\n      );\n    }\n    @else if $context == saturated { // Saturated context\n      $accordion-styles: (\n        BackgroundColor:    rgba(0, 0, 0, 0.2),\n        Color:               pfe-broadcasted(text),\n        BorderColor--accent: pfe-var(ui-accent--on-saturated),\n        BoxShadow: none\n      );\n    }\n    \n    @if $variant == disclosure {\n      $accordion-styles: (\n        BorderLeftWidth: pfe-var(surface--border-width--heavy),\n        BorderColor--accent: pfe-var(ui-accent)\n      );\n    }\n  }\n\n  @return $accordion-styles;\n}\n\n@mixin pfe-accordion-props($variant: default) {\n  margin: 0;\n  width: pfe-local(Width, 100%);\n  max-width: 100%;\n  height: auto;\n  position: relative;\n\n  // Since the default bg color is transparent, look to broadcast values\n  background-color: pfe-local(BackgroundColor, transparent);\n  color:            pfe-local(Color);\n\n  // Border settings\n  border-width: 0;\n  border-style: pfe-var(surface--border-style);\n  border-color: pfe-local(BorderColor);\n  border-top-width:     pfe-local(BorderTopWidth, $fallback: pfe-var(surface--border-width));\n  border-right-width:   pfe-local(BorderRightWidth, $fallback: 0);\n  border-bottom-width:  pfe-local(BorderBottomWidth, $fallback: pfe-var(surface--border-width));\n  border-left-width: pfe-local(BorderLeftWidth, $fallback: pfe-var(surface--border-width--heavy));\n\n  @include browser-query(ie11) {\n    border-top-width:     pfe-fetch(surface--border-width);\n    border-right-width:   0;\n    border-bottom-width:  pfe-fetch(surface--border-width);\n    border-left-width:    pfe-fetch(surface--border-width--heavy);\n  }\n\n  // Custom border color for the accent mark on the left\n  border-left-color: pfe-local(BorderColor--accent);\n\n  box-shadow: pfe-local(BoxShadow);\n  z-index: pfe-local(ZIndex);\n\n  &:hover,\n  &:focus {\n    @include pfe-print-local((\n      BorderColor--accent: pfe-local(accent)\n    ));\n\n    @include browser-query(ie11) {\n      border-left-color: pfe-fetch(ui-accent);\n    }\n  }\n}\n\n//-- Trigger-specific properties\n@mixin pfe-trigger {\n  $chevron--spacing: 50px;\n\n  $LOCAL-VARIABLES: (\n    BorderBottomWidth: 0,\n    ZIndex: 3,\n    trigger: (\n      Padding: pfe-local(Padding, $region: base) $chevron--spacing pfe-local(Padding, $region: base) calc(#{pfe-local(Padding, $region: base)} * 1.5)\n    )\n  );\n\n  @include pfe-print-local($LOCAL-VARIABLES);\n  @include pfe-accordion-props;\n\n  // -webkit-appearance: button;\n  cursor: pointer;\n\n  font-family: inherit;\n  font-size:   pfe-local(FontSize--header, calc(#{pfe-var(font-size)} * 1.1));\n  font-weight: pfe-var(font-weight--bold);\n  text-align:  pfe-local(TextAlign, left);\n  line-height: pfe-var(line-height);\n  padding:     pfe-local(Padding, $region: trigger);\n\n  &:hover {\n    outline: none;\n    border-left-width: pfe-var(surface--border-width--heavy);\n  }\n\n  &:focus {\n      outline: none;\n      text-decoration: underline;\n  }\n\n  &::-moz-focus-inner {\n      border: 0;\n  }\n}\n\n@mixin pfe-trigger-last($context: light) {\n  @include pfe-print-local((\n    BorderBottomWidth: pfe-var(surface--border-width)\n  ));\n}\n\n//-- Panel-specific properties\n@mixin pfe-panel-variables($context: light) {\n  $LOCAL-VARIABLES: (\n    accent: pfe-var(ui-accent),\n    BorderTopWidth: 0\n  );\n\n  @if $context == \"light\" { // Light context\n    $LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n      BoxShadow: 0 5px pfe-var(surface--border-width--heavy) rgba(140, 140, 140, 0.35)\n    ));\n  }\n  @else {\n    $LOCAL-VARIABLES: map-deep-merge($LOCAL-VARIABLES, (\n      BoxShadow: none\n    ));\n  }\n\n  @include pfe-print-local($LOCAL-VARIABLES);\n}\n\n@mixin pfe-panel-container() {\n  // Ensure the box shadow does not propagate to nest accordions\n  @include pfe-print-local( ( BoxShadow: none ) );\n\n  @extend %container;\n  padding: pfe-local(Padding, $region: panel-container);\n}\n\n/// ===========================================================================\n/// Accordion chevrons\n/// ===========================================================================\n\n@mixin pfe-chevron($state: open, $position: after, $size: .4em, $offset: $size) {\n\n  content: \"\";\n  position: absolute;\n  top: calc(#{pfe-var(container-spacer)} + #{$offset});\n\n  display: block;\n  border-style: pfe-var(surface--border-style);\n  height: $size;\n  width:  $size;\n  transition: transform 0.15s;\n  @if $state == open {\n    border-width: .1em .1em 0 0;\n    border-bottom: 0;\n    transform: rotate(-45deg);\n    top: calc(#{pfe-var(container-spacer)} + #{$offset});\n    @if $position == before {\n      left: calc(#{pfe-var(container-spacer)} * 1.3125); // 21px\n      top: calc(#{pfe-var(container-spacer)} + .25em);\n      transform: rotate(135deg);\n    }\n    @else {\n      right: calc(#{pfe-var(container-spacer)} * 1.3125);\n    }\n  }\n  @else {\n    border-width: 0 .1em .1em 0;\n    transform: rotate(45deg);\n    @if $position == before {\n      left: calc(#{pfe-var(container-spacer)} * 1.3125);\n      transform: rotate(-45deg);\n    }\n    @else {\n      right: calc(#{pfe-var(container-spacer)} * 1.3125);\n    }\n  }\n}\n\n/// ===========================================================================\n/// List styles\n/// ===========================================================================\n\n// Mixins and extends can't use the LOCAL-VARIABLES map because we would be\n// at risk of overriding an elements map if they call our mixin. We need to\n// use just regular sass variables and pfe-local and specify the $fallbacks.\n@mixin ordered-list-primary($size: 56px) {\n  // First we create our Sass variables that we will use for fallbacks\n  // The gap between list items\n  $gap: pfe-var(content-spacer);\n  // The space between the circle and content\n  $spacer: pfe-var(content-spacer);\n  // rgb value of the color theme of the circle\n  // we need to wrap this in a calc function so it can be dynamic.\n  $color: (238, 0, 0);\n  // font size of the number inside of the circle\n  $number-font-size: $pf-global--FontSize--2xl;\n\n  list-style: none;\n  min-height: pfe-local(gap, $fallback: $gap);\n  margin: pfe-local(gap, $fallback: $gap);\n  padding-left: pfe-local(PaddingLeft, $fallback: 0);\n\n  & > li {\n    // increment the local counter variable\n    counter-increment: pfe-list;\n    position: relative;\n    min-height: pfe-local(size, $region: circle, $fallback: $size);\n    // the li content will start after the circle and a defined spacer\n    padding-left: calc(#{pfe-local(spacer, $fallback: $spacer)} + #{pfe-local(size, $region: circle, $fallback: $size)});\n    // the li content needs to align with the middle of the radius but we\n    // need to account for the fact that it's also calculating the size\n    // of the line height of the number inside of the circle\n    padding-top: calc((#{pfe-local(size, $region: circle, $fallback: $size)} / 2) - ((#{pfe-local(FontSize, $region: circle, $fallback: $number-font-size)} / 2)));\n  }\n  & > ul {\n    list-style-type: disc;\n  }\n  & > li:before {\n    @include pfe-typography(2xl, $type: \"title\");\n    // we need to make sure that if the size of the number in the circle changes\n    // that doesn't affect the size or shape of the circle. since we don't have\n    // any more psuedo elements to work with, we need to use the flexbox technique\n    // to center the text.\n    display: block;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    // make the circle using border-radius\n    border-radius: 50%;\n    // keep the circle on the upper left\n    position: absolute;\n    top: 0;\n    left: 0;\n    // set the size of the circle\n    width: pfe-local(size, $region: circle, $fallback: $size);\n    height: pfe-local(size, $region: circle, $fallback: $size);\n    // set the contents of the circle\n    content: counter(pfe-list);\n    font-size: pfe-local(FontSize, $region: circle, $fallback: $number-font-size);\n    color: rgba(#{pfe-local(color, $region: circle, $fallback: $color)}, 1);\n    // generate a background color based on the circle text color\n    // provide an override for BackgroundColor if the user needs to specify\n    // custom color.\n    background-color: pfe-local(BackgroundColor, $region: circle, $fallback: rgba(pfe-local(color, $region: circle, $fallback: $color), 0.07));\n  }\n\n  & > li *:first-child {\n    margin-top: pfe-local(MarginTop, $region: item-first-child, $fallback: 0);\n  }\n\n  // for pfe-grids we:\n  //  - use the pfe-grid API to add grid gap.\n  //  - remove the margins on the <li> tags in favor of the grid gap.\n  //  - add top and bottom margin back to the <ol> tags to maintain correct offset with surrounding content.\n  &.pfe-l-grid.pfe-m-gutters {\n    --pfe-grid--gap--vertical: #{pfe-local(gap, $fallback: $gap)};\n    --pfe-grid--gap--horizontal: #{pfe-local(gap, $fallback: $gap)};\n    --pfe-grid--Margin: #{pfe-local(Margin, $fallback: $gap)};\n    --pfe-grid__item--Margin: #{pfe-local(Margin, $region: item, $fallback: 0)};\n  }\n}\n","@import \"@patternfly/patternfly/sass-utilities/scss-variables\";\n\n////\n/// @group maps\n/// @type Map\n////\n\n/// Variables for typography, spacing, sizing\n$pfe-vars: (\n\n  container-spacer:              pf-font-prem($pf-spacer),    // 16px\n  container-padding:             pf-font-prem($pf-spacer),    // 16px\n  content-spacer:                pf-font-prem($pf-spacer-sm), // 24px\n\n  content-spacer--heading--lg:   pf-font-prem($pf-spacer-md), // 32px    \n  content-spacer--heading--md:   pf-font-prem($pf-spacer-sm), // 24px   \n  content-spacer--heading--sm:   pf-font-prem($pf-spacer),    // 16px\n  content-spacer--body--md:      pf-font-prem($pf-spacer),    // 16px\n  content-spacer--body--sm:      pf-font-prem($pf-spacer-xs), // 8px\n\n  surface--border-width:         1px,                         //\n  surface--border-width--heavy:  4px,                         //\n  surface--border-style:         solid,                       //\n  surface--border-radius:        3px,                         //\n  surface--border-width--active: 3px,                         //\n\n  icon-size:                     1em,                         //\n\n  ui--element--size:             20px,                        //\n  ui--element--size--md:         32px,                        //\n  ui--indent:                    20px,                        //\n  ui--border-width--sm:          1px,                         //\n  ui--border-width--md:          2px,                         //\n  ui--border-width--lg:          3px,                         //\n\n  ui--border-width:              1px,                         //\n  ui--border-width--active:      3px,                         //\n  \n  ui--border-style:              solid,                       //\n  ui--border-radius:             2px,                         //\n\n  ui--focus-outline-width:       1px,                         //\n  ui--focus-outline-style:       solid,                       //\n\n  grid-breakpoint--xs:           0,                           //\n  grid-breakpoint--sm:           576px,                       //\n  grid-breakpoint--md:           768px,                       //\n  grid-breakpoint--lg:           992px,                       //\n  grid-breakpoint--xl:           1200px,                      //\n\n  box-shadow--sm:                #{0  #{pfe-size-prem(1)}  #{pfe-size-prem(2)} 0 rgba($pf-color-black-1000, .2)},  //\n  box-shadow--md:                #{0  #{pfe-size-prem(2)}  #{pfe-size-prem(1)} #{pfe-size-prem(1)} rgba($pf-color-black-1000, .12), 0  #{pfe-size-prem(4)}  #{pfe-size-prem(11)} #{pfe-size-prem(6)} rgba($pf-color-black-1000, .05)},  //\n  box-shadow--lg:                #{0  #{pfe-size-prem(3)}  #{pfe-size-prem(7)} #{pfe-size-prem(3)} rgba($pf-color-black-1000, .13), 0  #{pfe-size-prem(11)}  #{pfe-size-prem(24)} #{pfe-size-prem(16)} rgba($pf-color-black-1000, .12)},  //\n  box-shadow--inset:             #{inset 0 0 #{pfe-size-prem(10)} 0 $pf-color-black-100},  //\n\n  animation-speed:               .3s,  //\n  animation-timing:              cubic-bezier(0.465, 0.183, 0.153, 0.946),  //\n  opacity:                       .09  //\n);","// Colors\n$pf-color-black-100:             #fafafa !default;\n$pf-color-black-150:             #f5f5f5 !default;\n$pf-color-black-200:             #f0f0f0 !default;\n$pf-color-black-300:             #d2d2d2 !default;\n$pf-color-black-400:             #b8bbbe !default;\n$pf-color-black-500:             #8a8d90 !default;\n$pf-color-black-600:             #6a6e73 !default;\n$pf-color-black-700:             #4f5255 !default;\n$pf-color-black-800:             #3c3f42 !default;\n$pf-color-black-850:             #212427 !default;\n$pf-color-black-900:             #151515 !default;\n$pf-color-black-1000:            #030303 !default;\n$pf-color-blue-50:               #e7f1fa !default;\n$pf-color-blue-100:              #bee1f4 !default;\n$pf-color-blue-200:              #73bcf7 !default;\n$pf-color-blue-300:              #2b9af3 !default;\n$pf-color-blue-400:              #06c !default;\n$pf-color-blue-500:              #004080 !default;\n$pf-color-blue-600:              #002952 !default;\n$pf-color-blue-700:              #001223 !default;\n$pf-color-cyan-50:               #f2f9f9 !default;\n$pf-color-cyan-100:              #a2d9d9 !default;\n$pf-color-cyan-200:              #73c5c5 !default;\n$pf-color-cyan-300:              #009596 !default;\n$pf-color-cyan-400:              #005f60 !default;\n$pf-color-cyan-500:              #003737 !default;\n$pf-color-cyan-600:              #002323 !default;\n$pf-color-cyan-700:              #000f0f !default;\n$pf-color-gold-50:               #fdf7e7 !default;\n$pf-color-gold-100:              #f9e0a2 !default;\n$pf-color-gold-200:              #f6d173 !default;\n$pf-color-gold-300:              #f4c145 !default;\n$pf-color-gold-400:              #f0ab00 !default;\n$pf-color-gold-500:              #c58c00 !default;\n$pf-color-gold-600:              #795600 !default;\n$pf-color-gold-700:              #3d2c00 !default;\n$pf-color-green-50:              #f3faf2 !default;\n$pf-color-green-100:             #bde5b8 !default;\n$pf-color-green-200:             #95d58e !default;\n$pf-color-green-300:             #6ec664 !default;\n$pf-color-green-400:             #5ba352 !default;\n$pf-color-green-500:             #3e8635 !default;\n$pf-color-green-600:             #1e4f18 !default;\n$pf-color-green-700:             #0f280d !default;\n$pf-color-light-blue-100:        #beedf9 !default;\n$pf-color-light-blue-200:        #7cdbf3 !default;\n$pf-color-light-blue-300:        #35caed !default;\n$pf-color-light-blue-400:        #00b9e4 !default;\n$pf-color-light-blue-500:        #008bad !default;\n$pf-color-light-blue-600:        #005c73 !default;\n$pf-color-light-blue-700:        #002d39 !default;\n$pf-color-light-green-100:       #e4f5bc !default;\n$pf-color-light-green-200:       #c8eb79 !default;\n$pf-color-light-green-300:       #ace12e !default;\n$pf-color-light-green-400:       #92d400 !default;\n$pf-color-light-green-500:       #6ca100 !default;\n$pf-color-light-green-600:       #486b00 !default;\n$pf-color-light-green-700:       #253600 !default;\n$pf-color-orange-100:            #f4b678 !default;\n$pf-color-orange-200:            #ef9234 !default;\n$pf-color-orange-300:            #ec7a08 !default;\n$pf-color-orange-400:            #c46100 !default;\n$pf-color-orange-500:            #8f4700 !default;\n$pf-color-orange-600:            #773d00 !default;\n$pf-color-orange-700:            #3b1f00 !default;\n$pf-color-purple-50:             #f2f0fc !default;\n$pf-color-purple-100:            #cbc1ff !default;\n$pf-color-purple-200:            #b2a3ff !default;\n$pf-color-purple-300:            #a18fff !default;\n$pf-color-purple-400:            #8476d1 !default;\n$pf-color-purple-500:            #6753ac !default;\n$pf-color-purple-600:            #40199a !default;\n$pf-color-purple-700:            #1f0066 !default;\n$pf-color-red-50:                #faeae8 !default;\n$pf-color-red-100:               #c9190b !default;\n$pf-color-red-200:               #a30000 !default;\n$pf-color-red-300:               #7d1007 !default;\n$pf-color-red-400:               #470000 !default;\n$pf-color-red-500:               #2c0000 !default;\n$pf-color-white:                 #fff !default;\n","// $boxSize = any box-sizing property, default is border-box\n@mixin pfe-box-sizing($boxSize: border-box) {\n  *,\n  *::before,\n  *::after {\n    box-sizing: $boxSize;\n  }\n}\n\n@mixin pfe-clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n\n@mixin pfe-container {\n  @extend %container;\n\n  padding: calc(#{pfe-local(Padding--vertical)} / 2) #{pfe-local(Padding--horizontal)};\n\n  @media (min-width: pfe-breakpoint(sm)) {\n    padding: pfe-local(Padding);\n  }\n}\n\n@mixin pfe-collapsible($state: closed) {\n  @if $state != closed {\n    display: block;\n    position: relative;\n    opacity: 1;\n  } @else {\n    display: none;\n    overflow: hidden;\n    will-change: height;\n    border-color: transparent;\n    opacity: 0;\n  }\n}\n"],"sourceRoot":"../src"}