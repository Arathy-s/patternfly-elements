@import "_shared-assets";

:host {
  display: flex;
  flex-direction: column;
  line-height: 1.2;

  height: 100%;
  width: max-content;
  min-width: pfe-local(MinWidth);

  // @media screen and (max-width: pfe-breakpoint(xl)) {
  //   width: 100%;
  // }
}

//-- Let the main item or the tray be hidden with the hidden attribute
:host([hidden]:not([show_tray])) {
  @extend %hidden;
}

:host([show_tray]),
:host([horizontal]) ::slotted([slot="tray"][hidden]) {
  display: flex;
  visibility: visible;
  flex-grow: 1;
}

// :host([is-menu-dropdown]) {
  // align-items: flex-end;
  // flex-grow: 0;
  // flex-shrink: 1;
  // flex-basis: 99%;
  // padding-left: 24px;
  // padding-right: 24px;
// }

// Indicates this is the current section the user is visiting
:host([aria-current="location"]) {
  --pfe-navigation--BorderTopColor: #{pfe-local(accent)};
}

// Mobile menu experience
:host([is-nested]:not([is-desktop])) {
  display: flex;
  margin: 0 auto;
  align-items: center;
  max-width: pfe-local(Width);
}

// @TODO set up tray opening animation?
// :host(.animating) {
//   transition: transform 0.3s #{pfe-var(animation-timing)};
// }

/* ----------------- */
/*  TRIGGER STYLES   */
/* ----------------- */
.pfe-navigation-item__trigger {
  border-top:         pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) pfe-local(BorderTopColor);
  border-right:       pfe-var(surface--border-width) dashed pfe-local(BorderColor);
  border-bottom:      pfe-var(surface--border-width) dashed pfe-local(BorderColor);
  border-left:        pfe-var(surface--border-width) dashed pfe-local(BorderColor);

  background-color:   pfe-local(BackgroundColor, $region: trigger);
  color:              pfe-local(Color, $region: trigger);

  padding:            pfe-local(Padding, $region: trigger);

  position:           relative;
  display:            flex;
  flex-grow:          1;
  flex-direction:     column;
  flex-wrap:          nowrap;
  align-items:        center;
  justify-content:    center;

  transition: background-color pfe-var(animation-timing) pfe-var(animation-speed),
    border pfe-var(animation-timing) pfe-var(animation-speed);

  outline: none;
  cursor:  pointer;

  font-family:  pfe-var(font-family);
  font-size:    pfe-local(FontSize, $region: trigger);
  font-weight:  pfe-local(FontWeight, $region: trigger);

  z-index: 2;
  line-height: 1.1;
  margin: 0;
  max-width: pfe-local(MaxWidth, $region: trigger);
  text-align: center;

  // @media screen and (min-width: pfe-breakpoint(sm-mobile, $map: false)) {
  //   padding: pfe-local(Padding, $region: trigger, $fallback: pfe-var(container-padding));
  // }

  @media screen and (min-width: pfe-breakpoint(xl) ) {
      max-width: pfe-local(MaxWidth, $region: trigger, $fallback: 190px);
  }

  :host(.is-expanded) &,
  &:hover,
  &:focus {
    border-top-color: pfe-local(accent);
  }

  :host(.is-expanded) &,
  &:focus {
    border-right-color:   pfe-var(surface--lightest);
    border-bottom-color:  pfe-var(surface--lightest);
    border-left-color:    pfe-var(surface--lightest);
  }

  // After element is the filled-in dropdown caret
  &::after {
    display: block;
    content: " ";
    visibility: hidden;
    transition: border-color pfe-var(animation-timing) pfe-var(animation-speed);

    @include pfe-arrow(down, pfe-var(feedback--default), $width: 6px, $height: 6px);
    position: absolute;
    bottom: calc(#{pfe-var(container-spacer)} / 2);

    //-- Chevron styles for the navigation accordion on mobile
    :host([is-nested]:not([is-desktop])) & {
      visibility: visible;
      border-color: pfe-local(Color, $region: trigger);
    }
    // closed:
    :host([is-nested]:not(.is-expanded):not([is-desktop])) & {
      @include pfe-chevron($state: closed, $offset: 0px);
    }
    // open:
    :host([is-nested].is-expanded:not([is-desktop])) & {
      @include pfe-chevron($state: open, $offset: 4px);
    }
    :host([is-nested]:not([has_tray]):not([is-desktop])) & {
      transform: rotate(-45deg);
    }
  }
    
  // Only show the arrows on non-utility items
  :host([has_tray].is-expanded:not([is-utility],[is-menu-dropdown])) &::after,
  :host([has_tray]:not([is-utility],[is-menu-dropdown])) &:hover::after {
    visibility: visible;
  }

  // When the navigation item is expanded
  :host(.is-expanded) & {
    background-color: pfe-var(surface--lightest);
    color:            pfe-var(text);
  }

  :host([horizontal]) > &,
  :host([hidden]) & {
    @extend %hidden;
  }

  // At mobile if inside the main context, update the color to a text color
  :host([is-nested]:not([is-desktop],[desktop])) & {
    $accordion: pfe-accordion-variables;
    @include pfe-print-local($accordion);
    @include pfe-trigger;

    box-sizing: border-box;
    align-items: stretch;

    background-color: pfe-var(surface--lightest);
    color: pfe-var(text);
  }

  :host([is-nested].is-expanded:not([is-desktop])) & {
    $accordion: pfe-accordion-variables($state: expanded);
    @include pfe-print-local($accordion);
  }

  :host([is-nested][last]:not(.is-expanded):not([is-desktop])) & {
    @include pfe-trigger-last;
  }

  &--icon {
    --pfe-icon--Color: #{pfe-var(text--on-dark)};

    &[icon="web-plus"] {
      transform: rotate(-45deg);
    }
    :host(.is-expanded) & {
      --pfe-icon--Color: #{pfe-var(text)};
    }
  }

  &--label {
    color: inherit;
    text-decoration: none;
  }
}
// -- end trigger styles

/* ----------------- */
/*    TRAY STYLES    */
/* ----------------- */
.pfe-navigation-item__tray {
  --pfe-navigation--FontWeight: #{pfe-var(text)};

  @include pfe-set-broadcast-theme(light);

  transition: all pfe-var(animation-timing);
  box-sizing: border-box;

  @extend %hidden;

  &[aria-expanded="true"] {
    display: block;
    visibility: visible;
  }

  :host([horizontal]:not([is-desktop])) & {
    flex-grow: 1;
    display: flex;
    visibility: visible;
    width: 100%;
    padding-right: 40px; // ensure gap between main menu links and utility links
  }

  :host([is-menu-dropdown]:not([horizontal])) &,
  :host(:not([is-menu-dropdown]):not([is-nested])) &,
  :host([is-nested][is-desktop]) & {
    position: absolute;
    top: 100%;
    left: 0;

    background-color: pfe-local(BackgroundColor, $region: tray);
    color:            pfe-local(Color, $region: tray);
    // mobile tray padding
    padding: pfe-local(Padding, $region: tray);
    width: 100%;
    max-height: calc(100vh - #{pfe-local(Height)});
    overflow-x: hidden;
    overflow-y: scroll;
    padding-right: 9px; // OFFSET SCROLLBAR HACK
  }

  //  Styles for the nested elements
  :host([is-nested]:not([is-desktop])) & {
    @include pfe-collapsible($state: closed);
    @include pfe-accordion-props;
    @include pfe-box-sizing;
    @include pfe-panel-container;
    // mobile tray padding
    padding: calc(#{pfe-local(Padding--vertical)} / 2)  calc(#{pfe-local(Padding--horizontal)} * 1.75);
  }

  :host([is-nested].is-expanded:not([is-desktop])) & {
    $accordion: pfe-accordion-variables($state: expanded);
    @include pfe-print-local($accordion);
    @include pfe-panel-variables;
    @include pfe-collapsible($state: open);
  }
  :host([is-nested][is-desktop][pfe-full-width]) & {
    padding: pfe-local(Padding, $region: tray) 0 pfe-local(Padding, $region: tray);
  }

  :host([hidden]) &,
  :host(:not(.is-expanded):not([horizontal])) & {
    @extend %hidden;
  }
}

::slotted([slot="tray"]) {
  display: flex;
  justify-content: center;
}


//-- Variant styles
// The wind variant is used to render an icon with text inline, direct links
:host([variant="wind"]) {
  .pfe-navigation-item__trigger {
    padding:  pfe-local(Padding, $region: trigger, $fallback: calc(#{pfe-var(container-padding)} / 2) 0 calc(#{pfe-var(container-padding)} / 2) calc(#{pfe-var(container-spacer)} * 1.5));
    color:    pfe-var(link);
    background-color: transparent;

    flex-direction: row;
    align-items: stretch;
    justify-content: flex-start;

    border: none;

    &:hover {
      color: pfe-var(link--hover);
    }
    &:focus {
      color: pfe-var(link--focus);
    }
  }
  .pfe-navigation-item__tray {
    --pfe-icon--Color: #{pfe-var(link)};

    margin-bottom: 0;
    margin-right: calc(#{pfe-var(container-spacer)} / 2);
  }
}

//-- Utility & main menu or "hamburger" dropdown styles
:host([is-utility],[is-menu-dropdown]) {
  // min-width: pfe-local(MinWidth, $fallback: 65px);

  // // when utilities are shown in the black bar
  // @media screen and (min-width: pfe-fetch(lg-mobile)) {
  //   width: 70px;
  // }
  .pfe-navigation-item__trigger {
    width: max-content;
    // padding: pfe-local(Padding--utility, $region: trigger);
    padding-top: 16px + 2px;
    padding-bottom: 16px;

    &--label {
      margin-top: pfe-var(spacer--xs);
      max-width: 100px;
      font-size: pfe-local(FontSize--utility, $region: trigger);
    }
  }
}

:host([is-menu-dropdown]) {
  .pfe-navigation-item__trigger {
    // 768px+
    @media screen and (min-width: pfe-breakpoint(md)) {
      padding-top: 16px;
    }
  }
  // At the desktop view, look through the dropdown element to the content
  &,
  .pfe-navigation-item__tray,
  ::slotted([slot=tray]) {
    // 1200px+
    @media screen and (min-width: pfe-breakpoint(xl)) {
      display: contents !important;
    }
  }
}
