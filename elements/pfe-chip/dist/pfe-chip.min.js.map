{"version":3,"file":"pfe-chip.min.js","sources":["../_temp/pfe-chip.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeChip 1.7.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\nimport PfeBadge from \"../../pfe-badge/dist/pfe-badge.js\";\nimport PfeIcon from \"../../pfe-icon/dist/pfe-icon.js\";\n\nclass PfeChip extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.7.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>.pfe-chip__button,.pfe-chip__close{background-color:transparent;border:none;margin:0;padding:0;text-align:left}:host{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;position:relative;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;color:#151515;color:var(--pfe-chip--Color,var(--pfe-theme--color--text,#151515));padding:0 0 0 .5rem;padding:var(--pfe-chip--Padding,var(--pfe-chip--PaddingTop,0) var(--pfe-chip--PaddingRight,0) var(--pfe-chip--PaddingBottom,0) var(--pfe-chip--PaddingLeft,var(--pfe-theme--content-spacer--body--sm,.5rem)));list-style:none;background-color:#fff;background-color:var(--pfe-chip--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border-radius:2px;border-radius:var(--pfe-chip--BorderRadius,var(--pfe-theme--ui--border-radius,2px));border:1px solid #d2d2d2;border:var(--pfe-chip--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-chip--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2));border-radius:2px;border-radius:var(--pfe-chip--BorderRadius,var(--pfe-theme--ui--border-radius,2px))}:host([hidden]){display:none}:host([on=dark]),:host([on=saturated]){border-width:0;border-width:var(--pfe-chip--BorderWidth,0)}.pfe-chip__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:7.5rem;max-width:var(--pfe-chip__text--MaxWidth,7.5rem);font-size:.75rem;font-size:var(--pfe-chip__text--FontSize,var(--pf-global--FontSize--xs,.75rem));line-height:1.5;line-height:var(--pfe-chip__text--LineHeight,var(--pfe-theme--line-height,1.5));color:#151515;color:var(--pfe-chip__text--Color,var(--pfe-theme--color--text,#151515))}.pfe-chip__badge{margin-left:.25rem;margin-left:var(--pfe-chip__badge--MarginLeft,var(--pf-global--spacer--xs,.25rem))}.pfe-chip__button,.pfe-chip__close{position:relative;display:inline-block;text-align:center;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding:.02344rem .5rem .02344rem .5rem;padding:var(--pfe-chip__button--Padding,var(--pfe-chip__button--PaddingTop,var(--pfe-theme--form-spacer,.02344rem)) var(--pfe-chip__button--PaddingRight,var(--pfe-theme--content-spacer--body--sm,.5rem)) var(--pfe-chip__button--PaddingBottom,var(--pfe-theme--form-spacer,.02344rem)) var(--pfe-chip__button--PaddingLeft,var(--pfe-theme--content-spacer--body--sm,.5rem)))}.pfe-chip__button::after,.pfe-chip__close::after{border:0 solid #3c3f42;border:var(--pfe-chip__button--BorderWidth,0) var(--pfe-theme--ui--border-style,solid) var(--pfe-chip__button--BorderColor,var(--pfe-theme--color--surface--border--darkest,#3c3f42));border-radius:2px;border-radius:var(--pfe-chip__button--BorderRadius,var(--pfe-theme--ui--border-radius,2px))}.pfe-chip__button pfe-icon,.pfe-chip__close pfe-icon{--pfe-icon--color:pfe-local(BackgroundColor, $region: button);display:inline-block;height:calc(.75rem * 1.5);height:calc(var(--pfe-chip__button--size,var(--pf-global--FontSize--xs,.75rem)) * 1.5);width:.75rem;width:var(--pfe-chip__button--size,var(--pf-global--FontSize--xs,.75rem));line-height:1;vertical-align:-.125em}.pfe-chip__button:hover,.pfe-chip__close:hover{cursor:pointer}.pfe-chip__button:hover::after,.pfe-chip__close:hover::after{border-width:var(--pfe-chip__button--BorderWidth--hover)}.pfe-chip__button:hover pfe-icon,.pfe-chip__close:hover pfe-icon{fill:#004080;fill:var(--pfe-chip__button--BackgroundColor--hover,var(--pfe-theme--color--ui-accent--hover,#004080))}:host([on=dark]) .pfe-chip__button:hover::after,:host([on=dark]) .pfe-chip__close:hover::after{margin:1px}.pfe-chip__button:active::after,.pfe-chip__close:active::after{border-width:var(--pfe-chip__button--BorderWidth--active)}.pfe-chip__button:active pfe-icon,.pfe-chip__close:active pfe-icon{fill:#004080;fill:var(--pfe-chip__button--BackgroundColor--active,var(--pfe-theme--color--ui-accent--hover,#004080))}:host([on=dark]) .pfe-chip__button:active::after,:host([on=dark]) .pfe-chip__close:active::after{margin:1px}.pfe-chip__button:focus::after,.pfe-chip__close:focus::after{border-width:var(--pfe-chip__button--BorderWidth--focus)}.pfe-chip__button:focus pfe-icon,.pfe-chip__close:focus pfe-icon{fill:#004080;fill:var(--pfe-chip__button--BackgroundColor--focus,var(--pfe-theme--color--ui-accent--hover,#004080))}:host([on=dark]) .pfe-chip__button:focus::after,:host([on=dark]) .pfe-chip__close:focus::after{margin:1px}:host([read-only]){padding:.02344rem .5rem .02344rem .5rem;padding:var(--pfe-chip--Padding,var(--pfe-chip--PaddingTop,var(--pfe-theme--form-spacer,.02344rem)) var(--pfe-chip--PaddingRight,var(--pfe-theme--content-spacer--body--sm,.5rem)) var(--pfe-chip--PaddingBottom,var(--pfe-theme--form-spacer,.02344rem)) var(--pfe-chip--PaddingLeft,var(--pfe-theme--content-spacer--body--sm,.5rem)))}:host([overflow]){padding-left:0;padding-left:var(--pfe-chip--PaddingLeft,0);border-width:0;border-width:var(--pfe-chip--BorderWidth,0);color:#06c;color:var(--pfe-chip--Color,var(--pfe-theme--color--link,#06c))}:host([overflow]) .pfe-chip__button:hover,:host([overflow]) .pfe-chip__close:hover{border-width:1px;border-width:var(--pfe-chip__button--BorderWidth--hover,var(--pfe-theme--ui--border-width,1px));color:#004080;color:var(--pfe-chip--Color,var(--pfe-theme--color--link--hover,#004080))}:host([overflow]) .pfe-chip__button:active,:host([overflow]) .pfe-chip__close:active{border-width:1px;border-width:var(--pfe-chip__button--BorderWidth--active,var(--pfe-theme--ui--border-width,1px));color:#004080;color:var(--pfe-chip--Color,var(--pfe-theme--color--link--hover,#004080))}:host([overflow]) .pfe-chip__button:focus,:host([overflow]) .pfe-chip__close:focus{border-width:1px;border-width:var(--pfe-chip__button--BorderWidth--focus,var(--pfe-theme--ui--border-width,1px));color:#004080;color:var(--pfe-chip--Color,var(--pfe-theme--color--link--hover,#004080))} /*# sourceMappingURL=pfe-chip.min.css.map */</style>\n<slot hidden aria-hidden=\"true\"></slot>\n\n${this.overflow ? `<button class=\"pfe-chip__button\" type=\"button\" aria-labelledby=\"chip\">` : \"\"}\n  <span class=\"pfe-chip__text\" id=\"chip\" aria-hidden=\"true\"></span>\n  ${this.hasSlot(\"pfe-chip--badge\") ? `<pfe-badge class=\"pfe-chip__badge\">\n    <slot name=\"pfe-chip--badge\"></slot>\n  </pfe-badge>` : \"\"}\n  ${this.overflow ? `</button>` : \"\"}\n\n${this.showCloseButton ? `<button class=\"pfe-chip__close\" type=\"button\" aria-labelledby=\"remove_chip\"\n  aria-label=\"Remove\" id=\"remove_chip\">\n  <pfe-icon icon=\"fas-times\"></pfe-icon>\n</button>` : \"\"}`;\n  }\n\n  static get tag() {\n    return \"pfe-chip\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Chip\",\n      description:\n        \"A chip is used to display items that have been filtered or selected from a larger group. They comprise of a text element and a button component that is used to remove the chip from selection. When the text overflows it is truncated using ellipses.\"\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-chip.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-chip.scss\";\n  }\n\n  get showCloseButton() {\n    return !this.readOnly && !this.overflow;\n  }\n\n  hide() {\n    this.setAttribute(\"hidden\", \"\");\n  }\n\n  show() {\n    this.removeAttribute(\"hidden\");\n  }\n\n  delete() {\n    this.parentNode.removeChild(this);\n  }\n\n  static get events() {\n    return {\n      close: `${this.tag}:close`,\n      load: `${this.tag}:load`\n    };\n  }\n\n  static get properties() {\n    return {\n      readOnly: {\n        title: \"Read only\",\n        type: Boolean,\n        default: false\n      },\n      overflow: {\n        title: \"Overflow\",\n        type: Number\n      },\n      badge: {\n        title: \"Badge\",\n        type: Number\n      }\n    };\n  }\n\n  static get slots() {\n    return {\n      default: {\n        title: \"Default slot\",\n        type: \"array\",\n        namedSlot: false,\n        items: {\n          oneOf: [\n            {\n              $ref: \"raw\"\n            }\n          ]\n        }\n      },\n      badge: {\n        title: \"Badge\",\n        type: \"array\",\n        namedSlot: true,\n        items: {\n          title: \"Badge item\",\n          oneOf: [\n            {\n              $ref: \"raw\"\n            }\n          ]\n        }\n      }\n    };\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  constructor() {\n    super(PfeChip, { type: PfeChip.PfeType });\n\n    this._text = this.shadowRoot.querySelector(`.${this.tag}__text`);\n    this._badge = this.shadowRoot.querySelector(`pfe-badge`);\n    this._close = this.shadowRoot.querySelector(`.${this.tag}__close`);\n    this._add = this.shadowRoot.querySelector(`.${this.tag}__button`);\n\n    this._init = this._init.bind(this);\n    this._clickHandler = this._clickHandler.bind(this);\n    this._keyupHandler = this._keyupHandler.bind(this);\n    this._badgeObserver = new MutationObserver(this._init);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.badge = this.querySelector(`[slot=\"badge\"]`);\n\n    // Add a slotchange listener to the lightDOM trigger\n    if (this.badge) {\n      this._badgeObserver.observe(this.badge, {\n        characterData: true,\n        attributes: true,\n        subtree: true,\n        childList: true\n      });\n      // this.badge.addEventListener(\"slotchange\", this._init);\n    }\n\n    // @TODO load icon using pfe-icon instead of hardcoding SVG\n    Promise.all([\n      customElements.whenDefined(PfeIcon.tag)\n    ]).then(() => {\n      // Set up font-awesome icon set\n      if(!PfeIcon._iconSets[\"fas\"]) {\n        PfeIcon.addIconSet(\n          \"fas\",\n          \"//unpkg.com/@fortawesome/fontawesome-free@5/svgs/solid\",\n          (iconName, setName, path) => {\n            const name = iconName.replace(\"fas-\", \"\");\n            return `${path}/${name}.svg`;\n          }\n        );\n      }\n    });\n\n    this._init();\n  }\n\n  _init() {\n    // Capture the text content and move it to the Shadow DOM\n    if (this.firstChild && this.firstChild.textContent.trim()) {\n      this._text.textContent = this.firstChild.textContent.trim();\n    } else if (this.firstElementChild && this.firstElementChild.textContent.trim()) {\n      this._text.textContent = this.firstElementChild.textContent.trim();\n    }\n\n    // If the badge element exists, check that it's value is numeric\n    let badgeContent = \"\";\n    if (this.badge) badgeContent = this.badge.textContent;\n\n    if (badgeContent) {\n      if (isNaN(badgeContent)) {\n        console.warn(`${this.tag}: The badge content must be numeric.`);\n      } else {\n        this._badge.setAttribute(\"number\", this.badge.textContent);\n      }\n    }\n\n    // If this is not a read-only chip, attach event listeners\n    if (this._close) {\n      this._close.addEventListener(\"click\", this._clickHandler);\n      this._close.addEventListener(\"keyup\", this._keyupHandler);\n    }\n\n    // If this is not a read-only chip, attach event listeners\n    if (this._add) {\n      this._add.addEventListener(\"click\", this._clickHandler);\n      this._add.addEventListener(\"keyup\", this._keyupHandler);\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.badge) {\n      this.badge.removeEventListener(\"slotchange\", this._init);\n    }\n\n    if (this._close) {\n      this._close.removeEventListener(\"click\", this._clickHandler);\n      this._close.removeEventListener(\"keyup\", this._keyupHandler);\n    }\n\n    if (this._add) {\n      this._add.removeEventListener(\"click\", this._clickHandler);\n      this._add.removeEventListener(\"keyup\", this._keyupHandler);\n    }\n  }\n\n  _clickHandler(event) {\n    if (!this.overflow) {\n      this.emitEvent(PfeChip.events.close);\n    } else {\n      this.emitEvent(PfeChip.events.load);\n    }\n  }\n\n  _keyupHandler(event) {\n    let key = event.key || event.keyCode;\n    switch (key) {\n      case \"Enter\":\n      case 13:\n        if (!this.overflow) {\n          this.emitEvent(PfeChip.events.close);\n        } else {\n          this.emitEvent(PfeChip.events.load);\n        }\n    }\n  }\n}\n\nPFElement.create(PfeChip);\n\nexport default PfeChip;\n"],"names":["PfeChip","PFElement","version","html","this","overflow","hasSlot","showCloseButton","tag","meta","title","description","templateUrl","styleUrl","readOnly","[object Object]","setAttribute","removeAttribute","parentNode","removeChild","events","close","load","properties","type","Boolean","default","Number","badge","slots","namedSlot","items","oneOf","$ref","PfeType","PfeTypes","Content","super","_text","shadowRoot","querySelector","_badge","_close","_add","_init","bind","_clickHandler","_keyupHandler","_badgeObserver","MutationObserver","connectedCallback","observe","characterData","attributes","subtree","childList","Promise","all","customElements","whenDefined","PfeIcon","then","_iconSets","addIconSet","iconName","setName","path","replace","firstChild","textContent","trim","firstElementChild","badgeContent","isNaN","console","warn","addEventListener","removeEventListener","event","emitEvent","key","keyCode","create"],"mappings":"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"}