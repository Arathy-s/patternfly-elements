@import "../../pfe-sass/pfe-sass";

$LOCAL: textinput;

$LOCAL-VARIABLES: (
  BackgroundColor: pfe-var(surface--lightest),
  BackgroundColor--disabled: pfe-var(surface--base),
  BorderColor: pfe-var(surface--border--lighter),
  BorderBottomColor: pfe-var(surface--border--darker), // TODO: sync on this color #767676,
  BorderBottomColor--hover: pfe-var(ui-accent),
  BorderRadius: pfe-var(ui--border-radius),
  Color: pfe-var(text),
  FontSize: pfe-var(font-size),
  Height: 36px,
  Padding: 8px 6px,
);

:host {
  display: inline-block;
  position: relative;
}

::slotted(input) {
  all: unset;
  opacity: 0;
  padding: pfe-local(Padding);
  border-radius: pfe-local(BorderRadius);
  border: pfe-local(BorderWidth) solid transparent;
  height: pfe-local(Height) !important;
}

span input {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: calc(100% - 14px);
  padding: pfe-local(Padding);
  border-radius: pfe-local(BorderRadius, $fallback: 0);
  border: pfe-var(ui--border-width) pfe-var(surface--border-style)  pfe-local(BorderColor);
  border-bottom-color: pfe-local(BorderBottomColor);
  background-color: pfe-local(BackgroundColor);
  font-size: pfe-local(FontSize);
  color: pfe-local(color);

  &:hover {
    border-bottom-color: pfe-local(BorderBottomColor--hover);
  }

  &[disabled] {
    background-color: pfe-local(BackgroundColor--disabled);
    cursor: not-allowed !important;
    border: pfe-var(ui--border-width) pfe-var(surface--border-style) transparent;
  }
}
