{"version":3,"sources":["../../pfe-absolute-position/src/pfe-absolute-position.scss","pfe-popover.css","pfe-popover.scss","../../pfe-sass/functions/_custom-properties.scss","../../pfe-sass/mixins/_copy-mixins.scss"],"names":[],"mappings":"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BAA4B;EAC5B,6DAAyD;UAAzD,qDAAyD;EACzD,iCAA6D;UAA7D,yBAA6D;EAA7D,qEAA6D;UAA7D,6DAA6D;EAC7D,qCAA6B;UAA7B,6BAA6B;ACnB/B;;ADsBA;EACE,gCAAwB;UAAxB,wBAAwB;EACxB,UAAyC;EAAzC,yCAAyC;EACzC,8BAAuD;UAAvD,sBAAuD;EAAvD,+DAAuD;UAAvD,uDAAuD;EACvD,4CAAoC;UAApC,oCAAoC;EACpC,oCAA4B;UAA5B,4BAA4B;EAC5B,6DAAuD;UAAvD,qDAAuD;EACvD,iCAA6D;UAA7D,yBAA6D;EAA7D,qEAA6D;UAA7D,6DAA6D;EAC7D,qCAA6B;UAA7B,6BAA6B;ACnB/B;;ADsBA;EACE,wCAAgC;UAAhC,gCAAgC;ACnBlC;;ADsBA,kBAAA;AACA;EACE,wBAAwB;ACnB1B;;AChFA;EAGE,cAAc;ADiFhB;;AC9EA;EACE,aAAa;ADiFf;;AC9EA;EACE,eCGkC;EDHlC,4CCGkC;EDFlC,kBCEkC;EDFlC,gDCEkC;EDDlC,gBCCkC;EDDlC,8CCCkC;EDAlC,gBCAkC;EDAlC,8CCAkC;EDClC,0CCDkC;UDClC,kCCDkC;EDClC,yECDkC;UDClC,iECDkC;EDElC,sBCFkC;EDElC,2DCFkC;EDGlC,cCHkC;EDGlC,yCCHkC;EDOlC,oBAAoB;AD8EtB;;ACzFA;EAcI,WCVgC;EDUhC,6CCVgC;EDWhC,YCXgC;EDWhC,+CCXgC;EDYhC,kBCZgC;EDYhC,uDCZgC;EDahC,sBCbgC;EDahC,2DCbgC;AF4FpC;;AChGA;EAsBM,qDClB8B;UDkB9B,6CClB8B;EDkB9B,gGClB8B;UDkB9B,wFClB8B;EDmB9B,SCnB8B;EDmB9B,+CCnB8B;EDoB9B,SCpB8B;EDoB9B,iDCpB8B;EDqB9B,yCAAiC;UAAjC,iCAAiC;AD8EvC;;ACvGA;EAgCI,mCAA2B;UAA3B,2BAA2B;AD2E/B;;AC3GA;EAkCM,MC9B8B;ED8B9B,8CC9B8B;ED+B9B,SC/B8B;ED+B9B,kDC/B8B;EDgC9B,sDChC8B;UDgC9B,8CChC8B;EDgC9B,oGChC8B;UDgC9B,4FChC8B;EDiC9B,0CAAkC;UAAlC,kCAAkC;AD6ExC;;AClHA;EA2CM,qDCvC8B;UDuC9B,6CCvC8B;EDuC9B,iGCvC8B;UDuC9B,yFCvC8B;EDwC9B,QCxC8B;EDwC9B,8CCxC8B;EDyC9B,QCzC8B;EDyC9B,gDCzC8B;ED0C9B,yCAAiC;UAAjC,iCAAiC;AD2EvC;;ACzHA;EAqDI,mCAA2B;UAA3B,2BAA2B;ADwE/B;;AC7HA;EAuDM,sDCnD8B;UDmD9B,8CCnD8B;EDmD9B,mGCnD8B;UDmD9B,2FCnD8B;EDoD9B,QCpD8B;EDoD9B,+CCpD8B;EDqD9B,8CCrD8B;EDsD9B,0CAAkC;UAAlC,kCAAkC;AD0ExC;;ACrEA;EACE,kBAAkB;EAClB,aC7DkC;ED6DlC,mDC7DkC;ED8DlC,sBC9DkC;ED8DlC,2DC9DkC;AFsIpC;;AC3EA;;EEoJY,wFAAa;EAAb,gIAAa;EACb,kBAAW;EAAX,qFAAW;EAEP,gBAAa;EAAb,+CAAa;EACb,gBAAa;EAAb,uDAAa;EFhJzB,gBCnEgC;EDmEhC,wDCnEgC;EDoEhC,aAAa;EACb,kBCrEgC;EDqEhC,4DCrEgC;AFiJpC;;ACtFA;;EE4JoB,mBAAe;EAAf,kEAAe;AHjEnC;;AC3FA;EAeI,kBC1EgC;ED0EhC,6DC1EgC;ED2EhC,SC3EgC;ED2EhC,+CC3EgC;ED4EhC,WC5EgC;ED4EhC,mDC5EgC;ED6EhC,cC7EgC;ED6EhC,sDC7EgC;ED8EhC,6BAA6B;EAC7B,yBAAyB;ADgF7B;;ACpGA;EAuBM,cClF8B;EDkF9B,6DClF8B;AFmKpC;;ACxGA;EA0BM,cCrF8B;EDqF9B,6DCrF8B;AFuKpC;;AC5GA;EA+BM,mEAAmE;ADiFzE;;AC3EA;EACE,qBAAqB;AD8EvB;;AC3EA;EACE,gBCrGkC;EDqGlC,uDCrGkC;AFmLpC;;ACtEA;EACE,4BAAkE;EAAlE,kEAAkE;EAClE,6BAAmE;EAAnE,mEAAmE;ADyErE;;AC3EA;EAKI,2BAAiE;EAAjE,iEAAiE;EACjE,4BAAkE;EAAlE,kEAAkE;AD0EtE;;ACtEyC;EACvC;IACE,kBAAkB;IAClB,mBAAmB;IACnB,oBAAa;IAAb,qBAAa;IAAb,oBAAa;IAAb,aAAa;IACb,wBAA8F;OAA9F,qBAA8F;YAA9F,gBAA8F;IAA9F,sGAA8F;OAA9F,mGAA8F;YAA9F,8FAA8F;IAC9F,cAAc;IACd,uBAAe;QAAf,mBAAe;YAAf,eAAe;EDyEjB;EC/EA;IASI,kBAAkB;IAClB,mBAAmB;EDyEvB;AACF;;ACrEA;EACE,2DAAqB;EACrB,kFAA+B;EAC/B,qFAAkC;ADwEpC;;AC3EA;;EAOI,sGAAyC;ADyE7C","file":"pfe-popover.css","sourcesContent":["// Please see the pfe-sass README for guidance on using these tools\n@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: absolute;\n\n// Example local variable, using BEM format\n// --pfe-absolute-position__region--Property: value;\n\n// This variable is global so that helper functions can reference it\n$LOCAL-VARIABLES: ();\n\n:host {\n  // Avoid printing local variables on host, instead use the pfe-local() function to set property values\n  display: block;\n  position: absolute;\n  z-index: 99999;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n@keyframes keyFrameScaleUp {\n  0% {\n    transform: scale(0.0);\n  }\n\n  100% {\n    transform: scale(1.0);\n  }\n}\n\n@keyframes keyFrameScaleDown {\n  0% {\n    transform: scale(1.0);\n  }\n\n  100% {\n    transform: scale(0.0);\n  }\n}\n\n@keyframes keyFrameFadeInOpacity {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n}\n\n@keyframes keyFrameFadeOutOpacity {\n  0% {\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes keyFrameSlideDownIn {\n  0% {\n    transform: translateY(-2000px);\n    opacity: 0;\n  }\n\n  10% {\n    opacity: 0.2;\n  }\n\n  100% {\n    transform: translateY(0);\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n}\n\n@keyframes keyFrameSlideDownOut {\n  0% {\n    transform: translateY(0);\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n\n  10% {\n    opacity: 0.2;\n  }\n\n  100% {\n    transform: translateY(-2000px);\n    opacity: 0;\n  }\n}\n\n.fade-in-animation {\n  opacity: 0;\n  animation-delay: var(--simple-tooltip-delay-in, 0ms);\n  animation-name: keyFrameFadeInOpacity;\n  animation-iteration-count: 1;\n  animation-timing-function: linear;\n  animation-duration: var(--simple-tooltip-duration-in, 100ms);\n  animation-fill-mode: forwards;\n}\n\n.fade-out-animation {\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-out, 0ms);\n  animation-name: keyFrameFadeOutOpacity;\n  animation-iteration-count: 1;\n  animation-timing-function: linear;\n  animation-duration: var(--simple-tooltip-duration-out, 100ms);\n  animation-fill-mode: forwards;\n}\n\n.scale-up-animation {\n  transform: scale(0);\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-in, 500ms);\n  animation-name: keyFrameScaleUp;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-in;\n  animation-duration: var(--simple-tooltip-duration-in, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.scale-down-animation {\n  transform: scale(1);\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-out, 500ms);\n  animation-name: keyFrameScaleDown;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-in;\n  animation-duration: var(--simple-tooltip-duration-out, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.slide-down-animation {\n  transform: translateY(-2000px);\n  opacity: 0;\n  animation-delay: var(--simple-tooltip-delay-out, 500ms);\n  animation-name: keyFrameSlideDownIn;\n  animation-iteration-count: 1;\n  animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);\n  animation-duration: var(--simple-tooltip-duration-out, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.slide-down-animation-out {\n  transform: translateY(0);\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-out, 500ms);\n  animation-name: keyFrameSlideDownOut;\n  animation-iteration-count: 1;\n  animation-timing-function: cubic-bezier(0.4, 0.0, 1, 1);\n  animation-duration: var(--simple-tooltip-duration-out, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.cancel-animation {\n  animation-delay: -30s !important;\n}\n\n/* Thanks IE 10. */\n.hidden {\n  display: none !important;\n}",":host {\n  display: block;\n  position: absolute;\n  z-index: 99999;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n@keyframes keyFrameScaleUp {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes keyFrameScaleDown {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n\n@keyframes keyFrameFadeInOpacity {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n}\n\n@keyframes keyFrameFadeOutOpacity {\n  0% {\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes keyFrameSlideDownIn {\n  0% {\n    transform: translateY(-2000px);\n    opacity: 0;\n  }\n  10% {\n    opacity: 0.2;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n}\n\n@keyframes keyFrameSlideDownOut {\n  0% {\n    transform: translateY(0);\n    opacity: var(--simple-tooltip-opacity, 1);\n  }\n  10% {\n    opacity: 0.2;\n  }\n  100% {\n    transform: translateY(-2000px);\n    opacity: 0;\n  }\n}\n\n.fade-in-animation {\n  opacity: 0;\n  animation-delay: var(--simple-tooltip-delay-in, 0ms);\n  animation-name: keyFrameFadeInOpacity;\n  animation-iteration-count: 1;\n  animation-timing-function: linear;\n  animation-duration: var(--simple-tooltip-duration-in, 100ms);\n  animation-fill-mode: forwards;\n}\n\n.fade-out-animation {\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-out, 0ms);\n  animation-name: keyFrameFadeOutOpacity;\n  animation-iteration-count: 1;\n  animation-timing-function: linear;\n  animation-duration: var(--simple-tooltip-duration-out, 100ms);\n  animation-fill-mode: forwards;\n}\n\n.scale-up-animation {\n  transform: scale(0);\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-in, 500ms);\n  animation-name: keyFrameScaleUp;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-in;\n  animation-duration: var(--simple-tooltip-duration-in, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.scale-down-animation {\n  transform: scale(1);\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-out, 500ms);\n  animation-name: keyFrameScaleDown;\n  animation-iteration-count: 1;\n  animation-timing-function: ease-in;\n  animation-duration: var(--simple-tooltip-duration-out, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.slide-down-animation {\n  transform: translateY(-2000px);\n  opacity: 0;\n  animation-delay: var(--simple-tooltip-delay-out, 500ms);\n  animation-name: keyFrameSlideDownIn;\n  animation-iteration-count: 1;\n  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\n  animation-duration: var(--simple-tooltip-duration-out, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.slide-down-animation-out {\n  transform: translateY(0);\n  opacity: var(--simple-tooltip-opacity, 1);\n  animation-delay: var(--simple-tooltip-delay-out, 500ms);\n  animation-name: keyFrameSlideDownOut;\n  animation-iteration-count: 1;\n  animation-timing-function: cubic-bezier(0.4, 0, 1, 1);\n  animation-duration: var(--simple-tooltip-duration-out, 500ms);\n  animation-fill-mode: forwards;\n}\n\n.cancel-animation {\n  animation-delay: -30s !important;\n}\n\n/* Thanks IE 10. */\n.hidden {\n  display: none !important;\n}\n\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n.pf-c-popover {\n  font-size: var(--pfe-popover--Fonsize, 16px);\n  position: var(--pfe-popover--Position, relative);\n  min-width: var(--pfe-popover--MinWidth, 360px);\n  max-width: var(--pfe-popover--MaxWidth, 360px);\n  box-shadow: var(--pfe-popover--BoxShadow, 0px 7px 15px #00000026);\n  background-color: var(--pfe-popover--BackgroundColor, #fff);\n  color: var(--pfe-popover--Color, #151515);\n  outline: transparent;\n}\n\n.pf-c-popover .pf-c-popover__arrow {\n  width: var(--pfe-popover__arrow--Width, 30px);\n  height: var(--pfe-popover__arrow--Height, 30px);\n  position: var(--pfe-popover__arrow--Position, absolute);\n  background-color: var(--pfe-popover--BackgroundColor, #fff);\n}\n\n.pf-c-popover.pf-m-top .pf-c-popover__arrow {\n  transform: var(--pfe-popover__arrow--top--Transform, translate(-50%, 50%) rotate(45deg));\n  left: var(--pfe-popover__arrow--top--Left, 50%);\n  bottom: var(--pfe-popover__arrow--top--Bottom, 0);\n  box-shadow: 0px 3px 4px #0000000D;\n}\n\n.pf-c-popover.pf-m-bottom {\n  transform: translateY(20px);\n}\n\n.pf-c-popover.pf-m-bottom .pf-c-popover__arrow {\n  top: var(--pfe-popover__arrow--bottom--Top, 0);\n  left: var(--pfe-popover__arrow--bottom--Left, 50%);\n  transform: var(--pfe-popover__arrow--bottom--Transform, translate(-50%, -50%) rotate(45deg));\n  box-shadow: 0px -3px 4px #0000000D;\n}\n\n.pf-c-popover.pf-m-left .pf-c-popover__arrow {\n  transform: var(--pfe-popover__arrow--left--Transform, translate(50%, -50%) rotate(45deg));\n  top: var(--pfe-popover__arrow--left--Top, 50%);\n  right: var(--pfe-popover__arrow--left--Right, 0);\n  box-shadow: 3px 0px 4px #0000000D;\n}\n\n.pf-c-popover.pf-m-right {\n  transform: translateX(20px);\n}\n\n.pf-c-popover.pf-m-right .pf-c-popover__arrow {\n  transform: var(--pfe-popover__arrow--right--Transform, translate(-50%, -50%) rotate(45deg));\n  top: var(--pfe-popover__arrow--right--Top, 50%);\n  right: var(--pfe-popover__arrow--right--Right);\n  box-shadow: -3px 0px 4px #0000000D;\n}\n\n.pf-c-popover__content {\n  position: relative;\n  padding: var(--pfe-popover__content--Padding, 24px);\n  background-color: var(--pfe-popover--BackgroundColor, #fff);\n}\n\n.pf-c-popover__content > .pf-c-title,\n.pf-c-popover__content #header::slotted(*) {\n  font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif);\n  font-size: var(--pf-c-title--m-xl--FontSize, var(--pf-global--FontSize--xl, 1.25rem));\n  line-height: var(--pfe-theme--line-height, 1.5);\n  font-weight: var(--pfe-theme--font-weight--normal, 400);\n  font-weight: var(--pfe-popover__header--FontWeight, 500);\n  margin-top: 0;\n  margin-bottom: var(--pfe-popover__header--MarginBottom, 8px);\n}\n\n.pf-c-popover__content > .pf-c-title:not(:last-child),\n.pf-c-popover__content #header::slotted(*):not(:last-child) {\n  margin-bottom: var(--pfe-theme--content-spacer--heading--sm, 1rem);\n}\n\n.pf-c-popover__content > .pf-c-button {\n  position: var(--pfe-popover__closeButton--Position, absolute);\n  top: var(--pfe-popover__closeButton--Top, 24px);\n  right: var(--pfe-popover__closeButton--Right, 24px);\n  color: var(--pfe-popover__closeButton--Color, #6B6E74);\n  background-color: transparent;\n  border-color: transparent;\n}\n\n.pf-c-popover__content > .pf-c-button:hover {\n  color: var(--pfe-popover__closeButton--hover--Color, #151515);\n}\n\n.pf-c-popover__content > .pf-c-button:focus {\n  color: var(--pfe-popover__closeButton--hover--Color, #151515);\n}\n\n.pf-c-popover__content > .pf-c-button + * {\n  padding-right: var(--pf-c-popover--c-button--sibling--PaddingRight);\n}\n\n.pf-c-popover__body {\n  word-wrap: break-word;\n}\n\n.pf-c-popover__footer {\n  margin-top: var(--pfe-popover__footer--MarginTop, 16px);\n}\n\n.pf-c-popover__button-group {\n  margin-left: calc(var(--pfe-popover__buttonGroup--gap, 24px) / -2);\n  margin-right: calc(var(--pfe-popover__buttonGroup--gap, 24px) / -2);\n}\n\n.pf-c-popover__button-group slot::slotted(*) {\n  margin-left: calc(var(--pfe-popover__buttonGroup--gap, 24px) / 2);\n  margin-right: calc(var(--pfe-popover__buttonGroup--gap, 24px) / 2);\n}\n\n@supports (gap: 24px) and (display: flex) {\n  .pf-c-popover__button-group {\n    margin-left: unset;\n    margin-right: unset;\n    display: flex;\n    column-gap: var(--pfe-popover__buttonGroup--gap, var(--X-pfe-popover__buttonGroup--gap, 24px));\n    row-gap: unset;\n    flex-wrap: wrap;\n  }\n  .pf-c-popover__button-group slot::slotted(*) {\n    margin-left: unset;\n    margin-right: unset;\n  }\n}\n\n:host([theme=\"dark\"]) {\n  --pfe-popover--Color: var(--pfe-popover--dark--Color, #fff);\n  --pfe-popover--BackgroundColor: var(--pfe-popover--dark--BackgroundColor, #151515);\n  --pfe-popover__closeButton--Color: var(--pfe-popover--dark__closeButton--Color, #fff);\n}\n\n:host([theme=\"dark\"]) .pf-c-button:hover,\n:host([theme=\"dark\"]) .pf-c-button:focus {\n  --pfe-popover__closeButton--hover--Color: var(--pfe-popover--dark__closeButton--hover--Color, #D2D2D2);\n}\n","// Please see the pfe-sass README for guidance on using these tools\n@import \"../../pfe-sass/pfe-sass\";\n@import \"../../pfe-absolute-position/src/pfe-absolute-position.scss\";\n\n$LOCAL: popover;\n\n// Example local variable, using BEM format\n// --pfe-popover__region--Property: value;\n\n// This variable is global so that helper functions can reference it\n$LOCAL-VARIABLES: (\n  Fonsize: 16px,\n  MinWidth: 360px,\n  MaxWidth: 360px,\n  BoxShadow: 0px 7px 15px #00000026,\n  Position: relative,\n  BackgroundColor: #{$pf-color-white},\n  Color: #{$pf-color-black-900},\n  content: (\n    Padding: #{$pf-spacer-sm},\n  ),\n  header: (\n    FontWeight: 500,\n    MarginBottom: #{$pf-spacer-xs},\n  ),\n  footer: (\n    MarginTop: #{$pf-spacer}\n  ),\n  closeButton: (\n    Top: #{$pf-spacer-sm},\n    Right: #{$pf-spacer-sm},\n    Position: absolute,\n    Color: #6B6E74,\n  ),\n  closeButton--hover: (\n    Color: #151515,\n  ),\n  arrow: (\n    Width: 30px,\n    Height: 30px,\n    Position: absolute,\n    BackgroundColor: #{$pf-color-white},\n  ),\n  arrow--top: (\n    Transform: translate(-50%, 50%) rotate(45deg),\n    Left: 50%,\n    Bottom: 0,\n  ),\n  arrow--bottom: (\n    Transform: translate(-50%, -50%) rotate(45deg),\n    Top: 0,\n    Left: 50%,\n  ),\n  arrow--right: (\n    Transform: translate(-50%, -50%) rotate(45deg),\n    Top: 50%,\n    Left: 0,\n  ),\n  arrow--left: (\n    Transform: translate(50%, -50%) rotate(45deg),\n    Top: 50%,\n    Right: 0,\n  ),\n);\n\n:host {\n  // Avoid printing local variables on host, instead use the pfe-local() function to set property values\n  // Example: color: pfe-local(Color);\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n.pf-c-popover {\n  font-size: pfe-local(Fonsize);\n  position: pfe-local(Position);\n  min-width: pfe-local(MinWidth);\n  max-width: pfe-local(MaxWidth);\n  box-shadow: pfe-local(BoxShadow);\n  background-color: pfe-local(BackgroundColor);\n  color: pfe-local(Color);\n  // We are going to disable the focus outline on this element because\n  // we are programatically sending foucs into the popover. This looks\n  // problematic but it's legit.\n  outline: transparent;\n\n  .pf-c-popover__arrow {\n    width: pfe-local(Width, $region: arrow);\n    height: pfe-local(Height, $region: arrow);\n    position: pfe-local(Position, $region: arrow);\n    background-color: pfe-local(BackgroundColor);\n  }\n\n  &.pf-m-top {\n    .pf-c-popover__arrow {\n      transform: pfe-local(Transform, $region: arrow--top);\n      left: pfe-local(Left, $region: arrow--top);\n      bottom: pfe-local(Bottom, $region: arrow--top);\n      box-shadow: 0px 3px 4px #0000000D;\n    }\n  }\n\n  &.pf-m-bottom {\n    // @todo i have no idea why I have to do this. very frustrating.\n    // top and left position work perfectly\n    transform: translateY(20px);\n    .pf-c-popover__arrow {\n      top: pfe-local(Top, $region: arrow--bottom);\n      left: pfe-local(Left, $region: arrow--bottom);\n      transform: pfe-local(Transform, $region: arrow--bottom);\n      box-shadow: 0px -3px 4px #0000000D;\n    }\n  }\n\n  &.pf-m-left {\n    .pf-c-popover__arrow {\n      transform: pfe-local(Transform, $region: arrow--left);\n      top: pfe-local(Top, $region: arrow--left);\n      right: pfe-local(Right, $region: arrow--left);\n      box-shadow: 3px 0px 4px #0000000D;\n    }\n  }\n\n  &.pf-m-right {\n    // @todo i have no idea why I have to do this. very frustrating.\n    // top and left position work perfectly\n    transform: translateX(20px);\n    .pf-c-popover__arrow {\n      transform: pfe-local(Transform, $region: arrow--right);\n      top: pfe-local(Top, $region: arrow--right);\n      right: pfe-local(Right, $region: arrow--right);\n      box-shadow: -3px 0px 4px #0000000D;\n    }\n  }\n}\n\n.pf-c-popover__content {\n  position: relative;\n  padding: pfe-local(Padding, $region: content);\n  background-color: pfe-local(BackgroundColor);\n\n  > .pf-c-title,\n  #header::slotted(*) {\n    @include pfe-typography(xl, $type: \"title\");\n    font-weight: pfe-local(FontWeight, $region: header);\n    margin-top: 0;\n    margin-bottom: pfe-local(MarginBottom, $region: header);\n  }\n\n  // Close button\n  > .pf-c-button {\n    position: pfe-local(Position, $region: closeButton);\n    top: pfe-local(Top, $region: closeButton);\n    right: pfe-local(Right, $region: closeButton);\n    color: pfe-local(Color, $region: closeButton);\n    background-color: transparent;\n    border-color: transparent;\n\n    &:hover {\n      color: pfe-local(Color, $region: closeButton--hover);\n    }\n    &:focus {\n      color: pfe-local(Color, $region: closeButton--hover);\n    }\n\n    // Create room for the close button\n    + * {\n      padding-right: var(--pf-c-popover--c-button--sibling--PaddingRight);\n    }\n  }\n}\n\n// Body\n.pf-c-popover__body {\n  word-wrap: break-word;\n}\n\n.pf-c-popover__footer {\n  margin-top: pfe-local(MarginTop, $region: footer);\n}\n\n// button-group allows adds a consistant gap between buttons and links\n// you can control the gap with --pfe-popover__buttonGroup--gap\n//\n// This is the fallback implementation if the browser doesn't support\n// gap\n.pf-c-popover__button-group {\n  margin-left: calc(var(--pfe-popover__buttonGroup--gap, 24px) / -2);\n  margin-right: calc(var(--pfe-popover__buttonGroup--gap, 24px) / -2);\n\n  & slot::slotted(*) {\n    margin-left: calc(var(--pfe-popover__buttonGroup--gap, 24px) / 2);\n    margin-right: calc(var(--pfe-popover__buttonGroup--gap, 24px) / 2);\n  }\n}\n// This is the future flex gap cleaner implementation\n@supports (gap: 24px) and (display: flex) {\n  .pf-c-popover__button-group {\n    margin-left: unset;\n    margin-right: unset;\n    display: flex;\n    column-gap: var(--pfe-popover__buttonGroup--gap, var(--X-pfe-popover__buttonGroup--gap, 24px));\n    row-gap: unset;\n    flex-wrap: wrap;\n\n    & slot::slotted(*) {\n      margin-left: unset;\n      margin-right: unset;\n    }\n  }\n}\n\n:host([theme=\"dark\"]) {\n  --pfe-popover--Color: var(--pfe-popover--dark--Color, #{$pf-color-white});\n  --pfe-popover--BackgroundColor: var(--pfe-popover--dark--BackgroundColor, #{$pf-color-black-900});\n  --pfe-popover__closeButton--Color: var(--pfe-popover--dark__closeButton--Color, #{$pf-color-white});\n\n  .pf-c-button:hover,\n  .pf-c-button:focus {\n    --pfe-popover__closeButton--hover--Color: var(--pfe-popover--dark__closeButton--hover--Color, #D2D2D2);\n  }\n}","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}","@import \"../maps/_typography\";\n\n/// Mixin for creating an accessible focus state\n/// @group tools\n/// @param {Color} $color [$pfe-color--link]\n/// @see {variable} $pfe-color--link\n/// @example - scss\n/// .thing {\n///   @include pfe-accessibility-focus($pfe-color--link--on-dark);\n/// }\n/// @example - css\n/// .thing {\n///   outline-offset: 1px;\n///   outline-style: dotted;\n///   outline-width: 1px;\n///   text-decoration: none !important;\n///   outline-color: #73bcf7;\n/// }\n@mixin pfe-accessibility-focus($color: $pfe-color--link) {\n  outline-offset: 1px;\n  outline-style: dotted;\n  outline-width: 1px;\n  text-decoration: none !important;\n\n  @if type-of($color) ==color {\n    outline-color: $color;\n  }\n}\n\n@mixin pfe-underline($color: default-link-hover-line, $opacity: 1) {\n  text-decoration: underline;\n  text-decoration-skip: ink;\n}\n\n/// Mixin for authors outside of PFE to control spacing between content\n/// @group typography\n/// @param {*} $sizing [lg, md, sm] \n/// @param {*} $type [heading, body] \n/// @example - scss\n///   @include pfe-content--text--spacing-block(sm);\n@mixin pfe-content--text--spacing-block($sizing: md, $type: body) {\n    &:not(:last-child):not(:empty) {\n        margin-bottom: pfe-var(content-spacer--#{$type}--#{$sizing}); //16px\n    }\n} \n\n/// Mixin for authors outside of PFE to customize block level elements\n/// The variable stack includes a hook just for headings when they appear in the \n/// light DOM within components: --pf-c--FontSize\n///\n/// Components can't control the font size of block level elements like HTML headings \n/// when they are in the light DOM.  A component _could_ redefine the variables for \n/// standard headings by using the variable hooks such as: `--pf-c--content--h4--FontSize` \n/// but it can't know if the light DOM might contain an H1, H2, H3, etc. it shouldn't\n/// redefine the variables for all possible headings. Instead, there is one dedicated\n/// variable for this purpose. \n/// @group typography\n/// @param {*} $sizing [h1, h2, h3, h4, h5, h6, p, small] \n/// @example - scss\n///  .project-wrapper h3  {\n///      @include pfe-title(xl); \n///  }\n/// @example - css\n///  .project-wrapper  h3 {\n///    font-family: \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif;\n///    font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif);\n///    line-height: 1.3;\n///    line-height: var(--pfe-theme--line-height--heading, 1.3);\n///    font-weight: 500;\n///    font-weight: var(--pfe-theme--font-weight--normal, 500);\n///    font-size: 1.25rem;\n///    font-size: var(--pf-c--FontSize, var(--pf-c--content--h3--FontSize, var(--pf-global--FontSize--xl, 1.25rem)));\n///  }\n@mixin pfe-content ($element: \"p\", $base: false){\n    // TEXT\n    @if $element == \"p\" or $element == \"small\" {\n        // Extend includes: line height, weight, font family\n        @extend %pfe-content-base;\n\n        // Accomodate for irregular variable naming\n        @if $element == \"p\" {\n            font-size: var(--pf-c--FontSize, pfe-var(content--FontSize));\n        }\n        @else {\n            font-size: var(--pf-c--FontSize, pfe-var(content--#{$element}--FontSize));\n        }\n        @if $base {\n            font-family: pfe-var(font-family);\n            line-height: pfe-var(line-height);\n            font-weight: pfe-var(font-weight--normal);\n        }\n        // spacing\n        @include pfe-content--text--spacing-block(sm);\n    } \n    @else { // HEADINGS\n        font-family: pfe-var(font-family--heading);\n        line-height: pfe-var(line-height--heading);\n        font-weight: pfe-var(font-weight--normal);\n\n        font-size: var(--pf-c--FontSize, #{pfe-var(content--#{$element}--FontSize)});\n        // spacing\n        @include pfe-content--text--spacing-block(sm, heading);\n    }\n}\n\n\n\n/// Mixin to generate a typography stack - font-family, font-size, line-height, font-weight\n/// and spacing between elements. It accepts a few inputs and determines what variable stack\n/// and CSS properties to output. NOTE! There is an alias mixin `pfe-c-typography` below for easier usage within components. \n/// @group typography\n/// @param {String} $sizing [xl] - Human-readable description for the font-size of the stack you are building.\n/// @param {String} $type [title] - Describes the type of element being created and determines which variable stack to pull from. Also accepts \"text\".\n/// @param {Bool} $base [true] You may opt out of other typography properties (besides size) such as font-weight and line-height (and font-family on text).  \n/// @param {Bool} $spacing [true] - You may opt out of the margin-bottom which adds space below the typographical element \n/// @param {Bool} $important [false] - Boolean value for if properties need to be postfixed with `!important`. Use of `!important` is only recommended for utility classes.\n/// @param {Boolean} $use-local [false] - Set this to true when using the mixin within components. This will print a local CSS variable at the beginning of the CSS variable stack and will omit title/text variables. Note that this mixin will not utilize any values from the $LOCAL-VARIABLES map.\n/// @param {String} $region [null] - For use with local variables only. For more about the regional designation, see pfe-var().\n/// @param {Boolean} $light-dom-heading: [false] - Print the --pf-c--FontSize variable with a value of the font-size variable stack. For more information about --pf-c--FontSize, see the HTML HEADINGS section in pfe-base.scss.\n/// @requires {function} pfe-var\n/// @requires {function} pfe-local\n/// @requires {variable} $pf-title-set--mega\n/// @requires {variable} $pf-title-set--regular\n/// @requires {variable} $pf-title-set--tiny\n/// @example - scss - Basic example for xs text typography set\n/// .small-text {\n///   @include pfe-typography(\n///     $sizing: \"xs\",\n///     $type: \"text\",\n///     $base: true,\n///     $important: true,\n///     $use-local: false\n///   )\n/// }\n/// @example - css - Rendered result\n/// .small-text {\n///   font-size: 0.75rem !important;\n///   font-size: var(--pf-c-text--m-xs--FontSize, var(--pf-global--FontSize--xs, 0.75rem)) !important;\n///   font-family: \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif !important;\n///   font-family: var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n///   line-height: 1.5 !important;\n///   line-height: var(--pfe-theme--line-height, 1.5) !important;\n///   font-weight: 400 !important;\n///   font-weight: var(--pfe-theme--font-weight--normal, 400) !important;\n/// }\n/// \n/// .small-text:not(:last-child):not(:empty) {\n///   margin-bottom: 0.5rem !important;\n///   margin-bottom: var(--pfe-theme--content-spacer--body--sm, 0.5rem) !important;\n/// }\n/// @example - scss - Basic example for 5xl title typography set\n/// .large-heading {\n///   @include pfe-typography(\n///     $sizing: \"5xl\",\n///     $type: \"title\",\n///     $important: true,\n///     $use-local: false\n///   )\n/// }\n/// @example - css - Rendered result\n/// .large-heading {\n///   font-family: \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif !important;\n///   font-family: var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif) !important;\n///   font-size: 2.5rem !important;\n///   font-size: var(--pf-c-title--m-5xl--FontSize, var(--pf-global--FontSize--5xl, 2.5rem)) !important;\n///   line-height: 1.2 !important;\n///   line-height: var(--pfe-theme--line-height--heading-mega, 1.2) !important;\n///   font-weight: 300 !important;\n///   font-weight: var(--pfe-theme--font-weight--light, 300) !important;\n/// }\n/// \n/// .large-heading:not(:last-child) {\n///   margin-bottom: 1.5rem !important;\n///   margin-bottom: var(--pfe-theme--content-spacer--heading--md, 1.5rem) !important;\n/// }\n@mixin pfe-typography (\n        $sizing: \"xl\", \n        $type: \"title\", \n        $base: true, \n        $spacing: true, \n        $use-local: false,\n        $region: null,\n        $light-dom-heading: false,\n        $important: false\n    ){\n\n    // Ensure that even numerical entries are treated like strings, \"6xl\" vs. 6xl\n    $sizing: \"#{$sizing}\";\n\n    // Adds !important to the end of the property; useful for utility classes only. Use with caution. \n    $rules: \"\";\n    @if $important {\n        $rules: \" !important\";\n    }\n    // Text / body copy typography!\n    @if $type == \"text\" {  \n        // Capture the values of properties to use directly or wrapped in the pfe-local function below\n        $font-family: pfe-var(font-family);\n        $line-height: pfe-var(line-height);\n        $font-weight: pfe-var(font-weight--normal);\n        $margin-bottom: pfe-var(content-spacer--body--sm);\n\n        @if $use-local {\n            $font-size: pfe-var(FontSize--#{$sizing});\n            font-size: pfe-local(FontSize, $font-size, $region)#{$rules};\n            @if $base { \n                font-family: pfe-local(LineHeight, $font-family, $region)#{$rules};\n                line-height: pfe-local(LineHeight, $line-height, $region)#{$rules};\n                font-weight: pfe-local(FontWeight, $font-weight, $region)#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child) {\n                    margin-bottom: pfe-local(MarginBottom, $margin-bottom, $region)#{$rules};\n                }\n            }\n        }\n        @else {\n            // include text var and global var in stack\n            $font-size: pfe-var(text--m-#{$sizing}--FontSize);\n            font-size:   $font-size#{$rules};\n            @if $base {  // these styles are ordinarily inherited from the body tag, but some projects may need extra specificity\n                font-family: $font-family#{$rules};\n                line-height: $line-height#{$rules};\n                font-weight: $font-weight#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child):not(:empty) {\n                    margin-bottom: $margin-bottom#{$rules}; //16px\n                }\n            }\n        }\n        // this CSS custom property is an extra hook for components to override things, like .pfe-card { --pf-c-FontSize: 32px; }\n        @if $use-local and $light-dom-heading {\n            --pf-c--FontSize: #{pfe-local(FontSize)};\n        }\n    }\n    // Title typography!\n    @else {\n        // Capture the values of properties to use directly or wrapped in the pfe-local function below\n        // Initialize variables at the $pf-title-set--tiny size\n        // $sizing == \"lg\" or \"md\" or \"sm\" or \"xs\" \n        $line-height: pfe-var(line-height);\n        $font-weight: pfe-var(font-weight--normal);\n        $margin-bottom: pfe-var(content-spacer--heading--sm);\n\n        @if index($pf-title-set--mega, $sizing) != null {\n            $line-height: pfe-var(line-height--heading-mega);\n            $font-weight: pfe-var(font-weight--light);\n            @if $spacing { \n                $margin-bottom: pfe-var(content-spacer--heading--md);\n            }\n        }\n        // $sizing == \"4xl\" or \"3xl\" or \"2xl\" \n        @else if index($pf-title-set--regular, $sizing) != null {\n            $line-height: pfe-var(line-height--heading);\n            $font-weight: pfe-var(font-weight--normal);\n            @if $spacing { \n                $margin-bottom: pfe-var(content-spacer--heading--sm);\n            }\n        }\n        // If this value was not found in the tiny set, it's likely not supported\n        @else if index($pf-title-set--tiny, $sizing) == null {\n            @warn \"#{$sizing} was not found in $pf-title-set--mega, $pf-title-set--regular, or $pf-title-set--tiny.\";\n        }\n\n        // For component use, this option allows the mixin to use values set in the component level map\n        @if $use-local {\n            // remove title var from stack, use global only\n            $font-size: pfe-var(FontSize--#{$sizing});\n\n            font-family: pfe-var(font-family--heading)#{$rules};\n            font-size: pfe-local(FontSize, $font-size, $region)#{$rules};\n            @if $base == true {\n                line-height: pfe-local(LineHeight, $line-height, $region)#{$rules};\n                font-weight: pfe-local(FontWeight, $font-weight, $region)#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child) {\n                    margin-bottom: pfe-local(MarginBottom, $margin-bottom, $region)#{$rules};\n                }\n            }\n        }\n         \n        @else {\n            // include title var and global var in stack\n            $font-size: pfe-var(title--m-#{$sizing}--FontSize);\n            font-family: pfe-var(font-family--heading)#{$rules};\n            font-size: $font-size#{$rules};\n            @if $base == true {\n                line-height: $line-height#{$rules};\n                font-weight: $font-weight#{$rules};\n            }\n            @if $spacing { \n                &:not(:last-child) {\n                    margin-bottom: $margin-bottom#{$rules};\n                }\n            }\n        }\n        // this CSS custom property is an extra hook for components to override things, like .pfe-card { --pf-c-FontSize: 32px; }\n        @if $use-local and $light-dom-heading {\n            --pf-c--FontSize: #{pfe-local(FontSize)};\n        }\n    }\n}\n\n/// ALIAS Typography mixin for generating the font-size only within components. Still accepts all arguments.\n/// @group typography\n/// @param {String} $sizing [xl] - Human-readable description for the font-size of the stack you are building.\n/// @param {String} $type [title] - Describes the type of element being created and determines which variable stack to pull from. Also accepts \"text\".\n/// @param {Bool} $base [false] You may opt out of other typography properties (besides size) such as font-weight and line-height (and font-family on text).  \n/// @param {Bool} $spacing [false] - You may opt out of the margin-bottom which adds space below the typographical element \n/// @param {Bool} $important [false] - Boolean value for if properties need to be postfixed with `!important`. Use of `!important` is only recommended for utility classes.\n/// @param {Boolean} $use-local [true] - Set this to true when using the mixin within components. This will print a local CSS variable at the beginning of the CSS variable stack and will omit title/text variables. Note that this mixin will not utilize any values from the $LOCAL-VARIABLES map.\n/// @param {String} $region [null] - For use with local variables only. For more about the regional designation, see pfe-var().\n/// @param {Boolean} $light-dom-heading: [false] - Print the --pf-c--FontSize variable with a value of the font-size variable stack. For more information about --pf-c--FontSize, see the HTML HEADINGS section in pfe-base.scss.\n/// @requires {function} pfe-var\n/// @requires {function} pfe-local\n/// @requires {variable} $pf-title-set--mega\n/// @requires {variable} $pf-title-set--regular\n/// @requires {variable} $pf-title-set--tiny\n/// @example - scss - Basic example for medium text sizing\n/// $LOCAL: jump-links;\n/// .jump-links-text {\n///    @include pfe-c-typography($type: text, $sizing: md, $region: header, $light-dom-heading: true)\n/// }\n/// @example - css - Rendered result\n/// .jump-links-text {\n///   font-size: 1rem;\n///   font-size: var(--pfe-clipboard__header--FontSize, var(--pf-global--FontSize--md, 1rem));\n///   --pf-c--FontSize: var(--pfe-clipboard--FontSize, 1rem);\n/// }\n@mixin pfe-c-typography (\n        $sizing: \"xl\", \n        $type: \"title\", \n        $base: false,     // different than mixin above\n        $spacing: false,  // different than mixin above\n        $use-local: true, \n        $region: null,\n        $light-dom-heading: false,\n        $important: false\n) {\n  @include pfe-typography(\n        $sizing: $sizing,\n        $type: $type,\n        $base: $base,\n        $spacing: $spacing,\n        $use-local: $use-local,\n        $region: $region,\n        $light-dom-heading: $light-dom-heading,\n        $important: $important,\n  );\n}"],"sourceRoot":"../src"}