// @todo Change to mixins; no efficiency gain with placeholders in web components

/// Clear box element styles
%reset-box {
  margin: 0;
  padding: 0;
}

/// Clear list styles
%reset-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

/// Clear button styles
%reset-button {
  background-color: transparent;
  border: none;
  margin: 0;
  padding: 0;
  text-align: left;
}

/// Set up a container element
%container {
  position: relative;
  display: block;
  width: 100%;
  padding: pfe-var(container-spacer);
}

/// Screen-reader only content
%sr-only {
  position: absolute;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/// Fallback surface styles for IE11 only
%fallback-surface {
  @include browser-query(ie11) {
    background-color: pfe-fetch(surface--lightest) !important;
    color: pfe-fetch(text) !important;
  }
}

/// Fallback text styles for IE11 only
%fallback-text {
  @include browser-query(ie11) {
    color: pfe-fetch(text) !important;
  }
}

%ordered-list-primary {
  // size of the font inside of the circle
  --FontSize: var(--pfe-list-FontSize, 24px);
  // size of the space between the circle and the content
  --gap: var(--pfe-list--gap, 24px);
  // amount of space between list items
  --margin: var(--pfe-list--margin, 24px);
  // font color of the numbers in the circle
  --Color: var(--pfe-list--Color, rgba(238, 0, 0, 1));
  // background color of circle
  --BackgroundColor: var(--pfe-list--BackgroundColor, rgba(238, 0, 0, 0.07));
  // size of the circle
  --size: var(--pfe-list--size, 56px);
  // calculated radius of the circle
  --size-radius: calc(var(--size) / 2);
  // need to set these explicitly to override default list styles
  --Margin: var(--pfe-list--Margin, var(--margin));
  --PaddingLeft: var(--pfe-list--PaddingLeft, 0);

  list-style: none;
  margin: var(--margin);
  padding-left: var(--PaddingLeft);

  & > li {
    // increment the local counter variable
    counter-increment: pfe-list;
    position: relative;
    // we have to make sure that the li is at least the size
    // of the circle
    min-height: calc(var(--size));
    // the li content will start after the circle and a defined gap
    padding-left: calc(var(--gap) + var(--size));
    // offset between li's
    margin-top: calc(var(--margin));
    margin-bottom: calc(var(--margin));
    // the li content needs to align with the middle of the radius but we
    // need to account for the fact that it's also calculating the size
    // of the line height of the number inside of the circle
    padding-top: calc(var(--size-radius) - calc(var(--FontSize) / 2));
  }
  & > li:before {
    @include pfe-typography(2xl, $type: "title");
    // we need to make sure that if the size of the number in the circle changes
    // that doesn't affect the size or shape of the circle. since we don't have
    // any more psuedo elements to work with, we need to use the flexbox technique
    // to center the text.
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    // make the circle using border-radius
    border-radius: 50%;
    // keep the circle on the upper left
    position: absolute;
    top: 0;
    left: 0;
    // set the size of the circle
    width: var(--size);
    height: var(--size);
    // set the contents of the circle
    content: counter(pfe-list);
    font-size: var(--FontSize);
    color: var(--Color);
    background-color: var(--BackgroundColor);
  }

  // @todo we might want to handle this differently
  //       this is a downside of having progressively enhanced grids,
  //       this are pre-setting margins and we have then override them
  &.pfe-l-grid.pfe-m-gutters {
    margin-top: var(--margin);
    margin-bottom: var(--margin);
    > li {
      // maintain offset offset between li's
      margin-top: calc(var(--margin));
      margin-bottom: calc(var(--margin));
    }
  }
}