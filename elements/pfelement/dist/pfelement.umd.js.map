{"version":3,"file":"pfelement.umd.js","sources":["../_temp/reveal.js","../_temp/attrDefValidators.js","../_temp/polyfills--pfelement.js","../_temp/pfelement.umd.js"],"sourcesContent":["let logger = () => null;\n\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","/**\n * Verify that a property definition's `type` field contains one of the allowed\n * types.\n *\n * Allowed types are String, Number, and Boolean.  If `type` is falsy, it\n * defaults to String.\n */\nexport function isAllowedType(definition) {\n  return [String, Number, Boolean].includes(definition.type || String);\n}\n\n/**\n * Verify that a property definition's `default` value is of the correct type.\n *\n * A `default` value is valid if it's of the same type as the `type`\n * definition.  Or, if there is no `type` definition, then it must be a String\n * (the default value for `type`).\n */\nexport function isValidDefaultType(definition) {\n  return definition.hasOwnProperty(\"default\") && definition.default.constructor === definition.type;\n}\n","// @POLYFILL  Array.includes\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, \"includes\", {\n    value: function(valueToFind, fromIndex) {\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      // 1. Let O be ? ToObject(this value).\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If len is 0, return false.\n      if (len === 0) {\n        return false;\n      }\n\n      // 4. Let n be ? ToInteger(fromIndex).\n      //    (If fromIndex is undefined, this step produces the value 0.)\n      var n = fromIndex | 0;\n\n      // 5. If n â‰¥ 0, then\n      //  a. Let k be n.\n      // 6. Else n < 0,\n      //  a. Let k be len + n.\n      //  b. If k < 0, let k be 0.\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      function sameValueZero(x, y) {\n        return x === y || (typeof x === \"number\" && typeof y === \"number\" && isNaN(x) && isNaN(y));\n      }\n\n      // 7. Repeat, while k < len\n      while (k < len) {\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n        // b. If SameValueZero(valueToFind, elementK) is true, return true.\n        if (sameValueZero(o[k], valueToFind)) {\n          return true;\n        }\n        // c. Increase k by 1.\n        k++;\n      }\n\n      // 8. Return false\n      return false;\n    }\n  });\n}\n\n// @POLYFILL Object.entries\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\nif (!Object.entries) {\n  Object.entries = function(obj) {\n    var ownProps = Object.keys(obj),\n      i = ownProps.length,\n      resArray = new Array(i); // preallocate the Array\n    while (i--) resArray[i] = [ownProps[i], obj[ownProps[i]]];\n\n    return resArray;\n  };\n}\n","/*!\n * PatternFly Elements: PFElement 1.3.2\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport { autoReveal } from \"./reveal.js\";\nimport { isAllowedType, isValidDefaultType } from \"./attrDefValidators.js\";\n// Import polyfills: includes\nimport \"./polyfills--pfelement.js\";\n\nconst prefix = \"pfe\";\n\nclass PFElement extends HTMLElement {\n  /**\n   * A boolean value that indicates if the logging should be printed to the console; used for debugging.\n   *\n   * @example In a JS file or script tag: `PFElement._debugLog = true;`\n   */\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      PFElement._debugLog = !!preference;\n    }\n    return PFElement._debugLog;\n  }\n\n  /**\n   * A logging wrapper which checks the debugLog boolean and prints to the console if true.\n   *\n   * @example `PFElement.log(\"Hello\")`\n   */\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  /**\n   * Local logging that outputs the tag name as a prefix automatically\n   *\n   * @example In a component's function: `this.log(\"Hello\")`\n   */\n  log(...msgs) {\n    PFElement.log(`[${this.tag}${this.id ? `#${this.id}` : \"\"}]: ${msgs.join(\", \")}`);\n  }\n\n  /**\n   * A console warning wrapper which formats your output with useful debugging information.\n   *\n   * @example `PFElement.warn(\"Hello\")`\n   */\n  static warn(...msgs) {\n    console.warn(...msgs);\n  }\n\n  /**\n   * Local warning wrapper that outputs the tag name as a prefix automatically.\n   *\n   * @example In a component's function: `this.warn(\"Hello\")`\n   */\n  warn(...msgs) {\n    PFElement.warn(`[${this.tag}${this.id ? `#${this.id}` : ``}]: ${msgs.join(\", \")}`);\n  }\n\n  /**\n   * A console error wrapper which formats your output with useful debugging information.\n   *\n   * @example `PFElement.error(\"Hello\")`\n   */\n  static error(...msgs) {\n    throw new Error([...msgs].join(\" \"));\n  }\n\n  /**\n   * Local error wrapper that outputs the tag name as a prefix automatically.\n   *\n   * @example In a component's function: `this.error(\"Hello\")`\n   */\n  error(...msgs) {\n    PFElement.error(`[${this.tag}${this.id ? `#${this.id}` : ``}]:`, ...msgs);\n  }\n\n  /**\n   * A global definition of component types (a general way of defining the purpose of a\n   * component and how it is put together).\n   */\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\"\n    };\n  }\n\n  /**\n   * The current version of a component; set by the compiler using the package.json data.\n   */\n  static get version() {\n    return \"{{version}}\";\n  }\n\n  /**\n   * A local alias to the static version.\n   *\n   * @example: In the console: `PfeAccordion.version`\n   */\n  get version() {\n    return this._pfeClass.version;\n  }\n\n  /**\n   * Global property definitions: properties managed by the base class that apply to all components.\n   */\n  static get properties() {\n    return {\n      pfelement: {\n        title: \"Upgraded flag\",\n        type: Boolean,\n        default: true,\n        observer: \"_upgradeObserver\"\n      },\n      on: {\n        title: \"Context\",\n        description: \"Describes the visual context (backgrounds).\",\n        type: String,\n        values: [\"light\", \"dark\", \"saturated\"],\n        default: el => el.contextVariable,\n        observer: \"_onObserver\"\n      },\n      context: {\n        title: \"Context hook\",\n        description: \"Lets you override the system-set context.\",\n        type: String,\n        values: [\"light\", \"dark\", \"saturated\"],\n        observer: \"_contextObserver\"\n      },\n      // @TODO: Deprecated with 1.0\n      oldTheme: {\n        type: String,\n        values: [\"light\", \"dark\", \"saturated\"],\n        alias: \"context\",\n        attr: \"pfe-theme\"\n      },\n      _style: {\n        title: \"Custom styles\",\n        type: String,\n        attr: \"style\",\n        observer: \"_inlineStyleObserver\"\n      },\n      type: {\n        title: \"Component type\",\n        type: String,\n        values: [\"container\", \"content\", \"combo\"]\n      }\n    };\n  }\n\n  static get observedAttributes() {\n    const properties = this.allProperties;\n    if (properties) {\n      const oa = Object.keys(properties)\n        .filter(prop => properties[prop].observer || properties[prop].cascade || properties[prop].alias)\n        .map(p => this._convertPropNameToAttrName(p));\n      return [...oa];\n    }\n  }\n\n  /**\n   * A quick way to fetch a random ID value.\n   * _Note:_ All values are prefixes with `pfe` automatically to ensure an ID-safe value is returned.\n   *\n   * @example: In a component's JS: `this.id = this.randomID;`\n   */\n  get randomId() {\n    return (\n      `${prefix}-` +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n\n  /**\n   * Set the --context variable with the provided value in this component.\n   */\n  set contextVariable(value) {\n    this.cssVariable(\"context\", value);\n  }\n\n  /**\n   * Get the current value of the --context variable in this component.\n   * @return {string} [dark|light|saturated]\n   */\n  get contextVariable() {\n    /* @DEPRECATED --theme in 1.0, to be removed in 2.0 */\n    return this.cssVariable(\"context\") || this.cssVariable(\"theme\");\n  }\n\n  /**\n   * Returns a boolean statement of whether or not this component contains any light DOM.\n   * @returns {boolean}\n   * @examples `if(this.hasLightDOM()) this._init();`\n   */\n  hasLightDOM() {\n    return this.children.length || this.textContent.trim().length;\n  }\n\n  /**\n   * Returns a boolean statement of whether or not that slot exists in the light DOM.\n   *\n   * @example: `this.hasSlot(\"header\")`\n   */\n  hasSlot(name) {\n    if (!name) {\n      this.warn(`Please provide at least one slot name for which to search.`);\n      return;\n    }\n\n    switch (typeof name) {\n      case \"string\":\n        return (\n          [...this.children].filter(child => child.hasAttribute(\"slot\") && child.getAttribute(\"slot\") === name).length >\n          0\n        );\n      case \"array\":\n        return name.reduce(\n          n =>\n            [...this.children].filter(child => child.hasAttribute(\"slot\") && child.getAttribute(\"slot\") === n).length >\n            0\n        );\n      default:\n        this.warn(\n          `Did not recognize the type of the name provided to hasSlot; this funciton can accept a string or an array.`\n        );\n        return;\n    }\n  }\n\n  /**\n   * Returns an array with all the slot with the provided name defined in the light DOM.\n   * If no value is provided (i.e., `this.getSlot()`), it returns all unassigned slots.\n   *\n   * @example: `this.hasSlot(\"header\")`\n   */\n  getSlot(name = \"unassigned\") {\n    if (name !== \"unassigned\") {\n      return [...this.children].filter(child => child.hasAttribute(\"slot\") && child.getAttribute(\"slot\") === name);\n    } else {\n      return [...this.children].filter(child => !child.hasAttribute(\"slot\"));\n    }\n  }\n\n  cssVariable(name, value, element = this) {\n    name = name.substr(0, 2) !== \"--\" ? \"--\" + name : name;\n    if (value) {\n      element.style.setProperty(name, value);\n      return value;\n    }\n    return (\n      window\n        .getComputedStyle(element)\n        .getPropertyValue(name)\n        .trim() || null\n    );\n  }\n\n  /**\n   * This alerts nested components to a change in the context\n   */\n  contextUpdate() {\n    // If a value has been set, alert any nested children of the change\n    [...this.querySelectorAll(\"*\"), ...this.shadowRoot.querySelectorAll(\"*\")]\n      .filter(item => item.tagName.toLowerCase().slice(0, 4) === `${prefix}-`)\n      .map(child => {\n        this.log(`Update context of ${child.tag}`);\n        Promise.all([customElements.whenDefined(child.tagName.toLowerCase())]).then(() => {\n          // Ask the component to recheck it's context in case it changed\n          child.resetContext(this.on);\n        });\n      });\n  }\n\n  resetContext(fallback) {\n    this.log(`Resetting context on ${this.tag}`);\n    // Priority order for context values to be pulled from:\n    //--> 1. context (OLD: pfe-theme)\n    //--> 2. --context (OLD: --theme)\n    let value = this.context || this.contextVariable || fallback;\n    this.on = value;\n  }\n\n  constructor(pfeClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this._parseObserver = this._parseObserver.bind(this);\n\n    // TODO: Deprecated for 1.0 release\n    this.schemaProps = pfeClass.schemaProperties;\n\n    // TODO: Migrate this out of schema for 1.0\n    this.slots = pfeClass.slots;\n\n    this.template = document.createElement(\"template\");\n\n    // Set the default value to the passed in type\n    if (type && this._pfeClass.allProperties.type) this._pfeClass.allProperties.type.default = type;\n\n    // Initalize the properties and attributes from the property getter\n    this._initializeProperties();\n\n    this.attachShadow({ mode: \"open\" });\n\n    // Tracks if the component has been initially rendered. Useful if for debouncing\n    // template updates.\n    this._rendered = false;\n\n    if (!delayRender) this.render();\n  }\n\n  /**\n   * Standard connected callback; fires when the component is added to the DOM.\n   */\n  connectedCallback() {\n    this._initializeAttributeDefaults();\n\n    if (window.ShadyCSS) window.ShadyCSS.styleElement(this);\n\n    // If the slot definition exists, set up an observer\n    if (typeof this.slots === \"object\") {\n      this._slotsObserver = new MutationObserver(() => this._initializeSlots(this.tag, this.slots));\n      this._initializeSlots(this.tag, this.slots);\n    }\n  }\n\n  /**\n   * Standard disconnected callback; fires when a componet is removed from the DOM.\n   * Add your removeEventListeners here.\n   */\n  disconnectedCallback() {\n    if (this._cascadeObserver) this._cascadeObserver.disconnect();\n    if (this._slotsObserver) this._slotsObserver.disconnect();\n  }\n\n  /**\n   * Attribute changed callback fires when attributes are updated.\n   * This combines the global and the component-specific logic.\n   */\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._pfeClass.allProperties) return;\n\n    let propName = this._pfeClass._attr2prop(attr);\n\n    const propDef = this._pfeClass.allProperties[propName];\n\n    // If the attribute that changed derives from a property definition\n    if (propDef) {\n      // If the property/attribute pair has an alias, copy the new value to the alias target\n      if (propDef.alias) {\n        const aliasedPropDef = this._pfeClass.allProperties[propDef.alias];\n        const aliasedAttr = this._pfeClass._prop2attr(propDef.alias);\n        const aliasedAttrVal = this.getAttribute(aliasedAttr);\n        if (aliasedAttrVal !== newVal) {\n          this[propDef.alias] = this._castPropertyValue(aliasedPropDef, newVal);\n        }\n      }\n\n      // If the property/attribute pair has an observer, fire it\n      // Observers receive the oldValue and the newValue from the attribute changed callback\n      if (propDef.observer) {\n        this[propDef.observer](this._castPropertyValue(propDef, oldVal), this._castPropertyValue(propDef, newVal));\n      }\n\n      // If the property/attribute pair has a cascade target, copy the attribute to the matching elements\n      // Note: this handles the cascading of new/updated attributes\n      if (propDef.cascade) {\n        this._copyAttribute(attr, this._pfeClass._convertSelectorsToArray(propDef.cascade));\n      }\n    }\n  }\n\n  /**\n   * Standard render function.\n   */\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n\n    this.log(`render`);\n\n    // Cascade properties to the rendered template\n    this.cascadeProperties();\n    // Reset the display context\n    this.resetContext();\n\n    // If the slot definition exists, set up an observer\n    if (typeof this.slots === \"object\" && this._slotsObserver) {\n      this._slotsObserver.observe(this, { childList: true });\n    }\n\n    // If an observer was defined, set it to begin observing here\n    if (this._cascadeObserver) {\n      this._cascadeObserver.observe(this, {\n        attributes: true,\n        childList: true,\n        subtree: true\n      });\n    }\n\n    this._rendered = true;\n  }\n\n  /**\n   * A wrapper around an event dispatch to standardize formatting.\n   */\n  emitEvent(name, { bubbles = true, cancelable = false, composed = false, detail = {} } = {}) {\n    this.log(`Custom event: ${name}`);\n    this.dispatchEvent(\n      new CustomEvent(name, {\n        bubbles,\n        cancelable,\n        composed,\n        detail\n      })\n    );\n  }\n\n  /**\n   * Handles the cascading of properties to nested components when new elements are added\n   * Attribute updates/additions are handled by the attribute callback\n   */\n  cascadeProperties(nodeList) {\n    const cascade = this._pfeClass._getCache(\"cascadingProperties\");\n\n    if (cascade) {\n      if (window.ShadyCSS && this._cascadeObserver) this._cascadeObserver.disconnect();\n\n      let selectors = Object.keys(cascade);\n      // Find out if anything in the nodeList matches any of the observed selectors for cacading properties\n      if (nodeList) {\n        selectors = [];\n        [...nodeList].forEach(nodeItem => {\n          Object.keys(cascade).map(selector => {\n            // if this node has a match function (i.e., it's an HTMLElement, not\n            // a text node), see if it matches the selector, otherwise drop it (like it's hot).\n            if (nodeItem.matches && nodeItem.matches(selector)) {\n              selectors.push(selector);\n            }\n          });\n        });\n      }\n\n      // If a match was found, cascade each attribute to the element\n      if (selectors) {\n        const components = selectors\n          .filter(item => item.slice(0, prefix.length + 1) === `${prefix}-`)\n          .map(name => customElements.whenDefined(name));\n\n        if (components)\n          Promise.all(components).then(() => {\n            this._copyAttributes(selectors, cascade);\n          });\n        else this._copyAttributes(selectors, cascade);\n      }\n\n      // @TODO This is here for IE11 processing; can move this after deprecation\n      if (window.ShadyCSS && this._rendered && this._cascadeObserver)\n        this._cascadeObserver.observe(this, {\n          attributes: true,\n          childList: true,\n          subtree: true\n        });\n    }\n  }\n\n  /* --- Observers for global properties --- */\n\n  /**\n   * This responds to changes in the pfelement attribute; indicates if the component upgraded\n   * @TODO maybe we should use just the attribute instead of the class?\n   * https://github.com/angular/angular/issues/15399#issuecomment-318785677\n   */\n  _upgradeObserver() {\n    this.classList.add(\"PFElement\");\n  }\n\n  /**\n   * This responds to changes in the context attribute; manual override tool\n   */\n  _contextObserver(oldValue, newValue) {\n    if (newValue && ((oldValue && oldValue !== newValue) || !oldValue)) {\n      this.on = newValue;\n      this.cssVariable(\"context\", newValue);\n    }\n  }\n\n  /**\n   * This responds to changes in the context; source of truth for components\n   */\n  _onObserver(oldValue, newValue) {\n    if ((oldValue && oldValue !== newValue) || (newValue && !oldValue)) {\n      // Fire an event for child components\n      this.contextUpdate();\n    }\n  }\n\n  /**\n   * This responds to inline style changes and greps for context or theme updates.\n   * @TODO: --theme will be deprecated in 2.0\n   */\n  _inlineStyleObserver(oldValue, newValue) {\n    this.log(`Style observer activated on ${this.tag}`);\n    let newContext = \"\";\n    // Grep for context/theme\n    const regex = /--(?:context|theme):\\s*(?:\\\"*(light|dark|saturated)\\\"*)/gi;\n    let found = regex.exec(newValue);\n    if (found) {\n      newContext = found[1];\n      // If the new context value differs from the on value, update\n      if (newContext !== this.on && !this.context) this.on = newContext;\n    }\n  }\n\n  /**\n   * This is connected with a mutation observer that watches for updates to the light DOM\n   * and pushes down the cascading values\n   */\n  _parseObserver(mutationsList) {\n    // Iterate over the mutation list, look for cascade updates\n    for (let mutation of mutationsList) {\n      // If a new node is added, attempt to cascade attributes to it\n      if (mutation.type === \"childList\" && mutation.addedNodes.length) {\n        this.cascadeProperties(mutation.addedNodes);\n      }\n      // @TODO: Do something when mutation type is attribute?\n      // else if (mutation.type === \"attributes\") {}\n    }\n  }\n  /* --- End observers --- */\n\n  /**\n   * Validate that the property meets the requirements for type and naming.\n   */\n  static _validateProperties() {\n    for (let propName in this.allProperties) {\n      const propDef = this.allProperties[propName];\n\n      // Verify that properties conform to the allowed data types\n      if (!isAllowedType(propDef)) {\n        this.error(`Property \"${propName}\" on ${this.name} must have type String, Number, or Boolean.`);\n      }\n\n      // Verify the property name conforms to our naming rules\n      if (!/^[a-z_]/.test(propName)) {\n        this.error(\n          `Property ${this.name}.${propName} defined, but prop names must begin with a lower-case letter or an underscore`\n        );\n      }\n\n      const isFunction = typeof propDef.default === \"function\";\n\n      // If the default value is not the same type as defined by the property\n      // and it's not a function (we can't validate the output of the function\n      // on the class level), throw a warning\n      if (propDef.default && !isValidDefaultType(propDef) && !isFunction)\n        this.error(\n          `[${this.name}] The default value \\`${propDef.default}\\` does not match the assigned type ${propDef.type.name} for the \\'${propName}\\' property`\n        );\n    }\n  }\n\n  /**\n   * Convert provided property value to the correct type as defined in the properties method.\n   */\n  _castPropertyValue(propDef, attrValue) {\n    switch (propDef.type) {\n      case Number:\n        // map various attribute string values to their respective\n        // desired property values\n        return {\n          [attrValue]: Number(attrValue),\n          null: null,\n          NaN: NaN,\n          undefined: undefined\n        }[attrValue];\n\n      case Boolean:\n        return attrValue !== null;\n\n      case String:\n        return {\n          [attrValue]: attrValue,\n          undefined: undefined\n        }[attrValue];\n\n      default:\n        return attrValue;\n    }\n  }\n\n  /**\n   * Map provided value to the attribute name on the component.\n   */\n  _assignValueToAttribute(obj, attr, value) {\n    // If the default is false and the property is boolean, we don't need to do anything\n    const isBooleanFalse = obj.type === Boolean && !value;\n    const isNull = value === null;\n    const isUndefined = typeof value === \"undefined\";\n\n    // If the attribute is not defined, set the default value\n    if (isBooleanFalse || isNull || isUndefined) {\n      this.removeAttribute(attr);\n    } else {\n      // Boolean values get an empty string: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n      if (obj.type === Boolean && typeof value === \"boolean\") {\n        this.setAttribute(attr, \"\");\n      } else {\n        // Validate against the provided values\n        if (obj.values) {\n          this._validateAttributeValue(obj, attr, value);\n        }\n\n        // Still accept the value provided even if it's not valid\n        this.setAttribute(attr, value);\n      }\n    }\n  }\n\n  /**\n   * Maps the defined slots into an object that is easier to query\n   */\n  _initializeSlots(tag, slots) {\n    this.log(\"Validate slots...\");\n\n    if (window.ShadyCSS && this._slotsObserver) this._slotsObserver.disconnect();\n\n    // Loop over the properties provided by the schema\n    Object.keys(slots).forEach(slot => {\n      let slotObj = slots[slot];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof slotObj === \"object\") {\n        let slotExists = false;\n        let result = [];\n        // If it's a named slot, look for that slot definition\n        if (slotObj.namedSlot) {\n          // Check prefixed slots\n          result = this.getSlot(`${tag}--${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n\n          // Check for unprefixed slots\n          result = this.getSlot(`${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n          // If it's the default slot, look for direct children not assigned to a slot\n        } else {\n          result = [...this.children].filter(child => !child.hasAttribute(\"slot\"));\n\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n        }\n\n        // If the slot exists, attach an attribute to the parent to indicate that\n        if (slotExists) {\n          this.setAttribute(`has_${slot}`, \"\");\n        } else {\n          this.removeAttribute(`has_${slot}`);\n        }\n      }\n    });\n\n    this.log(\"Slots validated.\");\n\n    if (window.ShadyCSS && this._slotsObserver) this._slotsObserver.observe(this, { childList: true });\n  }\n\n  /**\n   * Sets up the property definitions based on the properties method.\n   */\n  _initializeProperties() {\n    const properties = this._pfeClass.allProperties;\n    let hasCascade = false;\n\n    if (Object.keys(properties).length > 0) this.log(`Initialize properties`);\n\n    for (let propName in properties) {\n      const propDef = properties[propName];\n\n      // Check if the property exists, throw a warning if it does.\n      // HTMLElements have a LOT of properties; it wouldn't be hard\n      // to overwrite one accidentally.\n      if (typeof this[propName] !== \"undefined\") {\n        this.log(\n          `Property \"${propName}\" on ${this.constructor.name} cannot be defined because the property name is reserved`\n        );\n      } else {\n        const attrName = this._pfeClass._prop2attr(propName);\n        if (propDef.cascade) hasCascade = true;\n\n        Object.defineProperty(this, propName, {\n          get: () => {\n            const attrValue = this.getAttribute(attrName);\n\n            return this._castPropertyValue(propDef, attrValue);\n          },\n          set: rawNewVal => {\n            // Assign the value to the attribute\n            this._assignValueToAttribute(propDef, attrName, rawNewVal);\n\n            return rawNewVal;\n          },\n          writeable: true,\n          enumerable: true,\n          configurable: false\n        });\n      }\n    }\n\n    // If any of the properties has cascade, attach a new mutation observer to the component\n    if (hasCascade) {\n      this._cascadeObserver = new MutationObserver(this._parseObserver);\n    }\n  }\n\n  /**\n   * Intialize the default value for an attribute.\n   */\n  _initializeAttributeDefaults() {\n    const properties = this._pfeClass.allProperties;\n\n    for (let propName in properties) {\n      const propDef = properties[propName];\n\n      const attrName = this._pfeClass._prop2attr(propName);\n\n      if (propDef.hasOwnProperty(\"default\")) {\n        let value = propDef.default;\n\n        // Check if default is a function\n        if (typeof propDef.default === \"function\") {\n          value = propDef.default(this);\n        }\n\n        // If the attribute has not already been set, assign the default value\n        if (!this.hasAttribute(attrName)) {\n          // Assign the value to the attribute\n          this._assignValueToAttribute(propDef, attrName, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate the value against provided values.\n   */\n  // @TODO add support for a validation function\n  _validateAttributeValue(propDef, attr, value) {\n    if (\n      Array.isArray(propDef.values) &&\n      propDef.values.length > 0 &&\n      !propDef.values.includes(value) // ||\n      // (typeof propDef.values === \"string\" && propDef.values !== value) ||\n      // (typeof propDef.values === \"function\" && !propDef.values(value))\n    ) {\n      this.warn(\n        `${value} is not a valid value for ${attr}. Please provide one of the following values: ${propDef.values.join(\n          \", \"\n        )}`\n      );\n    }\n\n    return value;\n  }\n\n  /**\n   * Look up an attribute name linked to a given property name.\n   */\n  static _prop2attr(propName) {\n    return this._getCache(\"prop2attr\")[propName];\n  }\n\n  /**\n   * Look up an property name linked to a given attribute name.\n   */\n  static _attr2prop(attrName) {\n    return this._getCache(\"attr2prop\")[attrName];\n  }\n\n  /**\n   * Convert a property name to an attribute name.\n   */\n  static _convertPropNameToAttrName(propName) {\n    const propDef = this.allProperties[propName];\n\n    if (propDef.attr) {\n      return propDef.attr;\n    }\n\n    return propName\n      .replace(/^_/, \"\")\n      .replace(/^[A-Z]/, l => l.toLowerCase())\n      .replace(/[A-Z]/g, l => `-${l.toLowerCase()}`);\n  }\n\n  /**\n   * Convert an attribute name to a property name.\n   */\n  static _convertAttrNameToPropName(attrName) {\n    for (let prop in this.allProperties) {\n      if (this.allProperties[prop].attr === attrName) {\n        return prop;\n      }\n    }\n\n    // Convert the property name to kebab case\n    const propName = attrName.replace(/-([A-Za-z])/g, l => l[1].toUpperCase());\n    return propName;\n  }\n\n  _copyAttributes(selectors, set) {\n    selectors.forEach(selector => {\n      set[selector].forEach(attr => {\n        this._copyAttribute(attr, selector);\n      });\n    });\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [...this.querySelectorAll(to), ...this.shadowRoot.querySelectorAll(to)];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  static _convertSelectorsToArray(selectors) {\n    if (selectors) {\n      if (typeof selectors === \"string\") return selectors.split(\",\");\n      else if (typeof selectors === \"array\" || typeof selectors === \"object\") return selectors;\n      else {\n        this.warn(`selectors should be provided as a string, array, or object; received: ${typeof selectors}.`);\n      }\n    }\n\n    return;\n  }\n\n  static _parsePropertiesForCascade(mergedProperties) {\n    let cascadingProperties = {};\n    // Parse the properties to pull out attributes that cascade\n    for (const [propName, config] of Object.entries(mergedProperties)) {\n      let cascadeTo = this._convertSelectorsToArray(config.cascade);\n\n      // Iterate over each node in the cascade list for this property\n      if (cascadeTo)\n        cascadeTo.map(nodeItem => {\n          let attr = this._prop2attr(propName);\n          // Create an object with the node as the key and an array of attributes\n          // that are to be cascaded down to it\n          if (!cascadingProperties[nodeItem]) cascadingProperties[nodeItem] = [attr];\n          else cascadingProperties[nodeItem].push(attr);\n        });\n    }\n\n    return cascadingProperties;\n  }\n\n  /**\n   * Caching the attributes and properties data for efficiency\n   */\n  static create(pfe) {\n    pfe._createCache();\n    pfe._populateCache(pfe);\n    pfe._validateProperties();\n    window.customElements.define(pfe.tag, pfe);\n  }\n\n  static _createCache() {\n    this._cache = {\n      properties: {},\n      globalProperties: {},\n      componentProperties: {},\n      cascadingProperties: {},\n      attr2prop: {},\n      prop2attr: {}\n    };\n  }\n\n  /**\n   * Cache an object in a given cache namespace.  This overwrites anything\n   * already in that namespace.\n   */\n  static _setCache(namespace, object) {\n    this._cache[namespace] = object;\n  }\n\n  /**\n   * Get a cached object by namespace, or get all cached objects.\n   */\n  static _getCache(namespace) {\n    return namespace ? this._cache[namespace] : this._cache;\n  }\n\n  /**\n   * Populate initial values for properties cache.\n   */\n  static _populateCache(pfe) {\n    // @TODO add a warning when a component property conflicts with a global property.\n    const mergedProperties = { ...pfe.properties, ...PFElement.properties };\n\n    pfe._setCache(\"componentProperties\", pfe.properties);\n    pfe._setCache(\"globalProperties\", PFElement.properties);\n    pfe._setCache(\"properties\", mergedProperties);\n\n    // create mapping objects to go from prop name to attrname and back\n    const prop2attr = {};\n    const attr2prop = {};\n    for (let propName in mergedProperties) {\n      const attrName = this._convertPropNameToAttrName(propName);\n      prop2attr[propName] = attrName;\n      attr2prop[attrName] = propName;\n    }\n    pfe._setCache(\"attr2prop\", attr2prop);\n    pfe._setCache(\"prop2attr\", prop2attr);\n\n    const cascadingProperties = this._parsePropertiesForCascade(mergedProperties);\n    if (Object.keys(cascadingProperties)) pfe._setCache(\"cascadingProperties\", cascadingProperties);\n  }\n\n  /**\n   * allProperties returns an object containing PFElement's global properties\n   * and the descendents' (such as PfeCard, etc) component properties.  The two\n   * objects are merged together and in the case of a property name conflict,\n   * PFElement's properties override the component's properties.\n   */\n  static get allProperties() {\n    return this._getCache(\"properties\");\n  }\n\n  /**\n   * cascadingProperties returns an object containing PFElement's global properties\n   * and the descendents' (such as PfeCard, etc) component properties.  The two\n   * objects are merged together and in the case of a property name conflict,\n   * PFElement's properties override the component's properties.\n   */\n  static get cascadingProperties() {\n    return this._getCache(\"cascadingProperties\");\n  }\n}\n\nautoReveal(PFElement.log);\n\nexport default PFElement;\n"],"names":["logger","reveal","window","document","body","removeAttribute","autoReveal","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","handleWebComponentsReady","addEventListener","isAllowedType","definition","String","Number","Boolean","includes","type","isValidDefaultType","hasOwnProperty","default","constructor","Array","prototype","Object","defineProperty","value","valueToFind","fromIndex","TypeError","o","len","length","n","k","Math","max","abs","sameValueZero","x","y","isNaN","entries","obj","ownProps","keys","i","resArray","prefix","PFElement","msgs","log","tag","id","join","warn","error","children","textContent","trim","name","filter","child","hasAttribute","getAttribute","reduce","element","substr","style","setProperty","getComputedStyle","getPropertyValue","querySelectorAll","shadowRoot","item","tagName","toLowerCase","slice","map","Promise","all","customElements","whenDefined","then","resetContext","on","fallback","context","contextVariable","_pfeClass","version","random","toString","cssVariable","preference","_debugLog","debugLog","Error","Container","Content","Combo","pfelement","title","observer","description","values","el","oldTheme","alias","attr","_style","properties","allProperties","oa","prop","cascade","_convertPropNameToAttrName","p","pfeClass","delayRender","_parseObserver","bind","schemaProps","schemaProperties","slots","template","createElement","_initializeProperties","attachShadow","mode","_rendered","render","_initializeAttributeDefaults","ShadyCSS","styleElement","babelHelpers.typeof","_slotsObserver","MutationObserver","_initializeSlots","_cascadeObserver","disconnect","oldVal","newVal","propName","_attr2prop","propDef","aliasedPropDef","aliasedAttr","_prop2attr","aliasedAttrVal","_castPropertyValue","_copyAttribute","_convertSelectorsToArray","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","cascadeProperties","observe","childList","attributes","subtree","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","nodeList","_getCache","selectors","forEach","nodeItem","matches","selector","push","components","_copyAttributes","classList","add","oldValue","newValue","contextUpdate","newContext","regex","found","exec","mutationsList","mutation","addedNodes","attrValue","NaN","undefined","isBooleanFalse","isNull","isUndefined","setAttribute","_validateAttributeValue","slotObj","slot","slotExists","result","namedSlot","getSlot","nodes","hasCascade","attrName","get","set","_assignValueToAttribute","rawNewVal","writeable","enumerable","configurable","isArray","to","recipients","fname","node","test","isFunction","replace","l","toUpperCase","split","mergedProperties","cascadingProperties","config","cascadeTo","pfe","_createCache","_populateCache","_validateProperties","define","_cache","globalProperties","componentProperties","attr2prop","prop2attr","namespace","object","_setCache","_parsePropertiesForCascade","HTMLElement"],"mappings":"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"}