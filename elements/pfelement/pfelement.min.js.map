{"version":3,"file":"pfelement.min.js","sources":["pfelement.js"],"sourcesContent":["/*\n * Copyright 2019 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nlet logger = () => null;\n\nfunction reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\nfunction autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n\n/*\n * Copyright 2019 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\nconst prefix = \"pfe-\";\n\nclass PFElement extends HTMLElement {\n  static create(pfe) {\n    window.customElements.define(pfe.tag, pfe);\n  }\n\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      PFElement._debugLog = !!preference;\n    }\n    return PFElement._debugLog;\n  }\n\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\"\n    };\n  }\n\n  get pfeType() {\n    return this.getAttribute(`${prefix}type`);\n  }\n\n  set pfeType(value) {\n    this.setAttribute(`${prefix}type`, value);\n  }\n\n  // Returns a single element assigned to that slot; if multiple, it returns the first\n  has_slot(name) {\n    return this.querySelector(`[slot='${name}']`);\n  }\n\n  // Returns an array with all elements assigned to that slot\n  has_slots(name) {\n    return [...this.querySelectorAll(`[slot='${name}']`)];\n  }\n\n  constructor(pfeClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this.connected = false;\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this.props = pfeClass.properties;\n    this._queue = [];\n    this.template = document.createElement(\"template\");\n\n    this.attachShadow({ mode: \"open\" });\n\n    if (type) {\n      this._queueAction({\n        type: \"setProperty\",\n        data: {\n          name: \"pfeType\",\n          value: type\n        }\n      });\n    }\n\n    if (!delayRender) {\n      this.render();\n    }\n  }\n\n  connectedCallback() {\n    this.connected = true;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.styleElement(this);\n    }\n\n    this.classList.add(\"PFElement\");\n\n    if (typeof this.props === \"object\") {\n      this._mapSchemaToProperties(this.tag, this.props);\n    }\n\n    if (this._queue.length) {\n      this._processQueue();\n    }\n  }\n\n  disconnectedCallback() {\n    this.connected = false;\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._pfeClass.cascadingAttributes) {\n      return;\n    }\n\n    const cascadeTo = this._pfeClass.cascadingAttributes[attr];\n    if (cascadeTo) {\n      this._copyAttribute(attr, cascadeTo);\n    }\n  }\n\n  _copyAttribute(name, to) {\n    const recipients = [\n      ...this.querySelectorAll(to),\n      ...this.shadowRoot.querySelectorAll(to)\n    ];\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    for (const node of recipients) {\n      node[fname](name, value);\n    }\n  }\n\n  // Map the imported properties json to real props on the element\n  // @notice static getter of properties is built via tooling\n  // to edit modify src/element.json\n  _mapSchemaToProperties(tag, properties) {\n    // Loop over the properties provided by the schema\n    Object.keys(properties).forEach(attr => {\n      let data = properties[attr];\n      // Prefix default is true\n      let hasPrefix = true;\n      let attrName = attr;\n      // Set the attribute's property equal to the schema input\n      this[attr] = data;\n      // Initialize the value to null\n      this[attr].value = null;\n\n      if(typeof this[attr].prefixed !== \"undefined\") {\n        hasPrefix = this[attr].prefixed;\n      }\n\n      if(hasPrefix) {\n        attrName = `${prefix}${attr}`;\n      }\n\n      // If the attribute exists on the host\n      if (this.hasAttribute(attrName)) {\n        // Set property value based on the existing attribute\n        this[attr].value = this.getAttribute(attrName);\n      }\n      // Otherwise, look for a default and use that instead\n      else if (data.default) {\n        const dependency_exists = this._hasDependency(tag, data.options);\n        const no_dependencies =\n          !data.options || (data.options && !data.options.dependencies.length);\n        // If the dependency exists or there are no dependencies, set the default\n        if (dependency_exists || no_dependencies) {\n          this.setAttribute(attrName, data.default);\n          this[attr].value = data.default;\n        }\n      }\n    });\n  }\n\n  // Test whether expected dependencies exist\n  _hasDependency(tag, opts) {\n    // Get any possible dependencies for this attribute to exist\n    let dependencies = opts ? opts.dependencies : [];\n    // Initialize the dependency return value\n    let hasDependency = false;\n    // Check that dependent item exists\n    // Loop through the dependencies defined\n    for (let i = 0; i < dependencies.length; i += 1) {\n      const slot_exists =\n        dependencies[i].type === \"slot\" &&\n        this.has_slot(`${tag}--${dependencies[i].id}`);\n      const attribute_exists =\n        dependencies[i].type === \"attribute\" &&\n        this.getAttribute(`${prefix}${dependencies[i].id}`);\n      // If the type is slot, check that it exists OR\n      // if the type is an attribute, check if the attribute is defined\n      if (slot_exists || attribute_exists) {\n        // If the slot does exist, add the attribute with the default value\n        hasDependency = true;\n        // Exit the loop\n        break;\n      }\n    }\n    // Return a boolean if the dependency exists\n    return hasDependency;\n  }\n\n  _queueAction(action) {\n    this._queue.push(action);\n  }\n\n  _processQueue() {\n    this._queue.forEach(action => {\n      this[`_${action.type}`](action.data);\n    });\n\n    this._queue = [];\n  }\n\n  _setProperty({ name, value }) {\n    this[name] = value;\n  }\n\n  static var(name, element = document.body) {\n    return window\n      .getComputedStyle(element)\n      .getPropertyValue(name)\n      .trim();\n  }\n\n  var(name) {\n    return PFElement.var(name, this);\n  }\n\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n  }\n\n  log(...msgs) {\n    PFElement.log(`[${this.tag}]`, ...msgs);\n  }\n}\n\nautoReveal(PFElement.log);\n\nexport default PFElement;\n//# sourceMappingURL=pfelement.js.map\n"],"names":["logger","handleWebComponentsReady","window","document","body","removeAttribute","prefix","PFElement","HTMLElement","[object Object]","pfe","customElements","define","tag","preference","_debugLog","msgs","debugLog","console","log","PfeTypes","Container","Content","Combo","pfeType","this","getAttribute","value","setAttribute","name","querySelector","querySelectorAll","pfeClass","type","delayRender","super","connected","_pfeClass","props","properties","_queue","template","createElement","attachShadow","mode","_queueAction","data","render","ShadyCSS","styleElement","classList","add","_mapSchemaToProperties","length","_processQueue","attr","oldVal","newVal","cascadingAttributes","cascadeTo","_copyAttribute","to","recipients","shadowRoot","fname","node","Object","keys","forEach","hasPrefix","attrName","prefixed","hasAttribute","default","dependency_exists","_hasDependency","options","no_dependencies","dependencies","opts","hasDependency","i","slot_exists","has_slot","id","attribute_exists","action","push","element","getComputedStyle","getPropertyValue","trim","var","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","addEventListener","autoReveal"],"mappings":"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"}