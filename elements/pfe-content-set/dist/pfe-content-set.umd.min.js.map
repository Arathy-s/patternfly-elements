{"version":3,"file":"pfe-content-set.umd.min.js","sources":["../_temp/polyfills--pfe-content-set.js","../_temp/pfe-content-set.umd.js"],"sourcesContent":["// @POLYFILL  NodeList.prototype.forEach()\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function(callback, thisArg) {\n    thisArg = thisArg || window;\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\n// @POLYFILL  Object.prototype.assign()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n      if (target === null || target === undefined) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*!\n * PatternFly Elements: PfeContentSet 1.1.0\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: matches, closest, includes, assign\nimport \"./polyfills--pfe-content-set.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion\";\nimport PfeTabs from \"../../pfe-tabs/dist/pfe-tabs\";\n\nconst CONTENT_MUTATION_CONFIG = {\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nclass PfeContentSet extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.1.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:block}#lightdom,:host([hidden]){display:none} /*# sourceMappingURL=pfe-content-set.min.css.map */</style>\n<div id=\"lightdom\" hidden>\n  <slot></slot>\n</div>\n<pfe-tabs hidden visible-at=\"large\"></pfe-tabs>\n<pfe-accordion hidden visible-at=\"small\"></pfe-accordion>`;\n  }\n\n  static get tag() {\n    return \"pfe-content-set\";\n  }\n\n  get templateUrl() {\n    return \"pfe-content-set.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-content-set.scss\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Content set\",\n      description:\n        \"This element creates a flexible component that renders an accordion or tabset depending on screen size.\"\n    };\n  }\n\n  static get pfeType() {\n    return PFElement.pfeType.combo;\n  }\n\n  static get properties() {\n    // @TODO: Move this logic to pfelement\n\n    // This removes observers that live in the dependent components\n    // and cascades the property to the relevant component if it's not\n    // an aliased property (just cascade the source of truth instead of both)\n    const inheritProperties = (obj, tagName) => {\n      let newObj = Object.assign({}, obj);\n      for (const [key, value] of Object.entries(newObj)) {\n        // Delete the observer from the property\n        if (value.observer) delete newObj[key].observer;\n        if (value.cascade) delete newObj[key].cascade;\n\n        // If alias exists, don't add cascade\n        if (!value.alias) newObj[key].cascade = tagName;\n      }\n      return newObj;\n    };\n\n    // Set up the inheritance for tabs and accordion\n    let tabProps = inheritProperties(PfeTabs.properties, PfeTabs.tag);\n    let accordionProps = inheritProperties(PfeAccordion.properties, PfeAccordion.tag);\n\n    // Merge these two sets of properties\n    const dependentProps = Object.assign(tabProps, accordionProps);\n\n    // Assign these values to the combo along with it's own properties\n    return Object.assign(dependentProps, {\n      breakpoint: {\n        title: \"Custom breakpoint\",\n        type: String,\n        observer: \"_updateBreakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      align: {\n        type: String,\n        enum: [\"center\"],\n        alias: \"tabAlign\"\n      },\n      oldAlign: {\n        attr: \"pfe-align\",\n        alias: \"tabAlign\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldBreakpoint: {\n        type: String,\n        alias: \"breakpoint\",\n        attr: \"pfe-breakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      pfeId: {\n        type: String,\n        attr: \"pfe-id\",\n        observer: \"_copyToId\"\n      }\n    });\n  }\n\n  static get slots() {\n    return {\n      default: {\n        title: \"Default\",\n        type: \"array\",\n        namedSlot: false,\n        items: {\n          $ref: \"raw\"\n        }\n      }\n    };\n  }\n\n  get isTab() {\n    let breakpointValue = this.breakpoint ? parseInt(this.breakpoint.replace(/\\D/g, \"\")) : 700;\n    return this.parentNode ? this.parentNode.offsetWidth > breakpointValue : window.outerWidth > breakpointValue;\n  }\n\n  get tab() {\n    // Check if the appropriate tag exists already\n    return this.shadowRoot.querySelector(`${PfeTabs.tag}[visible-at=\"large\"]`);\n  }\n\n  get accordion() {\n    // Check if the appropriate tag exists already\n    return this.shadowRoot.querySelector(`${PfeAccordion.tag}[visible-at=\"small\"]`);\n  }\n\n  get displayTemplate() {\n    const template = document.createElement(\"template\");\n\n    // // Set up the template for the sets of content\n    template.innerHTML = this.isTab ? PfeTabs.template : PfeAccordion.template;\n\n    return template;\n  }\n\n  constructor() {\n    super(PfeContentSet);\n\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n    if (window.ResizeObserver) this._resizeObserver = new ResizeObserver(this._resizeHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this.hasLightDOM()) {\n      Promise.all([customElements.whenDefined(PfeTabs.tag), customElements.whenDefined(PfeAccordion.tag)]).then(() => {\n        this._build();\n      });\n    }\n\n    this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n\n    // If the browser supports the resizeObserver and the parentElement exists, set to observe\n    if (window.ResizeObserver && this.parentElement) this._resizeObserver.observe(this.parentElement);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n    if (window.ResizeObserver) this._resizeObserver.disconnect();\n  }\n\n  _mutationHandler(mutationsList) {\n    if (window.ShadyCSS) {\n      this._observer.disconnect();\n\n      // Use the vanilla build tasks in IE11\n      this._build();\n\n      setTimeout(() => {\n        this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n      }, 0);\n      return;\n    }\n\n    if (mutationsList) {\n      for (let mutation of mutationsList) {\n        switch (mutation.type) {\n          case \"childList\":\n            if (mutation.addedNodes) this._build(mutation.addedNodes);\n            if (mutation.removedNodes) this._removeNodes(mutation.removedNodes);\n            break;\n          case \"characterData\":\n            if (mutation.target && mutation.target.parentNode)\n              this._updateNode(mutation.target.parentNode, mutation.target.textContent);\n            break;\n        }\n      }\n    } else {\n      // If no mutation list is provided, rebuild the whole thing\n      this._build();\n    }\n  }\n\n  _isHeader(el) {\n    return el.hasAttribute(`${this.tag}--header`) || el.tagName.match(/H[1-6]/);\n  }\n\n  _isPanel(el) {\n    return el.hasAttribute(`${this.tag}--panel`);\n  }\n\n  _toggleVisible() {\n    if (this.isTab) {\n      if (this.tab) this.tab.removeAttribute(\"hidden\");\n      if (this.accordion) this.accordion.setAttribute(\"hidden\", \"\");\n    } else {\n      if (this.accordion) this.accordion.removeAttribute(\"hidden\");\n      if (this.tab) this.tab.setAttribute(\"hidden\", \"\");\n    }\n  }\n\n  _removeNodes(list) {\n    let host = this.isTab ? this.tab : this.accordion;\n\n    list.forEach(item => this._removeNode(item));\n\n    // Check if the container is empty\n    if (!host.hasChildNodes()) host.setAttribute(\"hidden\", \"\");\n  }\n\n  _findConnection(node, host) {\n    if (node.nodeName !== \"#text\") {\n      // If this node is mapped to one in the shadow DOM\n      if (node.hasAttribute(\"maps-to\")) {\n        const id = node.getAttribute(\"maps-to\");\n        if (id !== null) {\n          const connection = host.querySelector(`#${id}`);\n          if (connection) {\n            return connection;\n          } else {\n            this.warn(`no element could be found with #${id}`);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  _removeNode(node) {\n    [this.tab, this.accordion].forEach(host => {\n      const connection = _findConnection(node, host);\n      if (connection) host.removeChild(connection);\n      // Fire a full rebuild if it can't determine the mapped element\n      else this._build();\n    });\n  }\n\n  _updateNode(node, textContent) {\n    [this.tab, this.accordion].forEach(host => {\n      const connection = _findConnection(node, host);\n      if (connection) connection.textContent = textContent;\n      // Fire a full rebuild if it can't determine the mapped element\n      else this._build();\n    });\n  }\n\n  _buildSets(sets) {\n    let fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < sets.length; i = i + 2) {\n      let header = sets[i];\n      let panel = sets[i + 1];\n      const template = this.displayTemplate.content.cloneNode(true);\n\n      if (!header) this.warn(`no element found at position ${i} of the light DOM input.`);\n      if (!panel) this.warn(`no element found at position ${i + 1} of the light DOM input.`);\n\n      if (header && this._isHeader(header) && panel && this._isPanel(panel)) {\n        // Capture the line-item from the template\n        [header, panel].forEach((region, idx) => {\n          const type = idx === 0 ? \"header\" : \"panel\";\n\n          let piece = template.querySelector(`[content-type=\"${type}\"]`).cloneNode(true);\n\n          const id = region.id || region.getAttribute(\"pfe-id\") || this.randomId;\n          const clone = region.cloneNode(true);\n\n          // Remove the flag from the clone\n          clone.removeAttribute(`${this.tag}--${type}`);\n\n          // Append a clone of the region to the template item\n          piece.appendChild(clone);\n\n          // Flag light DOM as upgraded\n          region.setAttribute(\"maps-to\", id);\n          piece.id = id;\n\n          // Attach the template item to the fragment\n          fragment.appendChild(piece);\n        });\n      }\n    }\n\n    return fragment;\n  }\n\n  _build(addedNodes) {\n    // Check if the appropriate tag exists already\n    [this.tab, this.accordion].forEach(host => {\n      // If no id is present, give it the id from the wrapper\n      if (!host.id) host.id = this.id || this.pfeId || this.randomId;\n\n      const rawSets = addedNodes ? addedNodes : this.children ? this.children : null;\n\n      // Clear out the content of the host if we're using the full child list\n      if (!addedNodes && rawSets) host.innerHTML = \"\";\n\n      // If sets is not null, build them usin gthe template\n      if (rawSets) {\n        let sets = this._buildSets(rawSets);\n        if (sets) {\n          host.appendChild(sets);\n        }\n      }\n\n      this._toggleVisible();\n    });\n\n    // Wait until the tags upgrade before setting the selectedIndex value\n    Promise.all([customElements.whenDefined(PfeTabs.tag), customElements.whenDefined(PfeAccordion.tag)]).then(() => {\n      // pass the selectedIndex property down from pfe-content-set\n      // to pfe-tabs if there is a selectedIndex value that's not 0\n      if (this.isTab) {\n        if (this.selectedIndex) {\n          this.tab.selectedIndex = this.selectedIndex;\n        }\n      }\n    });\n  }\n\n  _copyToId() {\n    // Don't overwrite an existing ID but backwards support pfe-id\n    if (!this.id) this.id = this.pfeId;\n  }\n\n  _resizeHandler() {\n    this._toggleVisible();\n  }\n\n  _updateBreakpoint(oldVal, newVal) {\n    // If the correct rendering element isn't in use yet, build it from scratch\n    this._toggleVisible();\n  }\n}\n\nPFElement.create(PfeContentSet);\n\nexport default PfeContentSet;\n"],"names":["window","NodeList","prototype","forEach","callback","thisArg","i","this","length","call","Object","assign","defineProperty","target","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","CONTENT_MUTATION_CONFIG","PfeContentSet","PFElement","breakpointValue","breakpoint","parseInt","replace","parentNode","offsetWidth","outerWidth","shadowRoot","querySelector","PfeTabs","tag","PfeAccordion","template","document","createElement","innerHTML","isTab","pfeType","combo","inheritProperties","obj","tagName","newObj","entries","key","value","observer","cascade","alias","tabProps","properties","accordionProps","dependentProps","String","hasLightDOM","all","customElements","whenDefined","then","_build","_observer","observe","ResizeObserver","parentElement","_resizeObserver","disconnect","mutationsList","ShadyCSS","_this3","mutation","type","addedNodes","removedNodes","_removeNodes","_updateNode","textContent","el","hasAttribute","match","tab","removeAttribute","accordion","setAttribute","list","host","_this4","_removeNode","item","hasChildNodes","node","nodeName","id","getAttribute","connection","warn","_findConnection","removeChild","_this5","_this6","sets","fragment","createDocumentFragment","header","panel","_this7","displayTemplate","content","cloneNode","_isHeader","_isPanel","region","idx","piece","randomId","clone","appendChild","_this8","pfeId","rawSets","children","_buildSets","_toggleVisible","selectedIndex","_mutationHandler","_this","bind","_resizeHandler","MutationObserver","create"],"mappings":"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"}