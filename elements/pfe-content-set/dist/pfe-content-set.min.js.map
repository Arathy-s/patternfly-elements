{"version":3,"file":"pfe-content-set.min.js","sources":["../_temp/polyfills--pfe-content-set.js","../_temp/pfe-content-set.js"],"sourcesContent":["// @POLYFILL  NodeList.prototype.forEach()\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function(callback, thisArg) {\n    thisArg = thisArg || window;\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\n// @POLYFILL  Object.prototype.assign()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n      if (target === null || target === undefined) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*!\n * PatternFly Elements: PfeContentSet 1.3.1\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: matches, closest, includes, assign\nimport \"./polyfills--pfe-content-set.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion.js\";\nimport PfeTabs from \"../../pfe-tabs/dist/pfe-tabs.js\";\n\nconst CONTENT_MUTATION_CONFIG = {\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nclass PfeContentSet extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.3.1\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:block}::slotted(:not(pfe-accordion,pfe-tabs)),::slotted([hidden]),:host([hidden]),[hidden]{display:none!important}:host([align=center]),:host([align=right]){text-align:left} /*# sourceMappingURL=pfe-content-set.min.css.map */</style>\n<div hidden><slot id=\"lightdom\"></slot></div>\n<slot name=\"_view\" private></slot>`;\n  }\n\n  static get tag() {\n    return \"pfe-content-set\";\n  }\n\n  get templateUrl() {\n    return \"pfe-content-set.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-content-set.scss\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Content set\",\n      description:\n        \"This element creates a flexible component that renders an accordion or tabset depending on screen size.\"\n    };\n  }\n\n  static get pfeType() {\n    return PFElement.pfeType.combo;\n  }\n\n  /**\n   * Property definitions for Content set combine the options available for Tabs & Accordion\n   */\n  static get properties() {\n    return {\n      //-- PFE-TABS specific properties\n      vertical: {\n        title: \"Vertical orientation\",\n        type: Boolean,\n        default: false,\n        cascade: \"pfe-tabs\"\n      },\n      selectedIndex: {\n        title: \"Index of the selected tab\",\n        type: Number,\n        cascade: \"pfe-tabs\"\n      },\n      tabAlign: {\n        title: \"Tab alignment\",\n        type: String,\n        enum: [\"center\"],\n        cascade: \"pfe-tabs\"\n      },\n      variant: {\n        title: \"Variant\",\n        type: String,\n        enum: [\"wind\", \"earth\"],\n        default: \"wind\",\n        cascade: \"pfe-tabs\"\n      },\n      // @TODO: Deprecated for 1.0\n      oldVariant: {\n        type: String,\n        attr: \"pfe-variant\",\n        alias: \"variant\"\n      },\n      tabHistory: {\n        title: \"Tab History\",\n        type: Boolean,\n        default: false,\n        cascade: \"pfe-tabs\"\n      },\n      // @TODO: Deprecated for 1.0\n      oldTabHistory: {\n        type: Boolean,\n        alias: \"tabHistory\",\n        attr: \"pfe-tab-history\"\n      },\n      //-- PFE-ACCORDION specific properties\n      disclosure: {\n        // Leaving this as a string since it's an opt out\n        title: \"Disclosure\",\n        type: String,\n        values: [\"true\", \"false\"],\n        cascade: \"pfe-accordion\"\n      },\n      // @TODO: Deprecated pfe-disclosure in 1.0\n      oldDisclosure: {\n        type: String,\n        alias: \"disclosure\",\n        attr: \"pfe-disclosure\"\n      },\n      //-- PFE-CONTENT-SET specific properties\n      breakpoint: {\n        title: \"Custom breakpoint\",\n        type: String,\n        default: \"700\",\n        observer: \"_updateBreakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldBreakpoint: {\n        type: String,\n        alias: \"breakpoint\",\n        attr: \"pfe-breakpoint\"\n      },\n      align: {\n        type: String,\n        enum: [\"center\"],\n        observer: \"_alignmentHandler\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldAlign: {\n        attr: \"pfe-align\",\n        alias: \"align\"\n      },\n      // @TODO: Deprecated in 1.0\n      pfeId: {\n        type: String,\n        attr: \"pfe-id\",\n        observer: \"_copyToId\"\n      }\n    };\n  }\n\n  /**\n   * Schema definition for slotted content\n   * Useful for CMS dynamic imports of components\n   */\n  static get slots() {\n    return {\n      default: {\n        title: \"Default\",\n        type: \"array\",\n        namedSlot: false,\n        items: {\n          $ref: \"raw\"\n        }\n      }\n    };\n  }\n\n  get breakpointValue() {\n    return parseInt(this.breakpoint.replace(/\\D/g, \"\"));\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get isTab() {\n    return this.parentNode\n      ? this.parentNode.offsetWidth > this.breakpointValue\n      : window.outerWidth > this.breakpointValue;\n  }\n\n  /**\n   * Getter: Capture all components in the _view slot\n   * @returns {NodeList} All components in the _view slot\n   */\n  get viewAll() {\n    return this.querySelectorAll(`[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the rendering component from the _view slot\n   * @returns {NodeItem} The rendering component from the _view slot\n   */\n  get view() {\n    let views = [...this.viewAll].filter(view => [PfeTabs.tag, PfeAccordion.tag].includes(view.tag));\n    if (views.length <= 0) return null;\n    return views[0];\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get expectedTag() {\n    return this.isTab ? PfeTabs.tag : PfeAccordion.tag;\n  }\n\n  /**\n   * Getter: Capture the tabs component from the _view slot (if it exists)\n   * @returns {NodeItem} The tabs component from the _view slot\n   */\n  get tabs() {\n    return this.querySelector(`pfe-tabs[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the accordion component from the _view slot (if it exists)\n   * @returns {NodeItem} The accordion component from the _view slot\n   */\n  get accordion() {\n    return this.querySelector(`pfe-accordion[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Validates the incoming light DOM for some usable content\n   * @returns {boolean} Returns true if some usable light DOM exists\n   */\n  get hasValidLightDOM() {\n    // If any light DOM exists, validate it meets the requirements for rendering\n    if (this.hasLightDOM()) {\n      let valid = false;\n      // For non-IE environments, use assigned nodes\n      const content = this.shadowRoot.querySelector(`slot#lightdom`);\n      let nodes = content.assignedNodes();\n      // Otherwise grab the direct children\n      if (this.isIE11) nodes = [...this.children];\n\n      // Loop through the assigned nodes\n      nodes.forEach(node => {\n        // Validate that any non-text nodes have the right attributes present\n        // They don't have to be in the right order, just that they exist at all lets us progress\n        if (\n          node.nodeName !== \"#text\" &&\n          (this._isHeader(node) ||\n            this._isPanel(node) ||\n            (node.tagName && node.tagName.toLowerCase() === this.expectedTag))\n        )\n          valid = true;\n      });\n      return valid;\n    } else return false;\n  }\n\n  constructor() {\n    super(PfeContentSet, { type: PfeContentSet.PfeType });\n\n    this.isIE11 = /MSIE|Trident|Edge\\//.test(window.navigator.userAgent);\n\n    this.build = this.build.bind(this);\n\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n\n    this._cleanSet = this._cleanSet.bind(this);\n    this._build = this._build.bind(this);\n    this._buildWrapper = this._buildWrapper.bind(this);\n    this._buildSets = this._buildSets.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n    if (window.ResizeObserver) this._resizeObserver = new ResizeObserver(this._resizeHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // If the element has an ID, postfix container\n    if (this.id) this.id = `${this.id.replace(/-container$/, \"\")}-container`;\n\n    // Validate that the light DOM data exists before building\n    if (this.hasValidLightDOM) {\n      this._build();\n\n      if (!this.isIE11 && window.ResizeObserver && this.parentElement) {\n        this._resizeObserver.observe(this.parentElement);\n      }\n    } else if (!this.isIE11) this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n    if (window.ResizeObserver) this._resizeObserver.disconnect();\n  }\n\n  /**\n   * Run the internal build task\n   */\n  build() {\n    // Fire the build of the internals for the new component\n    return this._build();\n  }\n\n  /**\n   * Mutation handler\n   * Read in and parse the mutation list, rebuilding as necessary\n   */\n  _mutationHandler(mutationsList) {\n    if (!this.isIE11 && mutationsList) {\n      for (let mutation of mutationsList) {\n        switch (mutation.type) {\n          case \"childList\":\n            if (mutation.addedNodes) {\n              // Check the added nodes to make sure it's not assigned to the _view slot\n              let nodes = this._cleanSet(mutation.addedNodes);\n              if (nodes.length > 0) this._build(nodes);\n            }\n            if (mutation.removedNodes) {\n              // Check the added nodes to make sure it's not assigned to the _view slot\n              let nodes = this._cleanSet(mutation.removedNodes);\n              if (nodes.length > 0) this._removeNodes(nodes);\n            }\n            break;\n          case \"characterData\":\n            if (mutation.target && mutation.target.parentNode)\n              this._updateNode(mutation.target.parentNode, mutation.target.textContent);\n            break;\n        }\n      }\n\n      return;\n    }\n\n    // If no mutation list is provided or it's IE11, rebuild the whole thing\n    this._build();\n  }\n\n  /**\n   * Checks if the element provided is a header region\n   * @returns {boolean} True if the element provided is a header region\n   */\n  _isHeader(el) {\n    return !!(el.hasAttribute(`${this.tag}--header`) || el.tagName.match(/H[1-6]/));\n  }\n\n  /**\n   * Checks if the element provided is a panel region\n   * @returns {boolean} True if the element provided is a panel region\n   */\n  _isPanel(el) {\n    return !!el.hasAttribute(`${this.tag}--panel`);\n  }\n\n  /**\n   * Reflect the removal of nodes from light DOM into the rendered view\n   */\n  _removeNodes(list) {\n    list.forEach(item => this._removeNode(item));\n\n    // If a container doesn't exist, escape now\n    if (!this.view) return;\n\n    // Check if the container is empty, hide\n    if (!this.view.hasChildNodes()) this.view.setAttribute(\"hidden\", \"\");\n    else this.view.removeAttribute(\"hidden\");\n  }\n\n  /**\n   * Find a connection between a node in light DOM that was added or removed\n   * and the matching node in the rendered component; this makes upgrades more\n   * efficient so we're not rebuilding everything every time.\n   * @returns {Node} Returns the node in the rendered component that maps to the light DOM node provided\n   */\n  _findConnection(node) {\n    let connection = null;\n\n    if (!this.view) return connection;\n\n    // If this node is mapped to one in the upgraded component\n    if (node.nodeName !== \"#text\" && node.hasAttribute(\"maps-to\")) {\n      const id = node.getAttribute(\"maps-to\");\n      if (!id) return connection;\n\n      connection = this.view.querySelector(`#${id}`);\n      if (!connection) this.warn(`no element could be found with #${id}`);\n    }\n\n    // Return the connection\n    return connection;\n  }\n\n  /**\n   * Reflect the removal of a node from light DOM into the rendered view\n   */\n  _removeNode(node) {\n    if (!this.view) return;\n\n    const connection = _findConnection(node);\n    if (connection) this.view.removeChild(connection);\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _updateNode(node, textContent) {\n    if (!this.view) return;\n\n    const connection = _findConnection(node);\n    if (connection) connection.textContent = textContent;\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _cleanSet(set) {\n    return [...set].filter(item => item !== this.view);\n  }\n\n  /**\n   * Manage the building of the rendering component\n   * Optionally accepts the input of new nodes added to the DOM\n   */\n  _build(addedNodes) {\n    // @TODO: Add back a promise here post-IE11\n    let view = this.view;\n    if (!view || view.tag !== this.expectedTag) {\n      view = this._buildWrapper();\n    }\n\n    // Disconnect the observer while we parse it\n    this._observer.disconnect();\n\n    const template = view.tag === \"pfe-tabs\" ? PfeTabs.contentTemplate : PfeAccordion.contentTemplate;\n\n    // If no id is present, give it the id from the wrapper\n    if (!view.id) view.id = this.id || this.pfeId || this.randomId;\n\n    let rawSets = null;\n    if (addedNodes) rawSets = addedNodes;\n    if (!rawSets && [...this.children].length) rawSets = this.children;\n\n    // Clear out the content of the host if we're using the full child list\n    if (!addedNodes && rawSets) view.innerHTML = \"\";\n\n    // If sets is not null, build them using the template\n    if (rawSets) {\n      let sets = this._buildSets(rawSets, template);\n      if (sets) view.appendChild(sets);\n    }\n\n    // Wait until the tabs upgrade before setting the selectedIndex value\n    Promise.all([customElements.whenDefined(PfeTabs.tag)]).then(() => {\n      // pass the selectedIndex property down from pfe-content-set\n      // to pfe-tabs if there is a selectedIndex value that's not 0\n      // Pass the selectedIndex down to the tabset\n      if (this.isTab && this.selectedIndex) {\n        view.selectedIndex = this.selectedIndex;\n      }\n\n      // Attach the mutation observer\n      if (!this.isIE11) this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n\n      return;\n    });\n  }\n\n  /*\n   * Note: be sure to disconnect the observer before running this\n   */\n  _buildWrapper() {\n    if (this.view && this.view.tag === this.expectedTag) return this.view;\n\n    // If the upgraded component matches the tag name of the expected rendering component, return now;\n    if (this.view) {\n      // One option was to just remove the existing element: existingEl.remove();\n      // But it seems safer to clear out the entire slot to make sure nothing snuck in unexpectedly\n      this.viewAll.forEach(item => item.remove());\n    }\n\n    // If there was no rendering component or it was the wrong one (and thus removed), create one!\n    let newEl = document.createElement(this.expectedTag);\n    newEl.setAttribute(\"slot\", \"_view\");\n    if (this.id) newEl.id = this.id.replace(/-container$/, \"\");\n    this.appendChild(newEl);\n\n    return newEl;\n  }\n\n  _buildSets(sets, template) {\n    sets = this._cleanSet(sets);\n    let fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < sets.length; i = i + 2) {\n      let header = sets[i];\n      let panel = sets[i + 1];\n\n      // Set up the template for the sets of content\n      const wrapper = document.createElement(\"template\");\n      wrapper.innerHTML = template.trim();\n      const templateMarkup = wrapper.content.cloneNode(true);\n\n      if (!header) this.warn(`no element found at position ${i} of the light DOM input.`);\n      if (!panel) this.warn(`no element found at position ${i + 1} of the light DOM input.`);\n\n      if (header && this._isHeader(header) && panel && this._isPanel(panel)) {\n        // Capture the line-item from the template\n        [header, panel].forEach((region, idx) => {\n          const section = idx === 0 ? \"header\" : \"panel\";\n\n          let piece = templateMarkup.querySelector(`[content-type=\"${section}\"]`).cloneNode(true);\n\n          // Remove the section from the ID name in case it was already upgraded\n          let regionId = region.id;\n          if (region.hasAttribute(\"upgraded\") && regionId) {\n            regionId = regionId.replace(new RegExp(`--${section}$`), \"\");\n          }\n          // Capture the ID from the region, the pfe-id, a previous \"maps-to\" attr, or generate a random one\n          const id = regionId || region.getAttribute(\"pfe-id\") || region.getAttribute(\"maps-to\") || this.randomId;\n\n          // Update the region ID with a postfix to prevent duplication\n          if (region.id) region.id = `${regionId}--${section}`;\n          // Flag that this element was upgraded\n          region.setAttribute(\"upgraded\", \"\");\n\n          const clone = region.cloneNode(true);\n\n          // Remove the flag from the clone\n          clone.removeAttribute(`${this.tag}--${section}`);\n\n          // Append a clone of the region to the template item\n          piece.appendChild(clone);\n\n          // Flag light DOM as upgraded\n          region.setAttribute(\"maps-to\", id);\n\n          piece.id = id;\n\n          // Attach the template item to the fragment\n          fragment.appendChild(piece);\n        });\n      }\n    }\n\n    return fragment;\n  }\n\n  _cleanSet(set) {\n    return [...set].filter(item => item !== this.view);\n  }\n\n  _copyToId() {\n    // Don't overwrite an existing ID but backwards support pfe-id\n    if (!this.id) this.id = this.pfeId;\n  }\n\n  _alignmentHandler(oldVal, newVal) {\n    if (oldVal !== newVal) this.tabAlign = newVal;\n  }\n\n  _resizeHandler() {\n    if (!this.view || (this.view && this.view.tag !== this.expectedTag)) {\n      this._build();\n    }\n  }\n\n  _updateBreakpoint() {\n    // If the correct rendering element isn't in use yet, build it from scratch\n    if (!this.view || (this.view && this.view.tag !== this.expectedTag)) {\n      this._build();\n    }\n  }\n}\n\nPFElement.create(PfeContentSet);\n\nexport default PfeContentSet;\n"],"names":["window","NodeList","prototype","forEach","callback","thisArg","i","this","length","call","Object","assign","defineProperty","value","target","varArgs","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","writable","configurable","CONTENT_MUTATION_CONFIG","characterData","childList","subtree","PfeContentSet","PFElement","version","html","tag","templateUrl","styleUrl","meta","title","description","pfeType","combo","properties","vertical","type","Boolean","default","cascade","selectedIndex","Number","tabAlign","String","enum","variant","oldVariant","attr","alias","tabHistory","oldTabHistory","disclosure","values","oldDisclosure","breakpoint","observer","oldBreakpoint","align","oldAlign","pfeId","slots","namedSlot","items","$ref","breakpointValue","parseInt","replace","isTab","parentNode","offsetWidth","outerWidth","viewAll","querySelectorAll","view","views","filter","PfeTabs","PfeAccordion","includes","expectedTag","tabs","querySelector","accordion","hasValidLightDOM","hasLightDOM","valid","nodes","shadowRoot","assignedNodes","isIE11","children","node","nodeName","_isHeader","_isPanel","tagName","toLowerCase","[object Object]","super","PfeType","test","navigator","userAgent","build","bind","_mutationHandler","_resizeHandler","_cleanSet","_build","_buildWrapper","_buildSets","_observer","MutationObserver","ResizeObserver","_resizeObserver","connectedCallback","id","parentElement","observe","disconnectedCallback","disconnect","mutationsList","mutation","addedNodes","removedNodes","_removeNodes","_updateNode","textContent","el","hasAttribute","match","list","item","_removeNode","hasChildNodes","removeAttribute","setAttribute","connection","getAttribute","warn","_findConnection","removeChild","set","template","contentTemplate","randomId","rawSets","innerHTML","sets","appendChild","Promise","all","customElements","whenDefined","then","remove","newEl","document","createElement","fragment","createDocumentFragment","header","panel","wrapper","trim","templateMarkup","content","cloneNode","region","idx","section","piece","regionId","RegExp","clone","oldVal","newVal","create"],"mappings":"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"}