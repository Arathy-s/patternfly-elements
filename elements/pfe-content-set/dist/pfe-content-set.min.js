import e from"../../pfelement/dist/pfelement.min.js";import t from"../../pfe-accordion/dist/pfe-accordion.min.js";import i from"../../pfe-tabs/dist/pfe-tabs.min.js";window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){t=t||window;for(var i=0;i<this.length;i++)e.call(t,this[i],i,this)}),"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(e,t){if(null==e)throw new TypeError("Cannot convert undefined or null to object");for(var i=Object(e),s=1;s<arguments.length;s++){var n=arguments[s];if(null!=n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(i[r]=n[r])}return i},writable:!0,configurable:!0})
/*!
 * PatternFly Elements: PfeContentSet 1.2.0
 * @license
 * Copyright 2021 Red Hat, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
*/;const s={characterData:!0,childList:!0,subtree:!0};class n extends e{static get version(){return"1.2.0"}get html(){return'\n<style>:host{display:block}#lightdom,:host([hidden]){display:none} /*# sourceMappingURL=pfe-content-set.min.css.map */</style>\n<div id="lightdom" hidden>\n  <slot></slot>\n</div>\n<pfe-tabs hidden visible-at="large"></pfe-tabs>\n<pfe-accordion hidden visible-at="small"></pfe-accordion>'}static get tag(){return"pfe-content-set"}get templateUrl(){return"pfe-content-set.html"}get styleUrl(){return"pfe-content-set.scss"}static get meta(){return{title:"Content set",description:"This element creates a flexible component that renders an accordion or tabset depending on screen size."}}static get pfeType(){return e.pfeType.combo}static get properties(){const e=(e,t)=>{let i=Object.assign({},e);for(const[e,s]of Object.entries(i))s.observer&&delete i[e].observer,s.cascade&&delete i[e].cascade,s.alias||(i[e].cascade=t);return i};let s=e(i.properties,i.tag),n=e(t.properties,t.tag);const r=Object.assign(s,n);return Object.assign(r,{breakpoint:{title:"Custom breakpoint",type:String,observer:"_updateBreakpoint"},align:{type:String,enum:["center"],alias:"tabAlign"},oldAlign:{attr:"pfe-align",alias:"tabAlign"},oldBreakpoint:{type:String,alias:"breakpoint",attr:"pfe-breakpoint"},pfeId:{type:String,attr:"pfe-id",observer:"_copyToId"}})}static get slots(){return{default:{title:"Default",type:"array",namedSlot:!1,items:{$ref:"raw"}}}}get isTab(){let e=this.breakpoint?parseInt(this.breakpoint.replace(/\D/g,"")):700;return this.parentNode?this.parentNode.offsetWidth>e:window.outerWidth>e}get tabs(){return this.shadowRoot.querySelector(`${i.tag}[visible-at="large"]`)}get accordion(){return this.shadowRoot.querySelector(`${t.tag}[visible-at="small"]`)}constructor(){super(n),this._mutationHandler=this._mutationHandler.bind(this),this._resizeHandler=this._resizeHandler.bind(this),this._observer=new MutationObserver(this._mutationHandler),window.ResizeObserver&&(this._resizeObserver=new ResizeObserver(this._resizeHandler))}connectedCallback(){super.connectedCallback(),this.hasLightDOM()&&Promise.all([customElements.whenDefined(i.tag),customElements.whenDefined(t.tag)]).then(()=>{this._build()}),this._observer.observe(this,s),window.ResizeObserver&&this.parentElement&&this._resizeObserver.observe(this.parentElement)}disconnectedCallback(){super.disconnectedCallback(),this._observer.disconnect(),window.ResizeObserver&&this._resizeObserver.disconnect()}_mutationHandler(e){if(window.ShadyCSS)return this._observer.disconnect(),this._build(),void setTimeout(()=>{this._observer.observe(this,s)},0);if(e)for(let t of e)switch(t.type){case"childList":t.addedNodes&&this._build(t.addedNodes),t.removedNodes&&this._removeNodes(t.removedNodes);break;case"characterData":t.target&&t.target.parentNode&&this._updateNode(t.target.parentNode,t.target.textContent)}else this._build()}_isHeader(e){return e.hasAttribute(`${this.tag}--header`)||e.tagName.match(/H[1-6]/)}_isPanel(e){return e.hasAttribute(`${this.tag}--panel`)}_toggleVisible(){this.isTab?(this.tabs&&this.tabs.removeAttribute("hidden"),this.accordion&&this.accordion.setAttribute("hidden","")):(this.accordion&&this.accordion.removeAttribute("hidden"),this.tabs&&this.tabs.setAttribute("hidden",""))}_removeNodes(e){e.forEach(e=>this._removeNode(e)),[this.tabs,this.accordion].forEach(e=>{e.hasChildNodes()||e.setAttribute("hidden","")})}_findConnection(e,t){if("#text"!==e.nodeName&&e.hasAttribute("maps-to")){const i=e.getAttribute("maps-to");if(null!==i){const e=t.querySelector(`#${i}`);if(e)return e;this.warn(`no element could be found with #${i}`)}}return null}_removeNode(e){[this.tabs,this.accordion].forEach(t=>{const i=_findConnection(e,t);i?t.removeChild(i):this._build()})}_updateNode(e,t){[this.tabs,this.accordion].forEach(i=>{const s=_findConnection(e,i);s?s.textContent=t:this._build()})}_buildSets(e,t){let i=document.createDocumentFragment();for(let s=0;s<e.length;s+=2){let n=e[s],r=e[s+1];const o=document.createElement("template");o.innerHTML=t.trim();const a=o.content.cloneNode(!0);n||this.warn(`no element found at position ${s} of the light DOM input.`),r||this.warn(`no element found at position ${s+1} of the light DOM input.`),n&&this._isHeader(n)&&r&&this._isPanel(r)&&[n,r].forEach((e,t)=>{const s=0===t?"header":"panel";let n=a.querySelector(`[content-type="${s}"]`).cloneNode(!0);const r=e.id||e.getAttribute("pfe-id")||this.randomId,o=e.cloneNode(!0);o.removeAttribute(`${this.tag}--${s}`),n.appendChild(o),e.setAttribute("maps-to",r),n.id=r,i.appendChild(n)})}return i}_build(e){[this.tabs,this.accordion].forEach(s=>{const n="pfe-tabs"===s.tag?i.contentTemplate:t.contentTemplate;s.id||(s.id=this.id||this.pfeId||this.randomId);const r=e||(this.children?this.children:null);if(!e&&r&&(s.innerHTML=""),r){let e=this._buildSets(r,n);e&&s.appendChild(e)}this._toggleVisible()}),Promise.all([customElements.whenDefined(i.tag),customElements.whenDefined(t.tag)]).then(()=>{this.isTab&&this.selectedIndex&&(this.tabs.selectedIndex=this.selectedIndex)})}_copyToId(){this.id||(this.id=this.pfeId)}_resizeHandler(){this._toggleVisible()}_updateBreakpoint(e,t){this._toggleVisible()}}e.create(n);export default n;
//# sourceMappingURL=pfe-content-set.min.js.map
