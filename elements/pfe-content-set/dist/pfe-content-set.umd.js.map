{"version":3,"file":"pfe-content-set.umd.js","sources":["../_temp/polyfills--pfe-content-set.js","../_temp/pfe-content-set.umd.js"],"sourcesContent":["// @POLYFILL  NodeList.prototype.forEach()\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function(callback, thisArg) {\n    thisArg = thisArg || window;\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\n// @POLYFILL  Object.prototype.assign()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n      if (target === null || target === undefined) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*!\n * PatternFly Elements: PfeContentSet 1.3.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: matches, closest, includes, assign\nimport \"./polyfills--pfe-content-set.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion\";\nimport PfeTabs from \"../../pfe-tabs/dist/pfe-tabs\";\n\nconst CONTENT_MUTATION_CONFIG = {\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nclass PfeContentSet extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.3.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:block}::slotted(:not(pfe-accordion,pfe-tabs)),::slotted([hidden]),:host([hidden]),[hidden]{display:none!important} /*# sourceMappingURL=pfe-content-set.min.css.map */</style>\n<slot id=\"lightdom\" hidden></slot>\n<slot name=\"_view\" private></slot>`;\n  }\n\n  static get tag() {\n    return \"pfe-content-set\";\n  }\n\n  get templateUrl() {\n    return \"pfe-content-set.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-content-set.scss\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Content set\",\n      description:\n        \"This element creates a flexible component that renders an accordion or tabset depending on screen size.\"\n    };\n  }\n\n  static get pfeType() {\n    return PFElement.pfeType.combo;\n  }\n\n  /**\n   * Property definitions for Content set combine the options available for Tabs & Accordion\n   */\n  static get properties() {\n    // @TODO: Move this logic to pfelement\n\n    // This removes observers that live in the dependent components\n    // and cascades the property to the relevant component if it's not\n    // an aliased property (just cascade the source of truth instead of both)\n    const inheritProperties = (obj, tagName) => {\n      let newObj = Object.assign({}, obj);\n      for (const [key, value] of Object.entries(newObj)) {\n        // Delete the observer from the property\n        if (value.observer) delete newObj[key].observer;\n        if (value.cascade) delete newObj[key].cascade;\n\n        // If alias exists, don't add cascade\n        if (!value.alias) newObj[key].cascade = tagName;\n      }\n      return newObj;\n    };\n\n    // Set up the inheritance for tabs and accordion\n    let tabProps = inheritProperties(PfeTabs.properties, PfeTabs.tag);\n    let accordionProps = inheritProperties(PfeAccordion.properties, PfeAccordion.tag);\n\n    // Merge these two sets of properties\n    const dependentProps = Object.assign(tabProps, accordionProps);\n\n    // Assign these values to the combo along with it's own properties\n    return Object.assign(dependentProps, {\n      breakpoint: {\n        title: \"Custom breakpoint\",\n        type: String,\n        observer: \"_updateBreakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      align: {\n        type: String,\n        enum: [\"center\"],\n        alias: \"tabAlign\"\n      },\n      oldAlign: {\n        attr: \"pfe-align\",\n        alias: \"tabAlign\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldBreakpoint: {\n        type: String,\n        alias: \"breakpoint\",\n        attr: \"pfe-breakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      pfeId: {\n        type: String,\n        attr: \"pfe-id\",\n        observer: \"_copyToId\"\n      }\n    });\n  }\n\n  /**\n   * Schema definition for slotted content\n   * Useful for CMS dynamic imports of components\n   */\n  static get slots() {\n    return {\n      default: {\n        title: \"Default\",\n        type: \"array\",\n        namedSlot: false,\n        items: {\n          $ref: \"raw\"\n        }\n      }\n    };\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get isTab() {\n    let breakpointValue = this.breakpoint ? parseInt(this.breakpoint.replace(/\\D/g, \"\")) : 700;\n    return this.parentNode ? this.parentNode.offsetWidth > breakpointValue : window.outerWidth > breakpointValue;\n  }\n\n  /**\n   * Getter: Capture all components in the _view slot\n   * @returns {NodeList} All components in the _view slot\n   */\n  get viewAll() {\n    return this.querySelectorAll(`[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the rendering component from the _view slot\n   * @returns {NodeItem} The rendering component from the _view slot\n   */\n  get view() {\n    let views = [...this.viewAll].filter(view => [PfeTabs.tag, PfeAccordion.tag].includes(view.tagName.toLowerCase()));\n    if (views.length <= 0) return null;\n    return views[0];\n  }\n\n  /**\n   * Getter: Capture the tabs component from the _view slot (if it exists)\n   * @returns {NodeItem} The tabs component from the _view slot\n   */\n  get tabs() {\n    return this.querySelector(`pfe-tabs[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the accordion component from the _view slot (if it exists)\n   * @returns {NodeItem} The accordion component from the _view slot\n   */\n  get accordion() {\n    return this.querySelector(`pfe-accordion[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Validates the incoming light DOM for some usable content\n   * @returns {boolean} Returns true if some usable light DOM exists\n   */\n  get hasValidLightDOM() {\n    // If any light DOM exists, validate it meets the requirements for rendering\n    if (this.hasLightDOM()) {\n      let content = this.shadowRoot.querySelector(`slot#lightdom`);\n      let valid = false;\n      // Loop through the assigned nodes\n      content.assignedNodes().forEach(node => {\n        // Validate that any non-text nodes have the right attributes present\n        // They don't have to be in the right order, just that they exist at all lets us progress\n        if (node.nodeName !== \"#text\" && (this._isHeader(node) || this._isPanel(node))) valid = true;\n      });\n      return valid;\n    } else return false;\n  }\n\n  constructor() {\n    super(PfeContentSet);\n\n    this.isIE11 = !!window.MSInputMethodContext && !!document.documentMode;\n\n    this.build = this.build.bind(this);\n\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n\n    this._cleanSet = this._cleanSet.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n    if (window.ResizeObserver) this._resizeObserver = new ResizeObserver(this._resizeHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // If the element has an ID, postfix container\n    if (this.id) this.id = `${this.id}-container`;\n\n    // Validate that the light DOM data exists before building\n    if (this.hasValidLightDOM)\n      this.build().then(\n        () => {\n          // If the browser supports the resizeObserver and the parentElement exists, set to observe\n          if (window.ResizeObserver && this.parentElement) this._resizeObserver.observe(this.parentElement);\n        },\n        errorMsg => {\n          this.error(`There was an issue building the component: ${errorMsg}`);\n        }\n      );\n\n    // Attach the mutation observer\n    this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n    if (window.ResizeObserver) this._resizeObserver.disconnect();\n  }\n\n  /**\n   * Fetch the component if it exists in the right upgrade form\n   * otherwise, remove the old element and build a new version\n   * @returns {NodeItem} New or existing rendering component\n   */\n  build() {\n    return new Promise((resolve, reject) => {\n      // Get the name of the expected component\n      let componentName = this.isTab ? PfeTabs.tag : PfeAccordion.tag;\n\n      // If the upgraded component matches the tag name of the expected rendering component, return now;\n      if (this.view) {\n        if (this.view && this.view.tagName.toLowerCase() === componentName) return resolve(this.view);\n\n        // One option was to just remove the existing element: existingEl.remove();\n        // But it seems safer to clear out the entire slot to make sure nothing snuck in unexpectedly\n        this.viewAll.forEach(item => item.remove());\n      }\n\n      // If there was no rendering component or it was the wrong one (and thus removed), create one!\n      let newEl = document.createElement(componentName);\n      newEl.setAttribute(\"slot\", \"_view\");\n      if (this.id) newEl.id = this.id.replace(/-container$/, \"\");\n      this.appendChild(newEl);\n\n      // Fire the build of the internals for the new component\n      return this._build().then(() => resolve(newEl));\n    });\n  }\n\n  /**\n   * Mutation handler\n   * Read in and parse the mutation list, rebuilding as necessary\n   */\n  _mutationHandler(mutationsList) {\n    if (!this.isIE11 && mutationsList) {\n      for (let mutation of mutationsList) {\n        switch (mutation.type) {\n          case \"childList\":\n            if (mutation.addedNodes) {\n              // Check the added nodes to make sure it's not assigned to the _upgradeComponent slot\n              let nodes = [...mutation.addedNodes].filter(item => !item.hasAttribute(\"slot\"));\n              if (nodes.length > 0) this._build(nodes);\n            }\n            if (mutation.removedNodes) {\n              // Check the added nodes to make sure it's not assigned to the _upgradeComponent slot\n              let nodes = [...mutation.removedNodes].filter(item => !item.hasAttribute(\"slot\"));\n              if (nodes.length > 0) this._removeNodes(nodes);\n            }\n            break;\n          case \"characterData\":\n            if (mutation.target && mutation.target.parentNode)\n              this._updateNode(mutation.target.parentNode, mutation.target.textContent);\n            break;\n        }\n      }\n\n      return;\n    }\n\n    // If no mutation list is provided, rebuild the whole thing\n    this._build();\n  }\n\n  /**\n   * Checks if the element provided is a header region\n   * @returns {boolean} True if the element provided is a header region\n   */\n  _isHeader(el) {\n    return el.hasAttribute(`${this.tag}--header`) || el.tagName.match(/H[1-6]/);\n  }\n\n  /**\n   * Checks if the element provided is a panel region\n   * @returns {boolean} True if the element provided is a panel region\n   */\n  _isPanel(el) {\n    return el.hasAttribute(`${this.tag}--panel`);\n  }\n\n  /**\n   * Reflect the removal of nodes from light DOM into the rendered view\n   */\n  _removeNodes(list) {\n    list.forEach(item => this._removeNode(item));\n\n    // If a container doesn't exist, escape now\n    if (!this.view) return;\n\n    // Check if the container is empty, hide\n    if (!this.view.hasChildNodes()) this.view.setAttribute(\"hidden\", \"\");\n    else this.view.removeAttribute(\"hidden\");\n  }\n\n  /**\n   * Find a connection between a node in light DOM that was added or removed\n   * and the matching node in the rendered component; this makes upgrades more\n   * efficient so we're not rebuilding everything every time.\n   * @returns {Node} Returns the node in the rendered component that maps to the light DOM node provided\n   */\n  _findConnection(node) {\n    let connection = null;\n\n    if (!this.view) return connection;\n\n    // If this node is mapped to one in the upgraded component\n    if (node.nodeName !== \"#text\" && node.hasAttribute(\"maps-to\")) {\n      const id = node.getAttribute(\"maps-to\");\n      if (!id) return connection;\n\n      connection = this.view.querySelector(`#${id}`);\n      if (!connection) this.warn(`no element could be found with #${id}`);\n    }\n\n    // Return the connection\n    return connection;\n  }\n\n  /**\n   * Reflect the removal of a node from light DOM into the rendered view\n   */\n  _removeNode(node) {\n    if (!this.view) return;\n\n    const connection = _findConnection(node);\n    if (connection) this.view.removeChild(connection);\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _updateNode(node, textContent) {\n    if (!this.view) this.build();\n\n    const connection = _findConnection(node);\n    if (connection) connection.textContent = textContent;\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _buildSets(sets, template) {\n    sets = this._cleanSet(sets);\n    let fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < sets.length; i = i + 2) {\n      let header = sets[i];\n      let panel = sets[i + 1];\n\n      // Set up the template for the sets of content\n      const wrapper = document.createElement(\"template\");\n      wrapper.innerHTML = template.trim();\n      const templateMarkup = wrapper.content.cloneNode(true);\n\n      if (!header) this.warn(`no element found at position ${i} of the light DOM input.`);\n      if (!panel) this.warn(`no element found at position ${i + 1} of the light DOM input.`);\n\n      if (header && this._isHeader(header) && panel && this._isPanel(panel)) {\n        // Capture the line-item from the template\n        [header, panel].forEach((region, idx) => {\n          const section = idx === 0 ? \"header\" : \"panel\";\n\n          let piece = templateMarkup.querySelector(`[content-type=\"${section}\"]`).cloneNode(true);\n\n          // Remove the section from the ID name in case it was already upgraded\n          let regionId = region.id;\n          if (region.hasAttribute(\"upgraded\") && regionId) {\n            regionId = regionId.replace(new RegExp(`--${section}$`), \"\");\n          }\n          // Capture the ID from the region, the pfe-id, or generate a random one\n          const id = regionId || region.getAttribute(\"pfe-id\") || this.randomId;\n\n          // Update the region ID with a postfix to prevent duplication\n          if (region.id) region.id = `${regionId}--${section}`;\n          // Flag that this element was upgraded\n          region.setAttribute(\"upgraded\", \"\");\n\n          const clone = region.cloneNode(true);\n\n          // Remove the flag from the clone\n          clone.removeAttribute(`${this.tag}--${section}`);\n\n          // Append a clone of the region to the template item\n          piece.appendChild(clone);\n\n          // Flag light DOM as upgraded\n          region.setAttribute(\"maps-to\", id);\n          piece.id = id;\n\n          // Attach the template item to the fragment\n          fragment.appendChild(piece);\n        });\n      }\n    }\n\n    return fragment;\n  }\n\n  _cleanSet(set) {\n    return [...set].filter(item => item !== this.view);\n  }\n\n  _build(addedNodes) {\n    return new Promise((resolve, reject) => {\n      // Disconnect the observer while we parse it\n      this._observer.disconnect();\n\n      // Check if the appropriate tag exists already\n      if (!this.view) {\n        return reject(`No rendering container was found.`);\n      }\n\n      const template = this.view.tag === \"pfe-tabs\" ? PfeTabs.contentTemplate : PfeAccordion.contentTemplate;\n      // If no id is present, give it the id from the wrapper\n      if (!this.view.id) this.view.id = this.id || this.pfeId || this.randomId;\n\n      const rawSets = addedNodes ? addedNodes : this.children ? this.children : null;\n\n      // Clear out the content of the host if we're using the full child list\n      if (!addedNodes && rawSets) this.view.innerHTML = \"\";\n\n      // If sets is not null, build them using the template\n      if (rawSets) {\n        let sets = this._buildSets(rawSets, template);\n        if (sets) this.view.appendChild(sets);\n      }\n\n      // Wait until the tabs upgrade before setting the selectedIndex value\n      Promise.all([customElements.whenDefined(PfeTabs.tag)]).then(() => {\n        // pass the selectedIndex property down from pfe-content-set\n        // to pfe-tabs if there is a selectedIndex value that's not 0\n        if (this.isTab) {\n          // Pass the selectedIndex down to the tabset\n          if (this.selectedIndex) {\n            this.view.selectedIndex = this.selectedIndex;\n          }\n        }\n      });\n\n      // Attach the mutation observer\n      this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n\n      return resolve();\n    });\n  }\n\n  _copyToId() {\n    // Don't overwrite an existing ID but backwards support pfe-id\n    if (!this.id) this.id = this.pfeId;\n  }\n\n  _resizeHandler() {\n    this.build();\n  }\n\n  _updateBreakpoint() {\n    // If the correct rendering element isn't in use yet, build it from scratch\n    this.build();\n  }\n}\n\nPFElement.create(PfeContentSet);\n\nexport default PfeContentSet;\n"],"names":["window","NodeList","prototype","forEach","callback","thisArg","i","length","call","Object","assign","defineProperty","value","target","varArgs","undefined","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","writable","configurable","CONTENT_MUTATION_CONFIG","characterData","childList","subtree","PfeContentSet","breakpointValue","breakpoint","parseInt","replace","parentNode","offsetWidth","outerWidth","querySelectorAll","views","viewAll","filter","PfeTabs","tag","PfeAccordion","includes","view","tagName","toLowerCase","querySelector","hasLightDOM","content","shadowRoot","valid","assignedNodes","node","nodeName","_isHeader","_isPanel","title","description","PFElement","pfeType","combo","inheritProperties","obj","newObj","entries","key","observer","cascade","alias","tabProps","properties","accordionProps","dependentProps","type","String","align","enum","oldAlign","attr","oldBreakpoint","pfeId","default","namedSlot","items","$ref","isIE11","MSInputMethodContext","document","documentMode","build","bind","_mutationHandler","_resizeHandler","_cleanSet","_observer","MutationObserver","ResizeObserver","_resizeObserver","id","hasValidLightDOM","then","parentElement","observe","error","errorMsg","disconnect","Promise","resolve","reject","componentName","isTab","item","remove","newEl","createElement","setAttribute","appendChild","_build","mutationsList","mutation","addedNodes","nodes","hasAttribute","removedNodes","_removeNodes","_updateNode","textContent","el","match","list","_removeNode","hasChildNodes","removeAttribute","connection","getAttribute","warn","_findConnection","removeChild","sets","template","fragment","createDocumentFragment","header","panel","wrapper","innerHTML","trim","templateMarkup","cloneNode","region","idx","section","piece","regionId","RegExp","randomId","clone","set","contentTemplate","rawSets","children","_buildSets","all","customElements","whenDefined","selectedIndex","create"],"mappings":"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"}