{"version":3,"file":"pfe-content-set.umd.js","sources":["../_temp/polyfills--pfe-content-set.js","../_temp/pfe-content-set.umd.js"],"sourcesContent":["// @POLYFILL  NodeList.prototype.forEach()\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function(callback, thisArg) {\n    thisArg = thisArg || window;\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\n// @POLYFILL  Object.prototype.assign()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n      if (target === null || target === undefined) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*!\n * PatternFly Elements: PfeContentSet 1.3.3\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: matches, closest, includes, assign\nimport \"./polyfills--pfe-content-set.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion\";\nimport PfeTabs from \"../../pfe-tabs/dist/pfe-tabs\";\n\nconst CONTENT_MUTATION_CONFIG = {\n  characterData: true,\n  childList: true,\n  subtree: true\n};\nclass PfeContentSet extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.3.3\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:block}::slotted(:not(pfe-accordion,pfe-tabs)),::slotted([hidden]),:host([hidden]),[hidden]{display:none!important}:host([align=center]),:host([align=right]){text-align:left} /*# sourceMappingURL=pfe-content-set.min.css.map */</style>\n<div hidden><slot id=\"lightdom\"></slot></div>\n<slot name=\"_view\" private></slot>`;\n  }\n\n  static get tag() {\n    return \"pfe-content-set\";\n  }\n\n  get templateUrl() {\n    return \"pfe-content-set.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-content-set.scss\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Content set\",\n      description:\n        \"This element creates a flexible component that renders an accordion or tabset depending on screen size.\"\n    };\n  }\n\n  static get pfeType() {\n    return PFElement.pfeType.combo;\n  }\n\n  /**\n   * Property definitions for Content set combine the options available for Tabs & Accordion\n   */\n  static get properties() {\n    return {\n      //-- PFE-TABS specific properties\n      vertical: {\n        title: \"Vertical orientation\",\n        type: Boolean,\n        default: false,\n        cascade: \"pfe-tabs\"\n      },\n      selectedIndex: {\n        title: \"Index of the selected tab\",\n        type: Number,\n        cascade: \"pfe-tabs\"\n      },\n      tabAlign: {\n        title: \"Tab alignment\",\n        type: String,\n        enum: [\"center\"],\n        cascade: \"pfe-tabs\"\n      },\n      variant: {\n        title: \"Variant\",\n        type: String,\n        enum: [\"wind\", \"earth\"],\n        default: \"wind\",\n        cascade: \"pfe-tabs\"\n      },\n      // @TODO: Deprecated for 1.0\n      oldVariant: {\n        type: String,\n        attr: \"pfe-variant\",\n        alias: \"variant\"\n      },\n      // @TODO: Deprecated for 1.0\n      oldTabHistory: {\n        type: Boolean,\n        alias: \"tabHistory\",\n        attr: \"pfe-tab-history\"\n      },\n      tabHistory: {\n        title: \"Tab History\",\n        type: Boolean,\n        default: false,\n        cascade: \"pfe-tabs\"\n      },\n      //-- PFE-ACCORDION specific properties\n      disclosure: {\n        // Leaving this as a string since it's an opt out\n        title: \"Disclosure\",\n        type: String,\n        values: [\"true\", \"false\"],\n        cascade: \"pfe-accordion\"\n      },\n      // @TODO: Deprecated pfe-disclosure in 1.0\n      oldDisclosure: {\n        type: String,\n        alias: \"disclosure\",\n        attr: \"pfe-disclosure\"\n      },\n      //-- PFE-CONTENT-SET specific properties\n      breakpoint: {\n        title: \"Custom breakpoint\",\n        type: String,\n        default: \"700\",\n        observer: \"_updateBreakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldBreakpoint: {\n        type: String,\n        alias: \"breakpoint\",\n        attr: \"pfe-breakpoint\"\n      },\n      align: {\n        type: String,\n        enum: [\"center\"],\n        observer: \"_alignmentHandler\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldAlign: {\n        attr: \"pfe-align\",\n        alias: \"align\"\n      },\n      // @TODO: Deprecated in 1.0\n      pfeId: {\n        type: String,\n        attr: \"pfe-id\",\n        observer: \"_copyToId\"\n      }\n    };\n  }\n\n  /**\n   * Schema definition for slotted content\n   * Useful for CMS dynamic imports of components\n   */\n  static get slots() {\n    return {\n      default: {\n        title: \"Default\",\n        type: \"array\",\n        namedSlot: false,\n        items: {\n          $ref: \"raw\"\n        }\n      }\n    };\n  }\n\n  get breakpointValue() {\n    return parseInt(this.breakpoint.replace(/\\D/g, \"\"));\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get isTab() {\n    return this.parentNode\n      ? this.parentNode.offsetWidth > this.breakpointValue\n      : window.outerWidth > this.breakpointValue;\n  }\n\n  /**\n   * Getter: Capture all components in the _view slot\n   * @returns {NodeList} All components in the _view slot\n   */\n  get viewAll() {\n    return this.querySelectorAll(`[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the rendering component from the _view slot\n   * @returns {NodeItem} The rendering component from the _view slot\n   */\n  get view() {\n    let views = [...this.viewAll].filter(view => [PfeTabs.tag, PfeAccordion.tag].includes(view.tag));\n    if (views.length <= 0) return null;\n    return views[0];\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get expectedTag() {\n    return this.isTab ? PfeTabs.tag : PfeAccordion.tag;\n  }\n\n  /**\n   * Getter: Capture the tabs component from the _view slot (if it exists)\n   * @returns {NodeItem} The tabs component from the _view slot\n   */\n  get tabs() {\n    return this.querySelector(`pfe-tabs[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the accordion component from the _view slot (if it exists)\n   * @returns {NodeItem} The accordion component from the _view slot\n   */\n  get accordion() {\n    return this.querySelector(`pfe-accordion[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Validates the incoming light DOM for some usable content\n   * @returns {boolean} Returns true if some usable light DOM exists\n   */\n  get hasValidLightDOM() {\n    // If any light DOM exists, validate it meets the requirements for rendering\n    if (this.hasLightDOM()) {\n      let valid = false;\n      // Loop through the assigned nodes\n      [...this.children].forEach(node => {\n        // Validate that any non-text nodes have the right attributes present\n        // They don't have to be in the right order, just that they exist at all lets us progress\n        if (\n          node.nodeName !== \"#text\" &&\n          (this._isHeader(node) ||\n            this._isPanel(node) ||\n            (node.tagName && node.tagName.toLowerCase() === this.expectedTag))\n        )\n          valid = true;\n      });\n      return valid;\n    } else return false;\n  }\n\n  constructor() {\n    super(PfeContentSet, { type: PfeContentSet.PfeType, delayRender: true });\n\n    this.isIE11 = /MSIE|Trident|Edge\\//.test(window.navigator.userAgent);\n\n    this.build = this.build.bind(this);\n\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n\n    this._cleanSet = this._cleanSet.bind(this);\n    this._build = this._build.bind(this);\n    this._buildWrapper = this._buildWrapper.bind(this);\n    this._buildSets = this._buildSets.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n    if (window.ResizeObserver) this._resizeObserver = new ResizeObserver(this._resizeHandler);\n    if (this.isIE11) this.render();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // If the element has an ID, postfix container\n    if (this.id) this.id = `${this.id.replace(/-container$/, \"\")}-container`;\n\n    // Validate that the light DOM data exists before building\n    if (this.hasValidLightDOM) {\n      this._build();\n      if (!this.isIE11) this.render();\n\n      if (!this.isIE11 && window.ResizeObserver && this.parentElement) {\n        this._resizeObserver.observe(this.parentElement);\n      }\n    } else if (!this.isIE11) this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n    if (window.ResizeObserver) this._resizeObserver.disconnect();\n  }\n\n  /**\n   * Run the internal build task\n   */\n  build() {\n    // Fire the build of the internals for the new component\n    return this._build();\n  }\n\n  /**\n   * Mutation handler\n   * Read in and parse the mutation list, rebuilding as necessary\n   */\n  _mutationHandler(mutationsList) {\n    if (!this.isIE11 && mutationsList) {\n      for (let mutation of mutationsList) {\n        switch (mutation.type) {\n          case \"childList\":\n            if (mutation.addedNodes) {\n              // Check the added nodes to make sure it's not assigned to the _view slot\n              let nodes = this._cleanSet(mutation.addedNodes);\n              if (nodes.length > 0) this._build(nodes);\n            }\n            if (mutation.removedNodes) {\n              // Check the added nodes to make sure it's not assigned to the _view slot\n              let nodes = this._cleanSet(mutation.removedNodes);\n              if (nodes.length > 0) this._removeNodes(nodes);\n            }\n            break;\n          case \"characterData\":\n            if (mutation.target && mutation.target.parentNode)\n              this._updateNode(mutation.target.parentNode, mutation.target.textContent);\n            break;\n        }\n      }\n\n      return;\n    }\n\n    // If no mutation list is provided or it's IE11, rebuild the whole thing\n    this._build();\n  }\n\n  /**\n   * Checks if the element provided is a header region\n   * @returns {boolean} True if the element provided is a header region\n   */\n  _isHeader(el) {\n    return !!(el.hasAttribute(`${this.tag}--header`) || el.tagName.match(/H[1-6]/));\n  }\n\n  /**\n   * Checks if the element provided is a panel region\n   * @returns {boolean} True if the element provided is a panel region\n   */\n  _isPanel(el) {\n    return !!el.hasAttribute(`${this.tag}--panel`);\n  }\n\n  /**\n   * Reflect the removal of nodes from light DOM into the rendered view\n   */\n  _removeNodes(list) {\n    list.forEach(item => this._removeNode(item));\n\n    // If a container doesn't exist, escape now\n    if (!this.view) return;\n\n    // Check if the container is empty, hide\n    if (!this.view.hasChildNodes()) this.view.setAttribute(\"hidden\", \"\");\n    else this.view.removeAttribute(\"hidden\");\n  }\n\n  /**\n   * Find a connection between a node in light DOM that was added or removed\n   * and the matching node in the rendered component; this makes upgrades more\n   * efficient so we're not rebuilding everything every time.\n   * @returns {Node} Returns the node in the rendered component that maps to the light DOM node provided\n   */\n  _findConnection(node) {\n    let connection = null;\n\n    if (!this.view) return connection;\n\n    // If this node is mapped to one in the upgraded component\n    if (node.nodeName !== \"#text\" && node.hasAttribute(\"maps-to\")) {\n      const id = node.getAttribute(\"maps-to\");\n      if (!id) return connection;\n\n      connection = this.view.querySelector(`#${id}`);\n      if (!connection) this.warn(`no element could be found with #${id}`);\n    }\n\n    // Return the connection\n    return connection;\n  }\n\n  /**\n   * Reflect the removal of a node from light DOM into the rendered view\n   */\n  _removeNode(node) {\n    if (!this.view) return;\n\n    const connection = _findConnection(node);\n    if (connection) this.view.removeChild(connection);\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _updateNode(node, textContent) {\n    if (!this.view) return;\n\n    const connection = _findConnection(node);\n    if (connection) connection.textContent = textContent;\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _cleanSet(set) {\n    return [...set].filter(item => item !== this.view);\n  }\n\n  /**\n   * Manage the building of the rendering component\n   * Optionally accepts the input of new nodes added to the DOM\n   */\n  _build(addedNodes) {\n    // @TODO: Add back a promise here post-IE11\n    let view = this.view;\n    if (!view || view.tag !== this.expectedTag) {\n      view = this._buildWrapper();\n    }\n\n    // Disconnect the observer while we parse it\n    this._observer.disconnect();\n\n    const template = view.tag === \"pfe-tabs\" ? PfeTabs.contentTemplate : PfeAccordion.contentTemplate;\n\n    // If no id is present, give it the id from the wrapper\n    if (!view.id) view.id = this.id || this.pfeId || this.randomId;\n\n    let rawSets = null;\n    if (addedNodes) rawSets = addedNodes;\n    if (!rawSets && [...this.children].length) rawSets = this.children;\n\n    // Clear out the content of the host if we're using the full child list\n    if (!addedNodes && rawSets) view.innerHTML = \"\";\n\n    // If sets is not null, build them using the template\n    if (rawSets) {\n      let sets = this._buildSets(rawSets, template);\n      if (sets) view.appendChild(sets);\n    }\n\n    // Render or re-cascade properties to the component after update\n    if (!this._rendered) this.render();\n    else this.cascadeProperties(this.viewAll);\n\n    // Wait until the tabs upgrade before setting the selectedIndex value\n    Promise.all([customElements.whenDefined(PfeTabs.tag)]).then(() => {\n      // pass the selectedIndex property down from pfe-content-set\n      // to pfe-tabs if there is a selectedIndex value that's not 0\n      // Pass the selectedIndex down to the tabset\n      if (this.isTab && this.selectedIndex) {\n        view.selectedIndex = this.selectedIndex;\n      }\n\n      // Attach the mutation observer\n      if (!this.isIE11) this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n\n      return;\n    });\n  }\n\n  /*\n   * Note: be sure to disconnect the observer before running this\n   */\n  _buildWrapper() {\n    if (this.view && this.view.tag === this.expectedTag) return this.view;\n\n    // If the upgraded component matches the tag name of the expected rendering component, return now;\n    if (this.view) {\n      // One option was to just remove the existing element: existingEl.remove();\n      // But it seems safer to clear out the entire slot to make sure nothing snuck in unexpectedly\n      this.viewAll.forEach(item => item.remove());\n    }\n\n    // If there was no rendering component or it was the wrong one (and thus removed), create one!\n    let newEl = document.createElement(this.expectedTag);\n    newEl.setAttribute(\"slot\", \"_view\");\n    if (this.id) newEl.id = this.id.replace(/-container$/, \"\");\n    this.appendChild(newEl);\n\n    return newEl;\n  }\n\n  _buildSets(sets, template) {\n    sets = this._cleanSet(sets);\n    let fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < sets.length; i = i + 2) {\n      let header = sets[i];\n      let panel = sets[i + 1];\n\n      // Set up the template for the sets of content\n      const wrapper = document.createElement(\"template\");\n      wrapper.innerHTML = template.trim();\n      const templateMarkup = wrapper.content.cloneNode(true);\n\n      if (!header) this.warn(`no element found at position ${i} of the light DOM input.`);\n      if (!panel) this.warn(`no element found at position ${i + 1} of the light DOM input.`);\n\n      if (header && this._isHeader(header) && panel && this._isPanel(panel)) {\n        // Capture the line-item from the template\n        [header, panel].forEach((region, idx) => {\n          const section = idx === 0 ? \"header\" : \"panel\";\n\n          let piece = templateMarkup.querySelector(`[content-type=\"${section}\"]`).cloneNode(true);\n\n          // Remove the section from the ID name in case it was already upgraded\n          let regionId = region.id;\n          if (region.hasAttribute(\"upgraded\") && regionId) {\n            regionId = regionId.replace(new RegExp(`--${section}$`), \"\");\n          }\n          // Capture the ID from the region, the pfe-id, a previous \"maps-to\" attr, or generate a random one\n          const id = regionId || region.getAttribute(\"pfe-id\") || region.getAttribute(\"maps-to\") || this.randomId;\n\n          // Update the region ID with a postfix to prevent duplication\n          if (region.id) region.id = `${regionId}--${section}`;\n          // Flag that this element was upgraded\n          region.setAttribute(\"upgraded\", \"\");\n\n          const clone = region.cloneNode(true);\n\n          // Remove the flag from the clone\n          clone.removeAttribute(`${this.tag}--${section}`);\n\n          // Append a clone of the region to the template item\n          piece.appendChild(clone);\n\n          // Flag light DOM as upgraded\n          region.setAttribute(\"maps-to\", id);\n\n          piece.id = id;\n\n          // Attach the template item to the fragment\n          fragment.appendChild(piece);\n        });\n      }\n    }\n\n    return fragment;\n  }\n\n  _cleanSet(set) {\n    return [...set].filter(item => item !== this.view);\n  }\n\n  _copyToId() {\n    // Don't overwrite an existing ID but backwards support pfe-id\n    if (!this.id) this.id = this.pfeId;\n  }\n\n  _alignmentHandler(oldVal, newVal) {\n    if (oldVal !== newVal) this.tabAlign = newVal;\n  }\n\n  _resizeHandler() {\n    if (!this.view || (this.view && this.view.tag !== this.expectedTag)) {\n      this._build();\n    }\n  }\n\n  _updateBreakpoint() {\n    // If the correct rendering element isn't in use yet, build it from scratch\n    if (!this.view || (this.view && this.view.tag !== this.expectedTag)) {\n      this._build();\n    }\n  }\n}\n\nPFElement.create(PfeContentSet);\n\nexport default PfeContentSet;\n"],"names":["window","NodeList","prototype","forEach","callback","thisArg","i","length","call","Object","assign","defineProperty","value","target","varArgs","undefined","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","writable","configurable","CONTENT_MUTATION_CONFIG","characterData","childList","subtree","PfeContentSet","parseInt","breakpoint","replace","parentNode","offsetWidth","breakpointValue","outerWidth","querySelectorAll","views","viewAll","filter","PfeTabs","tag","PfeAccordion","includes","view","isTab","querySelector","hasLightDOM","valid","children","node","nodeName","_isHeader","_isPanel","tagName","toLowerCase","expectedTag","title","description","PFElement","pfeType","combo","vertical","type","Boolean","default","cascade","selectedIndex","Number","tabAlign","String","enum","variant","oldVariant","attr","alias","oldTabHistory","tabHistory","disclosure","values","oldDisclosure","observer","oldBreakpoint","align","oldAlign","pfeId","namedSlot","items","$ref","PfeType","delayRender","isIE11","test","navigator","userAgent","build","bind","_mutationHandler","_resizeHandler","_cleanSet","_build","_buildWrapper","_buildSets","_observer","MutationObserver","ResizeObserver","_resizeObserver","render","id","hasValidLightDOM","parentElement","observe","disconnect","mutationsList","mutation","addedNodes","nodes","removedNodes","_removeNodes","_updateNode","textContent","el","hasAttribute","match","list","_removeNode","item","hasChildNodes","setAttribute","removeAttribute","connection","getAttribute","warn","_findConnection","removeChild","set","template","contentTemplate","randomId","rawSets","innerHTML","sets","appendChild","_rendered","cascadeProperties","Promise","all","customElements","whenDefined","then","remove","newEl","document","createElement","fragment","createDocumentFragment","header","panel","wrapper","trim","templateMarkup","content","cloneNode","region","idx","section","piece","regionId","RegExp","clone","oldVal","newVal","create"],"mappings":"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"}