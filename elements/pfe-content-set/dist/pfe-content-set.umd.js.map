{"version":3,"file":"pfe-content-set.umd.js","sources":["../_temp/polyfills--pfe-content-set.js","../_temp/pfe-content-set.umd.js"],"sourcesContent":["// @POLYFILL  NodeList.prototype.forEach()\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = function(callback, thisArg) {\n    thisArg = thisArg || window;\n    for (var i = 0; i < this.length; i++) {\n      callback.call(thisArg, this[i], i, this);\n    }\n  };\n}\n\n// @POLYFILL  Object.prototype.assign()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n      if (target === null || target === undefined) {\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource !== null && nextSource !== undefined) {\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*!\n * PatternFly Elements: PfeContentSet 1.6.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills: matches, closest, includes, assign\nimport \"./polyfills--pfe-content-set.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\nimport PfeAccordion from \"../../pfe-accordion/dist/pfe-accordion\";\nimport PfeTabs from \"../../pfe-tabs/dist/pfe-tabs\";\n\nconst CONTENT_MUTATION_CONFIG = {\n  characterData: false,\n  childList: true,\n  subtree: false\n};\nclass PfeContentSet extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.6.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:block}::slotted([hidden]),:host([hidden]),[hidden]{display:none!important}:host([align=center]),:host([align=right]){text-align:left} /*# sourceMappingURL=pfe-content-set.min.css.map */</style>\n<div id=\"container\"></div>`;\n  }\n\n  static get tag() {\n    return \"pfe-content-set\";\n  }\n\n  get styleUrl() {\n    return \"pfe-content-set.scss\";\n  }\n\n  get templateUrl() {\n    return \"pfe-content-set.html\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Content set\",\n      description:\n        \"This element creates a flexible component that renders an accordion or tabset depending on screen size.\"\n    };\n  }\n\n  static get pfeType() {\n    return PFElement.pfeType.combo;\n  }\n\n  /**\n   * Property definitions for Content set combine the options available for Tabs & Accordion\n   */\n  static get properties() {\n    return {\n      //-- PFE-TABS specific properties\n      vertical: {\n        title: \"Vertical orientation\",\n        type: Boolean,\n        default: false,\n        cascade: \"pfe-tabs\"\n      },\n      selectedIndex: {\n        title: \"Index of the selected tab\",\n        type: Number,\n        cascade: \"pfe-tabs\"\n      },\n      tabAlign: {\n        title: \"Tab alignment\",\n        type: String,\n        enum: [\"center\"],\n        cascade: \"pfe-tabs\"\n      },\n      variant: {\n        title: \"Variant\",\n        type: String,\n        enum: [\"wind\", \"earth\"],\n        default: \"wind\",\n        cascade: \"pfe-tabs\"\n      },\n      // @TODO: Deprecated for 1.0\n      oldVariant: {\n        type: String,\n        attr: \"pfe-variant\",\n        alias: \"variant\"\n      },\n      // @TODO: Deprecated for 1.0\n      oldTabHistory: {\n        type: Boolean,\n        alias: \"tabHistory\",\n        attr: \"pfe-tab-history\"\n      },\n      tabHistory: {\n        title: \"Tab History\",\n        type: Boolean,\n        default: false,\n        cascade: \"pfe-tabs\"\n      },\n      //-- PFE-ACCORDION specific properties\n      disclosure: {\n        // Leaving this as a string since it's an opt out\n        title: \"Disclosure\",\n        type: String,\n        values: [\"true\", \"false\"],\n        cascade: \"pfe-accordion\"\n      },\n      // @TODO: Deprecated pfe-disclosure in 1.0\n      oldDisclosure: {\n        type: String,\n        alias: \"disclosure\",\n        attr: \"pfe-disclosure\"\n      },\n      //-- PFE-CONTENT-SET specific properties\n      breakpoint: {\n        title: \"Custom breakpoint\",\n        type: String,\n        default: \"700\",\n        observer: \"_updateBreakpoint\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldBreakpoint: {\n        type: String,\n        alias: \"breakpoint\",\n        attr: \"pfe-breakpoint\"\n      },\n      align: {\n        type: String,\n        enum: [\"center\"],\n        observer: \"_alignmentHandler\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldAlign: {\n        attr: \"pfe-align\",\n        alias: \"align\"\n      },\n      // @TODO: Deprecated in 1.0\n      pfeId: {\n        type: String,\n        attr: \"pfe-id\",\n        observer: \"_copyToId\"\n      }\n    };\n  }\n\n  /**\n   * Schema definition for slotted content\n   * Useful for CMS dynamic imports of components\n   */\n  static get slots() {\n    return {\n      default: {\n        title: \"Default\",\n        type: \"array\",\n        namedSlot: false,\n        items: {\n          $ref: \"raw\"\n        }\n      }\n    };\n  }\n\n  get breakpointValue() {\n    return parseInt(this.breakpoint.replace(/\\D/g, \"\"));\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get isTab() {\n    return this.parentNode\n      ? this.parentNode.offsetWidth > this.breakpointValue\n      : window.outerWidth > this.breakpointValue;\n  }\n\n  /**\n   * Getter: Alias now for this.view\n   * @returns {NodeItem} The rendering component\n   */\n  get viewAll() {\n    return this.view;\n  }\n\n  /**\n   * Getter: Capture the rendering component from the shadow DOM\n   * @returns {NodeItem} The rendering component from the shadow DOM\n   */\n  get view() {\n    if (!this._rendered) return;\n\n    return this.shadowRoot.querySelector(`#container > ${this.expectedTag}`);\n  }\n\n  /**\n   * Getter: should this be rendered as a tabset based on the breakpoint size\n   * @returns {boolean} Is this a tabset?\n   */\n  get expectedTag() {\n    return this.isTab ? PfeTabs.tag : PfeAccordion.tag;\n  }\n\n  /**\n   * Getter: Capture the tabs component from the _view slot (if it exists)\n   * @returns {NodeItem} The tabs component from the _view slot\n   */\n  get tabs() {\n    return this.querySelector(`pfe-tabs[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Capture the accordion component from the _view slot (if it exists)\n   * @returns {NodeItem} The accordion component from the _view slot\n   */\n  get accordion() {\n    return this.querySelector(`pfe-accordion[slot=\"_view\"]`);\n  }\n\n  /**\n   * Getter: Validates the incoming light DOM for some usable content\n   * @returns {boolean} Returns true if some usable light DOM exists\n   */\n  get hasValidLightDOM() {\n    // If any light DOM exists, validate it meets the requirements for rendering\n    if (this.hasLightDOM()) {\n      let valid = false;\n      // Loop through the assigned nodes\n      [...this.children].forEach(node => {\n        // Validate that any non-text nodes have the right attributes present\n        // They don't have to be in the right order, just that they exist at all lets us progress\n        if (\n          node.nodeName !== \"#text\" &&\n          (this._isHeader(node) ||\n            this._isPanel(node) ||\n            (node.tagName && node.tagName.toLowerCase() === this.expectedTag))\n        )\n          valid = true;\n      });\n      return valid;\n    } else return false;\n  }\n\n  constructor() {\n    super(PfeContentSet, { type: PfeContentSet.PfeType });\n\n    this.build = this.build.bind(this);\n\n    this._mutationHandler = this._mutationHandler.bind(this);\n    this._alignmentHandler = this._alignmentHandler.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n\n    this._build = this._build.bind(this);\n    this._buildWrapper = this._buildWrapper.bind(this);\n    this._buildSets = this._buildSets.bind(this);\n\n    this._isHeader = this._isHeader.bind(this);\n    this._isPanel = this._isPanel.bind(this);\n    this._addNodes = this._addNodes.bind(this);\n    this._removeNodes = this._removeNodes.bind(this);\n    this._findConnection = this._findConnection.bind(this);\n    this._addNode = this._addNode.bind(this);\n    this._removeNode = this._removeNode.bind(this);\n    this._updateNode = this._updateNode.bind(this);\n\n    this._copyToId = this._copyToId.bind(this);\n    this._updateBreakpoint = this._updateBreakpoint.bind(this);\n\n    this._observer = new MutationObserver(this._mutationHandler);\n    if (window.ResizeObserver) this._resizeObserver = new ResizeObserver(this._resizeHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Validate that the light DOM data exists before building\n    if (this.hasValidLightDOM) {\n      this._build();\n\n      if (!this.isIE11 && window.ResizeObserver && this.parentElement) {\n        this._resizeObserver.observe(this.parentElement);\n      }\n    } else if (!this.isIE11) this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n    if (window.ResizeObserver) this._resizeObserver.disconnect();\n  }\n\n  /**\n   * Run the internal build task\n   */\n  build() {\n    // Fire the build of the internals for the new component\n    return this._build();\n  }\n\n  /**\n   * Mutation handler\n   * Read in and parse the mutation list, rebuilding as necessary\n   */\n  _mutationHandler(mutationsList) {\n    if (!this.isIE11 && mutationsList) {\n      for (let mutation of mutationsList) {\n        if (mutation.type === \"childList\") {\n          if (mutation.addedNodes && mutation.addedNodes.length > 0) {\n            // Check the added nodes to make sure it's not assigned to the _view slot\n            let nodes = mutation.addedNodes;\n            if (nodes.length > 0) this._addNodes(nodes);\n          }\n          if (mutation.removedNodes && mutation.removedNodes.length > 0) {\n            // Check the added nodes to make sure it's not assigned to the _view slot\n            let nodes = mutation.removedNodes;\n            if (nodes.length > 0) this._removeNodes(nodes);\n          }\n        }\n      }\n\n      return;\n    }\n\n    // If no mutation list is provided or it's IE11, rebuild the whole thing\n    this._build();\n  }\n\n  /**\n   * Checks if the element provided is a header region\n   * @returns {boolean} True if the element provided is a header region\n   */\n  _isHeader(el) {\n    // Ensure that we don't throw an error if we encounter a web component\n    // yet to be defined.\n    if (typeof el.hasAttribute !== \"undefined\") {\n      return !!(el.hasAttribute(`${this.tag}--header`) || el.tagName.match(/H[1-6]/));\n    }\n    return false;\n  }\n\n  /**\n   * Checks if the element provided is a panel region\n   * @returns {boolean} True if the element provided is a panel region\n   */\n  _isPanel(el) {\n    // Ensure that we don't throw an error if we encounter a web component\n    // yet to be defined.\n    if (typeof el.previousElementSibling !== \"undefined\") {\n      return !!this._isHeader(el.previousElementSibling);\n    }\n    return false;\n  }\n\n  /**\n   * Reflect the addition of nodes from light DOM into the rendered view\n   */\n  _addNodes(list) {\n    this._build(list);\n\n    // @TODO: Build in some logic for injecting a single node rather than rebuild\n    // list.forEach(item => this._addNode(item));\n  }\n\n  /**\n   * Reflect the removal of nodes from light DOM into the rendered view\n   */\n  _removeNodes(list) {\n    list.forEach(item => this._removeNode(item));\n\n    // If a container doesn't exist, escape now\n    if (!this.view) return;\n\n    // Check if the container is empty, hide\n    if (!this.view.hasChildNodes()) this.view.setAttribute(\"hidden\", \"\");\n    else this.view.removeAttribute(\"hidden\");\n  }\n\n  /**\n   * Find a connection between a node in light DOM that was added or removed\n   * and the matching node in the rendered component; this makes upgrades more\n   * efficient so we're not rebuilding everything every time.\n   * @returns {Node} Returns the node in the rendered component that maps to the light DOM node provided\n   */\n  _findConnection(node) {\n    let connection = null;\n\n    if (!this.view) return connection;\n\n    // If this node is mapped to one in the upgraded component\n    if (node.nodeName !== \"#text\" && node.hasAttribute(\"slot\")) {\n      const id = node.getAttribute(\"slot\");\n      if (id) connection = this.view.querySelector(`[name=\"${id}\"]`);\n    }\n\n    if (!connection) this.warn(`no slot could be found with [name=\"${id}\"]`);\n\n    // Return the connection\n    return connection;\n  }\n\n  /**\n   * Reflect the removal of a node from light DOM into the rendered view\n   */\n  _addNode(node) {\n    if (!this.view) return;\n\n    // @TODO: Build in some logic for injecting a single node rather than rebuild\n\n    // Fire a full rebuild if it can't determine the mapped element\n    this._build();\n  }\n\n  /**\n   * Reflect the removal of a node from light DOM into the rendered view\n   */\n  _removeNode(node) {\n    if (!this.view) return;\n\n    const connection = this._findConnection(node);\n    if (connection) {\n      let header, panel;\n      const el = connection.parentElement;\n\n      // Look for the sibling element\n      if (\n        el.getAttribute(\"content-type\") === \"header\" &&\n        el.nextElementSibling &&\n        el.nextElementSibling.getAttribute(\"content-type\") === \"panel\"\n      ) {\n        header = el;\n        panel = el.nextElementSibling;\n      } else if (\n        el.getAttribute(\"content-type\") === \"panel\" &&\n        el.previousElementSibling &&\n        el.previousElementSibling.getAttribute(\"content-type\") === \"header\"\n      ) {\n        header = el.previousElementSibling;\n        panel = el;\n      }\n\n      // This will remove the sibling element from the\n      // shadow template but not the light DOM\n      if (header) header.remove();\n      if (panel) panel.remove();\n    }\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  _updateNode(node, textContent) {\n    if (!this.view) return;\n\n    const connection = this._findConnection(node);\n    if (connection) {\n      if (textContent) connection.textContent = textContent;\n      else connection.innerHTML = node.innerHTML;\n    }\n    // Fire a full rebuild if it can't determine the mapped element\n    else this._build();\n  }\n\n  /**\n   * Manage the building of the rendering component\n   * Optionally accepts the input of new nodes added to the DOM\n   */\n  _build(addedNodes) {\n    // @TODO: Add back a promise here post-IE11\n    let view = this.view;\n    if (!view || view.tag !== this.expectedTag) {\n      view = this._buildWrapper();\n    }\n\n    // Disconnect the observer while we parse it\n    this._observer.disconnect();\n\n    let tag = view.tag || view.tagName.toLowerCase();\n    const template = tag === \"pfe-tabs\" ? PfeTabs.contentTemplate : PfeAccordion.contentTemplate;\n\n    let rawSets = null;\n    if (addedNodes) rawSets = addedNodes;\n    if (!rawSets && [...this.children].length) rawSets = this.children;\n\n    // Clear out the content of the host if we're using the full child list\n    if (!addedNodes && rawSets) view.innerHTML = \"\";\n\n    // If sets is not null, build them using the template\n    if (rawSets) {\n      let sets = this._buildSets(rawSets, template);\n      if (sets) view.appendChild(sets);\n    }\n\n    // @todo find out why we need this shim\n    // Shadydom breaks if we use innerHTML to set the new content but Selenium will infinitely\n    // loop in out tests if we use appendChild.\n    if (window.ShadyDOM) this.shadowRoot.querySelector(`#container`).appendChild(view);\n    else this.shadowRoot.querySelector(`#container`).innerHTML = view.outerHTML;\n\n    Promise.all([customElements.whenDefined(tag)]).then(() => {\n      this.cascadeProperties();\n\n      this.resetContext();\n\n      // Attach the mutation observer\n      if (!this.isIE11) this._observer.observe(this, CONTENT_MUTATION_CONFIG);\n\n      return;\n    });\n  }\n\n  /*\n   * Note: be sure to disconnect the observer before running this\n   */\n  _buildWrapper() {\n    // If the upgraded component matches the tag name of the expected rendering component, return now;\n    if (this.view) return this.view;\n\n    // Create the rendering element\n    let newEl = document.createElement(this.expectedTag);\n    newEl.id = this.id || this.pfeId || this.randomId;\n\n    // Return the new element so that the content can be injected\n    return newEl;\n  }\n\n  _buildSets(sets, template) {\n    let fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < sets.length; i = i + 2) {\n      let header = sets[i];\n      let panel = sets[i + 1];\n\n      // Set up the template for the sets of content\n      const wrapper = document.createElement(\"template\");\n      wrapper.innerHTML = template.trim();\n\n      // Capture the template markup as a cloned node\n      const templateMarkup = wrapper.content.cloneNode(true);\n\n      if (!header) this.warn(`no element found at position ${i} of the light DOM input.`);\n      if (!panel) this.warn(`no element found at position ${i + 1} of the light DOM input.`);\n\n      if (header && this._isHeader(header) && panel && this._isPanel(panel)) {\n        // Capture the line-item from the template\n        [header, panel].forEach((region, idx) => {\n          const section = idx === 0 ? \"header\" : \"panel\";\n\n          let piece = templateMarkup.querySelector(`[content-type=\"${section}\"]`).cloneNode(true);\n\n          // Create a new slot for the shadow template and create a random name for it\n          const slot = document.createElement(\"slot\");\n          slot.name = this.randomId.replace(\"pfe-\", `${section}-`);\n\n          // Append the new slot into the template item\n          piece.appendChild(slot);\n\n          // Connect the light DOM region to the newly create slot\n          region.setAttribute(\"slot\", slot.name);\n\n          // Capture the ID from the region or the pfe-id if they exist\n          if (region.id || region.getAttribute(\"pfe-id\")) piece.id = region.id || region.getAttribute(\"pfe-id\");\n\n          // Attach the template item to the fragment\n          fragment.appendChild(piece);\n        });\n      }\n    }\n\n    return fragment;\n  }\n\n  _copyToId(oldVal, newVal) {\n    if (oldVal !== newVal && !this.id) {\n      // Don't overwrite an existing ID but backwards support pfe-id\n      this.id = newVal;\n    }\n  }\n\n  _alignmentHandler(oldVal, newVal) {\n    if (oldVal !== newVal) this.tabAlign = newVal;\n  }\n\n  _resizeHandler() {\n    if (!this.view || (this.view && this.view.tag !== this.expectedTag)) {\n      this._build();\n    }\n  }\n\n  _updateBreakpoint() {\n    // If the correct rendering element isn't in use yet, build it from scratch\n    if (!this.view || (this.view && this.view.tag !== this.expectedTag)) {\n      this._build();\n    }\n  }\n}\n\nPFElement.create(PfeContentSet);\n\nexport default PfeContentSet;\n"],"names":["window","NodeList","prototype","forEach","callback","thisArg","i","length","call","Object","assign","defineProperty","value","target","varArgs","undefined","TypeError","to","index","arguments","nextSource","nextKey","hasOwnProperty","writable","configurable","CONTENT_MUTATION_CONFIG","characterData","childList","subtree","PfeContentSet","parseInt","breakpoint","replace","parentNode","offsetWidth","breakpointValue","outerWidth","view","_rendered","shadowRoot","querySelector","expectedTag","isTab","PfeTabs","tag","PfeAccordion","hasLightDOM","valid","children","node","nodeName","_isHeader","_isPanel","tagName","toLowerCase","title","description","PFElement","pfeType","combo","vertical","type","Boolean","default","cascade","selectedIndex","Number","tabAlign","String","enum","variant","oldVariant","attr","alias","oldTabHistory","tabHistory","disclosure","values","oldDisclosure","observer","oldBreakpoint","align","oldAlign","pfeId","namedSlot","items","$ref","PfeType","build","bind","_mutationHandler","_alignmentHandler","_resizeHandler","_build","_buildWrapper","_buildSets","_addNodes","_removeNodes","_findConnection","_addNode","_removeNode","_updateNode","_copyToId","_updateBreakpoint","_observer","MutationObserver","ResizeObserver","_resizeObserver","hasValidLightDOM","isIE11","parentElement","observe","disconnect","mutationsList","mutation","addedNodes","nodes","removedNodes","el","hasAttribute","match","previousElementSibling","list","item","hasChildNodes","setAttribute","removeAttribute","connection","id","getAttribute","warn","header","panel","nextElementSibling","remove","textContent","innerHTML","template","contentTemplate","rawSets","sets","appendChild","ShadyDOM","outerHTML","Promise","all","customElements","whenDefined","then","cascadeProperties","resetContext","newEl","document","createElement","randomId","fragment","createDocumentFragment","wrapper","trim","templateMarkup","content","cloneNode","region","idx","section","piece","slot","name","oldVal","newVal","create"],"mappings":"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"}