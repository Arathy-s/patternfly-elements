{"version":3,"sources":["pfe-jump-links-nav.scss","../../pfe-sass/functions/_custom-properties.scss","pfe-jump-links-nav.css"],"names":[],"mappings":"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","file":"pfe-jump-links-nav.css","sourcesContent":["// Please see the pfe-sass README for guidance on using these tools\n@import \"../../pfe-sass/pfe-sass\";\n\n$LOCAL: jump-links;\n\n$LOCAL-VARIABLES: (\n  horizontal-spacer: calc(#{pfe-var(container-padding)} * 2),\n  vertical-spacer: calc(#{pfe-var(container-padding)} * 2),\n  BackgroundColor: pfe-var(surface--lightest),\n  BorderColor: pfe-var(ui-accent),\n  FontSize: pfe-var(font-size--heading--epsilon),\n  heading: (\n    FontSize: pfe-var(font-size--heading--zeta)\n  ),\n  link: (\n    horizontal-spacer: calc(#{pfe-var(content-spacer)} / 3),\n    vertical-spacer: calc(#{pfe-var(content-spacer)} / 6),\n  ),\n  nav: (\n      offset: calc(#{pfe-var(container-spacer)} * 4)\n  )\n);\n\n:host {\n  --pfe-jump-links-panel__section--spacer: calc(var(--pfe-jump-links-nav--Height--actual) + var(--pfe-navigation--Height--actual) + var(--jump-links-nav--nudge));\n  // @TODO We can't strip a unit from a CSS variable\n  // --pfe-jump-links-panel--offset: pfe-strip-unit(#{var(--pfe-jump-links-panel__section--spacer)});\n  \n  --context: var(--pfe-jump-links--context);\n\n  box-sizing: border-box;\n  font-family: pfe-var(font-family);\n  font-weight: pfe-var(font-weight--normal);\n  font-weight: 400; // @TODO: remove once font-weight--normal is 400\n  display: block;\n  position: sticky;\n  top:  pfe-local(offset, $region: nav);\n  padding-left: 0;\n\n  background-color: pfe-local(BackgroundColor);\n\n  @media(min-width: pfe-breakpoint(lg)) {\n    border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;\n    padding: pfe-local(vertical-spacer) pfe-local(horizontal-spacer);\n  }\n\n  .pfe-jump-links-nav__heading > h3,\n  ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n    color: pfe-broadcasted(text);\n    \n    margin: 0 0 pfe-var(container-spacer);\n    font-size: pfe-local(FontSize, $region: heading);\n    font-weight: 400;\n    text-transform: uppercase;\n\n    @media (max-width: pfe-breakpoint(lg, $max: true)) {\n      display: none;\n    }\n  }\n}\n\n:host([sticky=\"false\"]) {\n  position: relative;\n}\n\nnav {\n  visibility: visible;\n  margin: 0;\n  list-style: none;\n  padding: 0;\n\n  ul {\n    padding: 0;\n    border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);\n  }\n\n  li {\n    border-left: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;\n    display: block;\n    text-decoration: none;\n    margin-left: calc(#{pfe-var(surface--border-width)} * -1);\n\n    &.expand {\n      ul {\n        flex: 1;\n      }\n\n      .sub-section {\n        display: table;\n        height: auto;\n      }\n    }\n\n    &[active] {\n      border-left-color: pfe-local(BorderColor);\n    }\n  }\n\n  a {\n    position: relative;\n    display: table;\n\n    color: pfe-var(ui-disabled--text);\n    font-size: pfe-local(FontSize);\n    text-decoration: none;\n    line-height: pfe-var(line-height);\n\n    padding: calc(#{pfe-local(vertical-spacer, $region: link)} * 2) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);\n\n    &.has-sub-section {\n      padding-bottom: pfe-local(vertical-spacer, $region: link);\n    }\n\n    &.sub-section {\n      margin-left: calc(#{pfe-var(container-spacer)} * 0.75);\n      font-size: calc(#{pfe-local(FontSize)} * 0.85);\n      padding: pfe-local(vertical-spacer, $region: link) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);\n\n      @media(min-width: pfe-breakpoint(lg)) {\n        display: none;\n      }\n      \n      &:last-child {\n        padding-bottom: pfe-local(horizontal-spacer, $region: link);\n      }\n    }\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      width: calc(100% - #{pfe-var(surface--border-width--heavy)});\n      height: calc(100% - #{pfe-var(surface--border-width--heavy)});\n      top: 0;\n      left: 0;\n    }\n\n    &:focus {\n      // @TODO: This is generally considered a poor a11y experience; can we adjust this?\n      outline: none;\n\n      &::after {\n        border-radius: pfe-var(surface--border-radius);\n        border: 2px pfe-var(surface--border-style) pfe-var(link);\n      }\n    }\n\n    &:hover {\n      color: pfe-var(surface--darkest);\n    }\n\n    &[active] {\n      color: pfe-var(surface--darkest);\n    }\n  }\n\n  // Nested lists\n  ul ul {\n    display: flex;\n    flex-direction: column;\n    flex: 0;\n\n    margin: 0;\n    padding: 0;\n\n    border-left: none !important;\n\n    overflow-y: hidden;\n    transition: flex 1s linear;\n    \n    li {\n      border-left: none !important;\n    }\n  }\n}\n\n// --------------------- //\n// Set the local variable to use the accordion namespace temporarily\n$temp: $LOCAL;\n$LOCAL: accordion;\n\npfe-accordion {\n  \n  pfe-accordion-header {\n    // @TODO: When variables are available in accordion, remove theme changes from this file\n    // hide accordion left border:\n    --pfe-theme--color--surface--border: transparent;\n    --pfe-theme--color--ui-base--on-dark: transparent;\n    --pfe-theme--color--ui-base: transparent;\n\n    position: sticky;\n    top: 0;\n  }\n\n  pfe-accordion-panel {\n    // hide accordion left border:\n    border-left-color: transparent;\n  }\n\n  // 0 -> LG breakpoint\n  @media (max-width: pfe-breakpoint(lg, $max: true)) {\n    & {\n      border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);\n    }\n\n    pfe-accordion-header {\n      background-color: pfe-var(surface--lightest);\n      --context: #{pfe-var(surface--lightest--context)};\n    }\n  }\n\n  // LG breakpoint+\n  @media(min-width: pfe-breakpoint(lg)) {\n    pfe-accordion-header {\n      visibility: collapse !important;\n      display: none;\n    }\n\n    pfe-accordion-panel {\n      visibility: collapse;\n      display: none;\n      opacity: 1;\n      display: block;\n      \n      > pfe-jump-links-nav {\n        width: 100%;\n        display: block;\n        visibility: visible;\n      }\n    }\n  }\n}\n// --------------------- //\n\n\n// Return the local variable to jump-links\n$LOCAL: $temp;\n\n:host([color=\"darkest\"]) {\n  --pfe-jump-links--BackgroundColor: #{pfe-var(surface--darkest)};\n  --pfe-jump-links--context: #{pfe-var(surface--darkest--context)};\n\n  border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled--text);\n\n  pfe-accordion-header,\n  pfe-accordion-panel,\n  button[aria-expanded=\"true\"] {\n    --pfe-accordion--BackgroundColor: #{pfe-var(surface--darkest)};\n    --pfe-accordion--context: #{pfe-var(surface--darkest--context)};\n\n    --pfe-jump-links--BackgroundColor: #{pfe-var(surface--darkest)};\n    --pfe-jump-links--context: #{pfe-var(surface--darkest--context)};\n  }\n\n  .pfe-jump-links-nav__heading > h3,\n  ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n    color: pfe-var(text--on-dark);\n  }\n\n  ul {\n    border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(text--muted);\n\n    li[active] {\n      border-left: pfe-var(ui--border-width--active) pfe-var(surface--border-style) pfe-var(link--on-dark);\n    }\n\n    a {\n      color: pfe-var(text--muted--on-dark);\n      &:hover {\n        color: pfe-var(text--on-dark);\n      }\n\n      &[active] {\n        color: pfe-var(text--on-dark);\n      }\n\n      &:focus::after {\n        border-color: pfe-var(link--on-dark);   // @TODO: What this is used for?\n      }\n    }\n  }\n}\n\n:host([horizontal]) {\n  padding: 0;\n  top: var(--pfe-jump-links-panel--offset, 0);\n  width: 100%;\n\n  nav {\n    min-height: calc(#{pfe-var(container-spacer)} * 5.5);\n\n    background-color: pfe-var(surface--lighter);\n    --context: #{pfe-var(surface--lighter--context)};\n\n    display: flex;\n    position: relative;\n\n    .pfe-jump-links-nav__heading {\n      display: none;\n    }\n\n    ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n      position: absolute;\n      left: 0;\n      max-height: calc(#{pfe-var(container-spacer)} * 3.5);\n      max-width: calc(#{pfe-var(container-spacer)} * 14);\n      top: calc(#{pfe-var(container-spacer)} * 1);\n\n      @media (max-width: pfe-breakpoint(lg, $max: true)) {\n        left: calc(#{pfe-var(container-spacer)} * 2);\n      }\n\n      @media(min-width: pfe-breakpoint(lg)) {\n        left: calc(#{pfe-var(container-spacer)} * 4);\n      }\n    }\n\n    ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n      position: absolute;\n      top: calc(#{pfe-var(container-spacer)} * 1);\n\n      @media (max-width: pfe-breakpoint(lg, $max: true)) {\n        right: calc(#{pfe-var(container-spacer)} * 2);\n      }\n\n      @media(min-width: pfe-breakpoint(lg)) {\n        right: calc(#{pfe-var(container-spacer)} * 4);\n      }\n    }\n  }\n\n  #container {\n    flex: 1;\n    display: flex;\n    justify-items: center;\n    flex-direction: column;\n  }\n\n  ul {\n    border: none;\n    text-align: center;\n\n    flex: 1;\n    display: flex;\n\n    padding: 0;\n    width: auto;\n    margin: 0 auto;\n\n    li {\n      padding: 0 calc(#{pfe-var(container-spacer)} * 1.5);\n\n      display: flex;\n      height: calc(#{pfe-var(container-spacer)} * 5);\n      align-items: center;\n\n      border-top: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;\n      border-bottom: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;\n      border-left: none;\n      border-right: none;\n\n      &[active] {\n        border-top: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) pfe-var(ui-accent);\n      }\n    }\n\n    a {\n      text-decoration: none;\n      color: pfe-var(ui-disabled--text);\n      &[active] {\n        color: pfe-var(text);\n      }\n      &:hover {\n        color: pfe-var(text);\n      }\n    }\n  }\n\n  @media (max-width: pfe-breakpoint(lg, $max: true)) {\n    nav {\n      min-height: calc(#{pfe-var(container-spacer)} * 5.5);\n      background-color: pfe-var(surface--lighter);\n      --context: #{pfe-var(surface--lighter--context)};\n    }\n\n    .pfe-jump-links-nav {\n      display: none;\n    }\n  }\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n","/// ===========================================================================\n/// Get from map - used by pfe-colors, pfe-vars, pfe-zindex\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $category - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map - SASS Map of variables\n/// @param {String} $fallback [\"\"] - Optional fallback override\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {Boolean} $USE-FALLBACK - True to use fallback colors, false to omit\n/// @example -\n///\n///     1. To look up a color: /elements/pfe-sass/src/maps/_colors.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           color:       #{pfe-var( text )};\n///           background:  #{pfe-var( surface--base )};\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-get-from-map($category, $key, $map, $fallback: null) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-theme--\";\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $USE-FALLBACK and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @requires {Map} $pfe-vars - A map of the variables in the repository\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_general.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           padding:     #{pfe-var( container-spacer )};\n///           font-size:   #{pfe-var( font-size )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            padding: var(--pfe-theme--container-spacer, 16px);\n///            font-size: var(--pfe-theme--font-size, 16px);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// ===========================================================================\n/// Local\n///\n/// Returns CSS Var for the local component-scoped variable\n///\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n/// @requires {String} $LOCAL - Name of component, this is defined at the top of the sass file for the component\n/// @use -\n///     ```\n///     :host {\n///         padding-top:      #{pfe-local(paddingTop)};\n///         padding-bottom:   #{pfe-local(paddingBottom)};\n///     }\n///     ```\n/// ===========================================================================\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$repo}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// ===========================================================================\n/// Apply broadcast function, for use with text & links.\n///\n/// It requests that the color property look for a broadcasted variable (from a container component)\n/// first if there is one, and if not, use a theme variable, with the hex color fallback.\n///\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $repo - Name of repo, which is \"pfe\"\n///\n/// @example:   color: pfe-broadcasted(ui-base--hover);\n/// @output:  Error: --pfe-broadcasted--ui-base--hover variable is not currently supported.\";\n///\n/// @example:   color: pfe-broadcasted(link);\n/// @output:  color: var(--pfe-broadcasted--link);\n/// Was: pfe-radio!\n/// ===========================================================================\n@function pfe-broadcasted($broadcast) {\n    $fallback: \"\";\n    @if $USE-FALLBACK {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$repo}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$repo}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// ===========================================================================\n/// Variable fetch\n///\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n///\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           z-index:     #{pfe-zindex( content )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            z-index: var(--pfe-theme--zindex--content, 1);\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// ===========================================================================\n/// Map value fetch\n///\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n///\n/// @param {String} $name - Name of the key for the map\n/// @example -\n///\n///     1. To look up a value: /elements/pfe-sass/src/maps/_zindex.scss\n///     2. Use like this:\n///         ```\n///         .my-element {\n///           background-color:     #{pfe-fetch( ui-base )};\n///         }\n///         ```\n///     3. Which will return:\n///         ```\n///         .my-element {\n///            background-color: #06c;\n///         }\n///         ```\n/// ===========================================================================\n@function pfe-fetch($name) {\n    $var-name: to-string($name, \"--\");\n    @if map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}",":host {\n  --pfe-jump-links-panel__section--spacer: calc(var(--pfe-jump-links-nav--Height--actual) + var(--pfe-navigation--Height--actual) + var(--jump-links-nav--nudge));\n  --context: var(--pfe-jump-links--context);\n  box-sizing: border-box;\n  font-family: var(--pfe-theme--font-family, \"Overpass\", Overpass, Helvetica, helvetica, arial, sans-serif);\n  font-weight: var(--pfe-theme--font-weight--normal, 500);\n  font-weight: 400;\n  display: block;\n  position: sticky;\n  top: var(--pfe-jump-links__nav--offset, calc(var(--pfe-theme--container-spacer, 16px) * 4));\n  padding-left: 0;\n  background-color: var(--pfe-jump-links--BackgroundColor, var(--pfe-theme--color--surface--lightest, #fff));\n}\n\n@media (min-width: 992px) {\n  :host {\n    border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) transparent;\n    padding: var(--pfe-jump-links--vertical-spacer, calc(var(--pfe-theme--container-padding, 16px) * 2)) var(--pfe-jump-links--horizontal-spacer, calc(var(--pfe-theme--container-padding, 16px) * 2));\n  }\n}\n\n:host .pfe-jump-links-nav__heading > h3,\n:host ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n  color: var(--pfe-broadcasted--text, #3c3f42);\n  margin: 0 0 var(--pfe-theme--container-spacer, 16px);\n  font-size: var(--pfe-jump-links__heading--FontSize, var(--pfe-theme--font-size--heading--zeta, 14px));\n  font-weight: 400;\n  text-transform: uppercase;\n}\n\n@media (max-width: 991px) {\n  :host .pfe-jump-links-nav__heading > h3,\n  :host ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n    display: none;\n  }\n}\n\n:host([sticky=\"false\"]) {\n  position: relative;\n}\n\nnav {\n  visibility: visible;\n  margin: 0;\n  list-style: none;\n  padding: 0;\n}\n\nnav ul {\n  padding: 0;\n  border-left: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled, #d2d2d2);\n}\n\nnav li {\n  border-left: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  display: block;\n  text-decoration: none;\n  margin-left: calc(var(--pfe-theme--surface--border-width, 1px) * -1);\n}\n\nnav li.expand ul {\n  flex: 1;\n}\n\nnav li.expand .sub-section {\n  display: table;\n  height: auto;\n}\n\nnav li[active] {\n  border-left-color: var(--pfe-jump-links--BorderColor, var(--pfe-theme--color--ui-accent, #06c));\n}\n\nnav a {\n  position: relative;\n  display: table;\n  color: var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n  font-size: var(--pfe-jump-links--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px));\n  text-decoration: none;\n  line-height: var(--pfe-theme--line-height, 1.5);\n  padding: calc(var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 3)) * 2);\n}\n\nnav a.has-sub-section {\n  padding-bottom: var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 6));\n}\n\nnav a.sub-section {\n  margin-left: calc(var(--pfe-theme--container-spacer, 16px) * 0.75);\n  font-size: calc(var(--pfe-jump-links--FontSize, var(--pfe-theme--font-size--heading--epsilon, 16px)) * 0.85);\n  padding: var(--pfe-jump-links__link--vertical-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 6)) calc(var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 3)) * 2);\n}\n\n@media (min-width: 992px) {\n  nav a.sub-section {\n    display: none;\n  }\n}\n\nnav a.sub-section:last-child {\n  padding-bottom: var(--pfe-jump-links__link--horizontal-spacer, calc(var(--pfe-theme--content-spacer, 24px) / 3));\n}\n\nnav a::after {\n  content: \"\";\n  position: absolute;\n  width: calc(100% - var(--pfe-theme--surface--border-width--heavy, 4px));\n  height: calc(100% - var(--pfe-theme--surface--border-width--heavy, 4px));\n  top: 0;\n  left: 0;\n}\n\nnav a:focus {\n  outline: none;\n}\n\nnav a:focus::after {\n  border-radius: var(--pfe-theme--surface--border-radius, 3px);\n  border: 2px var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--link, #06c);\n}\n\nnav a:hover {\n  color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\nnav a[active] {\n  color: var(--pfe-theme--color--surface--darkest, #151515);\n}\n\nnav ul ul {\n  display: flex;\n  flex-direction: column;\n  flex: 0;\n  margin: 0;\n  padding: 0;\n  border-left: none !important;\n  overflow-y: hidden;\n  transition: flex 1s linear;\n}\n\nnav ul ul li {\n  border-left: none !important;\n}\n\npfe-accordion pfe-accordion-header {\n  --pfe-theme--color--surface--border: transparent;\n  --pfe-theme--color--ui-base--on-dark: transparent;\n  --pfe-theme--color--ui-base: transparent;\n  position: sticky;\n  top: 0;\n}\n\npfe-accordion pfe-accordion-panel {\n  border-left-color: transparent;\n}\n\n@media (max-width: 991px) {\n  pfe-accordion {\n    border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled, #d2d2d2);\n  }\n  pfe-accordion pfe-accordion-header {\n    background-color: var(--pfe-theme--color--surface--lightest, #fff);\n    --context: var(--pfe-theme--color--surface--lightest--context, light);\n  }\n}\n\n@media (min-width: 992px) {\n  pfe-accordion pfe-accordion-header {\n    visibility: collapse !important;\n    display: none;\n  }\n  pfe-accordion pfe-accordion-panel {\n    visibility: collapse;\n    display: none;\n    opacity: 1;\n    display: block;\n  }\n  pfe-accordion pfe-accordion-panel > pfe-jump-links-nav {\n    width: 100%;\n    display: block;\n    visibility: visible;\n  }\n}\n\n:host([color=\"darkest\"]) {\n  --pfe-jump-links--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-jump-links--context: var(--pfe-theme--color--surface--darkest--context, dark);\n  border: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n}\n\n:host([color=\"darkest\"]) pfe-accordion-header,\n:host([color=\"darkest\"]) pfe-accordion-panel,\n:host([color=\"darkest\"]) button[aria-expanded=\"true\"] {\n  --pfe-accordion--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-accordion--context: var(--pfe-theme--color--surface--darkest--context, dark);\n  --pfe-jump-links--BackgroundColor: var(--pfe-theme--color--surface--darkest, #151515);\n  --pfe-jump-links--context: var(--pfe-theme--color--surface--darkest--context, dark);\n}\n\n:host([color=\"darkest\"]) .pfe-jump-links-nav__heading > h3,\n:host([color=\"darkest\"]) ::slotted([slot=\"pfe-jump-links-nav--heading\"]) {\n  color: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n:host([color=\"darkest\"]) ul {\n  border-left: var(--pfe-theme--surface--border-width, 1px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--text--muted, #6a6e73);\n}\n\n:host([color=\"darkest\"]) ul li[active] {\n  border-left: var(--pfe-theme--ui--border-width--active, 3px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--link--on-dark, #73bcf7);\n}\n\n:host([color=\"darkest\"]) ul a {\n  color: var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);\n}\n\n:host([color=\"darkest\"]) ul a:hover {\n  color: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n:host([color=\"darkest\"]) ul a[active] {\n  color: var(--pfe-theme--color--text--on-dark, #fff);\n}\n\n:host([color=\"darkest\"]) ul a:focus::after {\n  border-color: var(--pfe-theme--color--link--on-dark, #73bcf7);\n}\n\n:host([horizontal]) {\n  padding: 0;\n  top: var(--pfe-jump-links-panel--offset, 0);\n  width: 100%;\n}\n\n:host([horizontal]) nav {\n  min-height: calc(var(--pfe-theme--container-spacer, 16px) * 5.5);\n  background-color: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n  --context: var(--pfe-theme--color--surface--lighter--context, light);\n  display: flex;\n  position: relative;\n}\n\n:host([horizontal]) nav .pfe-jump-links-nav__heading {\n  display: none;\n}\n\n:host([horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n  position: absolute;\n  left: 0;\n  max-height: calc(var(--pfe-theme--container-spacer, 16px) * 3.5);\n  max-width: calc(var(--pfe-theme--container-spacer, 16px) * 14);\n  top: calc(var(--pfe-theme--container-spacer, 16px) * 1);\n}\n\n@media (max-width: 991px) {\n  :host([horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n    left: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--logo\"]) {\n    left: calc(var(--pfe-theme--container-spacer, 16px) * 4);\n  }\n}\n\n:host([horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n  position: absolute;\n  top: calc(var(--pfe-theme--container-spacer, 16px) * 1);\n}\n\n@media (max-width: 991px) {\n  :host([horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n    right: calc(var(--pfe-theme--container-spacer, 16px) * 2);\n  }\n}\n\n@media (min-width: 992px) {\n  :host([horizontal]) nav ::slotted([slot=\"pfe-jump-links-nav--cta\"]) {\n    right: calc(var(--pfe-theme--container-spacer, 16px) * 4);\n  }\n}\n\n:host([horizontal]) #container {\n  flex: 1;\n  display: flex;\n  justify-items: center;\n  flex-direction: column;\n}\n\n:host([horizontal]) ul {\n  border: none;\n  text-align: center;\n  flex: 1;\n  display: flex;\n  padding: 0;\n  width: auto;\n  margin: 0 auto;\n}\n\n:host([horizontal]) ul li {\n  padding: 0 calc(var(--pfe-theme--container-spacer, 16px) * 1.5);\n  display: flex;\n  height: calc(var(--pfe-theme--container-spacer, 16px) * 5);\n  align-items: center;\n  border-top: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  border-bottom: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) transparent;\n  border-left: none;\n  border-right: none;\n}\n\n:host([horizontal]) ul li[active] {\n  border-top: var(--pfe-theme--surface--border-width--heavy, 4px) var(--pfe-theme--surface--border-style, solid) var(--pfe-theme--color--ui-accent, #06c);\n}\n\n:host([horizontal]) ul a {\n  text-decoration: none;\n  color: var(--pfe-theme--color--ui-disabled--text, #6a6e73);\n}\n\n:host([horizontal]) ul a[active] {\n  color: var(--pfe-theme--color--text, #151515);\n}\n\n:host([horizontal]) ul a:hover {\n  color: var(--pfe-theme--color--text, #151515);\n}\n\n@media (max-width: 991px) {\n  :host([horizontal]) nav {\n    min-height: calc(var(--pfe-theme--container-spacer, 16px) * 5.5);\n    background-color: var(--pfe-theme--color--surface--lighter, #f0f0f0);\n    --context: var(--pfe-theme--color--surface--lighter--context, light);\n  }\n  :host([horizontal]) .pfe-jump-links-nav {\n    display: none;\n  }\n}\n\n:host([hidden]) {\n  display: none;\n}\n"],"sourceRoot":"../src"}