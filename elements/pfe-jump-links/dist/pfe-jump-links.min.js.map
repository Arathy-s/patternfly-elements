{"version":3,"file":"pfe-jump-links.min.js","sources":["../_temp/polyfills--pfe-jump-links.js","../_temp/pfe-jump-links-nav.js","../_temp/pfe-jump-links-panel.js","../_temp/pfe-jump-links.js"],"sourcesContent":["// @POLYFILL  NodeList.prototype.forEach\n// https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach#Polyfill\nif (window.NodeList && !NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach;\n}\n// @POLYFILL Number.prototype.isInteger\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger#polyfill\nif (window.Number && !Number.prototype.isInteger) {\n  Number.isInteger =\n    Number.isInteger ||\n    function(value) {\n      return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    };\n}\n\n// @POLYFILL Element.prototype.closest\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function(s) {\n    var el = this;\n\n    do {\n      if (Element.prototype.matches.call(el, s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\n// @POLYFILL Object.prototype.keys\nif (!Object.keys) {\n  Object.keys = function(obj) {\n    if (obj !== Object(obj)) throw new TypeError(\"Object.keys called on a non-object\");\n    var k = [],\n      p;\n    for (p in obj) if (Object.prototype.hasOwnProperty.call(obj, p)) k.push(p);\n    return k;\n  };\n  Object.keys.forEach = Array.forEach;\n}\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.9.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nclass PfeJumpLinksNav extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.9.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host([hide-label]) .pfe-jump-links-nav__heading>h3{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host{color:#151515!important}}:host{--context:var(--pfe-jump-links--context);-webkit-box-sizing:border-box;box-sizing:border-box;font-family:\"Red Hat Text\",RedHatText,Overpass,Overpass,Arial,sans-serif;font-family:var(--pfe-theme--font-family, \"Red Hat Text\", \"RedHatText\", \"Overpass\", Overpass, Arial, sans-serif);font-weight:400;font-weight:var(--pfe-theme--font-weight--normal,400);font-weight:400;display:block;position:sticky;top:1rem;top:var(--pfe-jump-links-nav--offset,var(--pfe-theme--container-spacer,1rem));padding-left:0;background-color:transparent;background-color:var(--pfe-jump-links--BackgroundColor,transparent);z-index:97;z-index:var(--pfe-theme--zindex--subnavigation,97)}@media (min-width:992px){:host{border:1px solid transparent;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) transparent;padding:0;padding:var(--pfe-jump-links__nav--Padding,0)}}:host([on=light]){--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}:host([on=dark]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host([sticky=false]){position:relative}.pfe-jump-links-nav__heading>h3{font-family:\"Red Hat Display\",RedHatDisplay,Overpass,Overpass,Arial,sans-serif;font-family:var(--pfe-theme--font-family--heading, \"Red Hat Display\", \"RedHatDisplay\", \"Overpass\", Overpass, Arial, sans-serif);font-size:.875rem;font-size:var(--pf-c-title--m-sm--FontSize,var(--pf-global--FontSize--sm,.875rem));line-height:1.5;line-height:var(--pfe-theme--line-height,1.5);font-weight:400;font-weight:var(--pfe-theme--font-weight--normal,400);color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42);text-transform:uppercase}.pfe-jump-links-nav__heading>h3:not(:last-child){margin-bottom:1rem;margin-bottom:var(--pfe-theme--content-spacer--heading--sm,1rem)}@media (max-width:991px){.pfe-jump-links-nav__heading>h3{visibility:hidden}}.pfe-jump-links-nav__heading>h3:not(:empty){padding-bottom:1rem;padding-bottom:var(--pfe-theme--container-padding,1rem);border-bottom:1px solid #d2d2d2;border-bottom:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}nav{visibility:visible;margin:0;list-style:none;padding:0}ul{padding:0;border-left:1px solid #d2d2d2;border-left:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2)}li{border-left:4px solid transparent;border-left:var(--pfe-theme--surface--border-width--heavy,4px) var(--pfe-theme--surface--border-style,solid) transparent;display:block;text-decoration:none;margin-left:calc(1px * -1);margin-left:calc(var(--pfe-theme--surface--border-width,1px) * -1)}li[active]{border-left-color:#06c;border-left-color:var(--pfe-jump-links--BorderColor,var(--pfe-theme--color--ui-accent,#06c))}a{position:relative;display:table;color:#6a6e73;color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);font-size:1rem;font-size:var(--pfe-jump-links--FontSize,var(--pf-global--FontSize--md,1rem));text-decoration:none;line-height:1.5;line-height:var(--pfe-theme--line-height,1.5);padding-top:calc(calc(1.5rem / 6) * 2);padding-top:calc(var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) * 2);padding-right:calc(calc(1.5rem / 3) * 2);padding-right:calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2);padding-bottom:calc(calc(1.5rem / 6) * 2);padding-bottom:calc(var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) * 2);padding-left:calc(calc(1.5rem / 3) * 2);padding-left:calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}.has-sub-section>a{padding-bottom:calc(1.5rem / 6);padding-bottom:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6))}.sub-section>a{margin-left:calc(1rem * .75);margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .75);font-size:calc(1rem * .85);font-size:calc(var(--pfe-jump-links--FontSize,var(--pf-global--FontSize--md,1rem)) * .85);padding:calc(1.5rem / 6) calc(calc(1.5rem / 3) * 2);padding:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}@media (min-width:992px){.sub-section>a{display:none}}.sub-section>a:last-child{padding-bottom:calc(1.5rem / 3);padding-bottom:var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3))}[aria-expanded=true] .sub-section>a{display:table;height:auto}a:focus{outline:0}a:focus::after{content:\"\";position:absolute;width:calc(100% - 4px);width:calc(100% - var(--pfe-theme--surface--border-width--heavy,4px));height:calc(100% - 4px);height:calc(100% - var(--pfe-theme--surface--border-width--heavy,4px));top:0;left:0;border-radius:3px;border-radius:var(--pfe-theme--surface--border-radius,3px);border:1px solid #06c;border:var(--pfe-theme--ui--focus-outline-width,1px) var(--pfe-theme--ui--focus-outline-style,solid) var(--pfe-broadcasted--link,#06c)}[active] a,a:hover{color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42)}ul ul{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:0;-ms-flex:0;flex:0;margin:0;padding:0;border-left:none!important;overflow-y:hidden;-webkit-transition:-webkit-box-flex 1s linear;transition:-webkit-box-flex 1s linear;transition:flex 1s linear;transition:flex 1s linear,-webkit-box-flex 1s linear,-ms-flex 1s linear}ul ul li{border-left:none!important}ul ul[aria-expanded=true]{-webkit-box-flex:1;-ms-flex:1;flex:1}:host{--pfe-accordion__panel-container--Padding:0}@media (max-width:767px){:host{--pfe-accordion__panel-container--Padding:20px}}pfe-accordion{z-index:97;z-index:var(--pfe-theme--zindex--subnavigation,97)}@media (max-width:991px){pfe-accordion{border:1px solid #d2d2d2;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2)}}pfe-accordion-header{--pfe-theme--color--surface--border:transparent;--pfe-theme--color--ui-base--on-dark:transparent;--pfe-theme--color--ui-base:transparent;position:sticky;top:0}@media (max-width:991px){pfe-accordion-header{background-color:#fff;background-color:var(--pfe-theme--color--surface--lightest,#fff);--context:var(--pfe-theme--color--surface--lightest--context, light)}}@media (min-width:992px){pfe-accordion-header{visibility:collapse!important;display:none}}pfe-accordion-panel{border-left-color:transparent;border-right:none}@media (min-width:992px){pfe-accordion-panel{visibility:collapse;display:none;opacity:1;display:block}pfe-accordion-panel>pfe-jump-links-nav{width:100%;display:block;visibility:visible}}:host([color=lightest]){background-color:#fff;background-color:var(--pfe-jump-links--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));--context:var(--pfe-theme--color--surface--lightest--context, light)}:host([color=darkest]){background-color:#151515;background-color:var(--pfe-jump-links--BackgroundColor,var(--pfe-theme--color--surface--darkest,#151515));--context:var(--pfe-theme--color--surface--darkest--context, dark);border:1px solid #6a6e73;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled--text,#6a6e73)}:host([horizontal]){padding:0;top:0;top:var(--pfe-jump-links-panel--offset,0);width:100%;z-index:98;z-index:var(--pfe-theme--zindex--navigation,98)}:host([horizontal]) nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding-left:calc(1rem * 2);padding-left:calc(var(--pfe-theme--container-spacer,1rem) * 2);padding-right:calc(1rem * 2);padding-right:calc(var(--pfe-theme--container-spacer,1rem) * 2)}@media (min-width:992px){:host([horizontal]) nav{padding-left:calc(1rem * 4);padding-left:calc(var(--pfe-theme--container-spacer,1rem) * 4);padding-right:calc(1rem * 4);padding-right:calc(var(--pfe-theme--container-spacer,1rem) * 4)}}:host([horizontal]) nav .pfe-jump-links-nav__heading>h3{-ms-flex-preferred-size:100%;flex-basis:100%;text-align:center}:host([horizontal]) nav ::slotted([slot=logo]){max-height:calc(1rem * 3.5);max-height:calc(var(--pfe-theme--container-spacer,1rem) * 3.5)}:host([horizontal]) nav ::slotted([slot=cta]),:host([horizontal]) nav ::slotted([slot=logo]){max-width:calc(1rem * 7);max-width:calc(var(--pfe-theme--container-spacer,1rem) * 7)}@media (min-width:992px){:host([horizontal]) nav ::slotted([slot=cta]),:host([horizontal]) nav ::slotted([slot=logo]){max-width:calc(1rem * 14);max-width:calc(var(--pfe-theme--container-spacer,1rem) * 14)}}:host([horizontal]) #container{-webkit-box-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-ms-flexbox;display:flex;justify-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}:host([horizontal]) ul{border:none;text-align:center;-webkit-box-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-ms-flexbox;display:flex;padding:0;width:auto;margin:0 auto}:host([horizontal]) ul li{padding:0 calc(1rem * 1.5);padding:0 calc(var(--pfe-theme--container-spacer,1rem) * 1.5);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-top:4px solid transparent;border-top:var(--pfe-theme--surface--border-width--heavy,4px) var(--pfe-theme--surface--border-style,solid) transparent;border-bottom:4px solid transparent;border-bottom:var(--pfe-theme--surface--border-width--heavy,4px) var(--pfe-theme--surface--border-style,solid) transparent;border-left:none;border-right:none}:host([horizontal]) ul li[active]{border-top:4px solid #06c;border-top:var(--pfe-theme--surface--border-width--heavy,4px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-accent,#06c)}:host([horizontal]) ul a{text-decoration:none;color:#6a6e73;color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);padding-top:1rem;padding-top:var(--pfe-jump-links__link--vertical-spacer,var(--pfe-theme--container-spacer,1rem));padding-right:1rem;padding-right:var(--pfe-jump-links__link--horizontal-spacer,var(--pfe-theme--container-spacer,1rem));padding-bottom:1rem;padding-bottom:var(--pfe-jump-links__link--vertical-spacer,var(--pfe-theme--container-spacer,1rem));padding-left:1rem;padding-left:var(--pfe-jump-links__link--horizontal-spacer,var(--pfe-theme--container-spacer,1rem))}:host([horizontal]) ul a:hover,[active] :host([horizontal]) ul a{color:#3c3f42;color:var(--pfe-broadcasted--text,#3c3f42)}@media (max-width:991px){:host([horizontal]) nav{min-height:calc(1rem * 5.5);min-height:calc(var(--pfe-theme--container-spacer,1rem) * 5.5);background-color:#f0f0f0;background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);--context:var(--pfe-theme--color--surface--lighter--context, light)}:host([horizontal]) .pfe-jump-links-nav{display:none}}:host([hidden]){display:none} /*# sourceMappingURL=pfe-jump-links-nav.min.css.map */</style>\n${this.horizontal ? `\n\n<nav>\n  <slot class=\"pfe-jump-links-nav__heading\" name=\"heading\">\n    <h3 id=\"heading\">${this.srText ? this.srText : \"Jump to section\"}</h3>\n  </slot>\n  <slot class=\"pfe-jump-links-nav__logo\" name=\"logo\"></slot>\n  <div id=\"container\"></div>\n  <slot class=\"pfe-jump-links-nav__cta\" name=\"cta\"></slot>\n</nav>\n` : `\n\n<pfe-accordion>\n  <pfe-accordion-header>\n    <h3>${this.srText ? this.srText : \"Jump to section\"}</h3>\n  </pfe-accordion-header>\n  <pfe-accordion-panel>\n    <nav>\n      <slot class=\"pfe-jump-links-nav__heading\" name=\"heading\">\n        <h3 id=\"heading\">${this.srText ? this.srText : \"Jump to section\"}</h3>\n      </slot>\n      <slot class=\"pfe-jump-links-nav__logo\" name=\"logo\"></slot>\n      <div id=\"container\"></div>\n      <slot class=\"pfe-jump-links-nav__cta\" name=\"cta\"></slot>\n    </nav>\n  </pfe-accordion-panel>\n</pfe-accordion>`}`;\n  }\n\n  static get tag() {\n    return \"pfe-jump-links-nav\";\n  }\n\n  get templateUrl() {\n    return \"pfe-jump-links-nav.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-jump-links-nav.scss\";\n  }\n\n  static get events() {\n    return {\n      upgrade: `${this.tag}:upgraded`\n    };\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      autobuild: {\n        title: \"Autobuild\",\n        type: Boolean\n      },\n      horizontal: {\n        title: \"Horizontal\",\n        type: Boolean,\n        observer: \"_horizontalHandler\"\n      },\n      srText: {\n        title: \"Navigation label\",\n        type: String,\n        default: \"Jump to section\"\n      },\n      color: {\n        title: \"Color\",\n        type: String,\n        values: [\"lightest\", \"lighter\", \"darkest\"]\n      },\n      hideLabel: {\n        title: \"Hide label\",\n        type: Boolean\n      },\n      nesting: {\n        title: \"Support nested headings\",\n        type: Boolean,\n        default: true\n      },\n      // @TODO: Deprecated in 2.0\n      oldAutobuild: {\n        alias: \"autobuild\",\n        attr: \"pfe-c-autobuild\"\n      },\n      // @TODO: Deprecated in 2.0\n      oldHorizontal: {\n        alias: \"horizontal\",\n        attr: \"pfe-c-horizontal\"\n      },\n      // @TODO: Deprecated in 2.0\n      oldColor: {\n        alias: \"color\",\n        attr: \"pfe-color\"\n      }\n    };\n  }\n\n  static get observerSettings() {\n    return {\n      childList: true,\n      subtree: true,\n      characterData: true\n    };\n  }\n\n  // Sets up backwards compatibility for tag prefixed slot names\n  get logo() {\n    return this.getSlot(\"logo\") || this.getSlot(`${this.tag}--logo`);\n  }\n\n  get cta() {\n    return this.getSlot(\"link\") || this.getSlot(`${this.tag}--link`);\n  }\n\n  get heading() {\n    return this.getSlot(\"heading\") || this.getSlot(`${this.tag}--heading`);\n  }\n\n  constructor() {\n    super(PfeJumpLinksNav, { type: PfeJumpLinksNav.PfeType, delayRender: true });\n\n    // Do not render this in IE11\n    if (this.isIE11) {\n      this.setAttribute(\"hidden\", \"\");\n      return;\n    }\n\n    // Global pointer to the associated panel\n    // If this is empty, we know that no panel exists for this nav\n    this.panel;\n\n    // Cache for build()\n    this._building;\n\n    // Global definition for link elements in the ShadowDOM\n    this.links;\n    this.panelRefs = [];\n    this.activeLinks = [];\n\n    // Public API\n    this.build = this.build.bind(this);\n    this.validateData = this.validateData.bind(this);\n    this.getLinkById = this.getLinkById.bind(this);\n    this.closeAccordion = this.closeAccordion.bind(this);\n    this.rebuild = this.rebuild.bind(this);\n    this.setActive = this.setActive.bind(this);\n    this.isActive = this.isActive.bind(this);\n    this.removeActive = this.removeActive.bind(this);\n    this.removeAllActive = this.removeAllActive.bind(this);\n    this.upgradeA11y = this.upgradeA11y.bind(this);\n    this.upgradeA11yListItem = this.upgradeA11yListItem.bind(this);\n    this.connectPanel = this.connectPanel.bind(this);\n\n    //-- Internal-only methods\n    this._buildItem = this._buildItem.bind(this);\n    this._isValidLightDom = this._isValidLightDom.bind(this);\n    this._copyListToShadow = this._copyListToShadow.bind(this);\n    this._connectLightDOM = this._connectLightDOM.bind(this);\n    // this._reportHeight = this._reportHeight.bind(this);\n    this._init = this._init.bind(this);\n\n    // Event handlers\n    this._clickHandler = this._clickHandler.bind(this);\n    this._upgradePanelHandler = this._upgradePanelHandler.bind(this);\n    this._activeItemHandler = this._activeItemHandler.bind(this);\n    this._horizontalHandler = this._horizontalHandler.bind(this);\n    this._observer = new MutationObserver(this._init);\n\n    // Note: We need the panel connection even if we're not using autobuild to determine where to scroll on click\n    // document.body.addEventListener(\"pfe-jump-links-panel:upgraded\", this._upgradePanelHandler);\n\n    // Start listening for if the panel has changed\n    // @TODO: add a specialized handler for the change event\n    // document.body.addEventListener(\"pfe-jump-links-panel:change\", this._init);\n\n    // If the active item changes, fire the handler\n    // document.body.addEventListener(\"pfe-jump-links-panel:active-navItem\", this._activeItemHandler);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Do not render this in IE11\n    if (this.isIE11) {\n      this.setAttribute(\"hidden\", \"\");\n      return;\n    }\n\n    // Initialize the navigation\n    this._init();\n    this.render();\n\n    // Trigger the mutation observer\n    // if (!this.autobuild) this._observer.observe(this, PfeJumpLinksNav.observerSettings);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // this._observer.disconnect();\n\n    // document.body.removeEventListener(\"pfe-jump-links-panel:upgraded\", this._upgradePanelHandler);\n    // document.body.removeEventListener(\"pfe-jump-links-panel:active-navItem\", this._activeItemHandler);\n    // document.body.removeEventListener(\"pfe-jump-links-panel:change\", this._init);\n\n    this.links.forEach(link => link.removeEventListener(\"click\", this._clickHandler));\n  }\n\n  getLinkById(id) {\n    if (!id) return;\n\n    let getLink = function(id) {\n      // Check if the shadow template contains links\n      const links = this.shadowRoot.querySelectorAll(\"#container li > a\");\n      if (!links) return;\n      const filter = [...links].filter(item => item.hash === `#${id}`);\n\n      if (filter.length <= 0) return;\n      // @TODO This is too noisy\n      // this.warn(`No link was found with #${id} in the navigation links.`);\n\n      return filter[0];\n    };\n\n    let link = getLink(id);\n\n    // @TODO Post-IE11; convert to async / await\n    if (this._building) {\n      this._building.then(() => {\n        link = getLink(id);\n      });\n    }\n\n    return link;\n  }\n\n  closeAccordion() {\n    this.shadowRoot.querySelector(\"pfe-accordion\").collapseAll();\n  }\n\n  rebuild(navset) {\n    // Capture sections from the panel if not provided\n    // This is helpful for when this is used as an API\n    // re: document.querySelector(\"pfe-jump-links-nav\").rebuild();\n    if (!navset) {\n      if (this.panel.tagName === \"pfe-jump-links-panel\") navset = this.panel.sectionRefs;\n      else return;\n    }\n\n    this.build(navset);\n  }\n\n  setActive(link) {\n    if (!link) return;\n\n    const listItem = link.closest(\"li\");\n\n    const checkForAncestors = item => {\n      item.setAttribute(\"active\", \"\");\n\n      // if (item.classList.contains(\"has-sub-section\")) {\n      //   item.querySelector(\":scope > ul\").setAttribute(\"aria-expanded\", \"true\");\n      // }\n\n      const parentItem = item.parentElement.closest(\"li\");\n      if (!parentItem || parentItem === item) return;\n\n      if (parentItem && item.classList.contains(\"sub-section\")) {\n        parentItem.setAttribute(\"active\", \"\");\n        parentItem.querySelector(\":scope > ul\").setAttribute(\"aria-expanded\", \"true\");\n        item.tabindex = \"0\";\n      }\n\n      checkForAncestors(parentItem);\n    };\n\n    checkForAncestors(listItem);\n  }\n\n  isActive(link) {\n    if (!link) return false;\n    const listItem = link.closest(\"li\");\n    return listItem.hasAttribute(\"active\");\n  }\n\n  removeActive(link) {\n    if (!link) return;\n\n    const listItem = link.closest(\"li\");\n    listItem.removeAttribute(\"active\");\n\n    const checkForAncestors = item => {\n      // parentElement ensures the query doesn't return itself!\n      const parentItem = item.parentElement.closest(\"li\");\n      if (!parentItem) return;\n\n      if (item.classList.contains(\"sub-section\")) {\n        // Only remove status from parent if all children are removed\n        const parentLink = parent.querySelector(\":scope > a\");\n        if (this.isActive(parentLink)) {\n          let activeChildren = false;\n          parent.querySelectorAll(\"ul > li > a\").forEach(link => {\n            if (this.isActive(link)) activeChildren = true;\n          });\n\n          // If none of the children are active, remove the active settings\n          if (!activeChildren) {\n            parent.removeAttribute(\"active\");\n            parent.setAttribute(\"aria-expanded\", \"false\");\n          }\n        }\n      } else if (item.classList.contains(\"has-sub-section\")) {\n        item.setAttribute(\"aria-expanded\", \"false\");\n      }\n\n      item.removeAttribute(\"active\");\n\n      if (item.classList.contains(\"has-sub-section\")) {\n        item.querySelector(\":scope > ul\").setAttribute(\"aria-expanded\", \"false\");\n      }\n\n      if (parentItem && item.classList.contains(\"sub-section\")) {\n        parentItem.removeAttribute(\"active\");\n        parentItem.closest(\"ul\").setAttribute(\"aria-expanded\", \"false\");\n        item.tabindex = \"-1\";\n      }\n\n      checkForAncestors(parentItem);\n    };\n\n    checkForAncestors(listItem);\n  }\n\n  removeAllActive() {\n    this.activeLinks.forEach(link => this.removeActive(link));\n    // Empty out the active links pointer\n    this.activeLinks = [];\n  }\n\n  // @TODO: add a link to the WCAG page about role=\"tree\"\n  upgradeA11yListItem(item, isSubSection = false) {\n    // Create the link to the section\n    const link = item.querySelector(\"a\");\n    link.classList.add(\"pfe-jump-links-nav__link\");\n\n    item.className = \"pfe-jump-links-nav__item\"; // Goes on the li tag\n    // List items get a role of \"treeitem\"\n    item.role = \"treeitem\";\n    // List items that are visible should be focusable\n    item.tabindex = \"0\";\n\n    if (isSubSection) {\n      item.classList.add(\"sub-section\");\n\n      // Subsections are not visible and thus should not be focusable\n      link.tabindex = \"-1\";\n    }\n\n    // If active links is initiated before the nav is upgrade, active the link\n    if (this.activeLinks.length > 0 && this.activeLinks.includes(link)) this.setActive(link);\n\n    // Build out the nested group\n    let nested = item.querySelector(\":scope > ul\");\n    if (nested) {\n      nested.role = \"group\";\n\n      const children = nested.querySelectorAll(\":scope > li\");\n      if (children.length > 0) {\n        item.classList.add(\"has-sub-section\");\n        item.setAttribute(\"aria-expanded\", \"false\");\n        children.forEach(child => this.upgradeA11yListItem(child, true));\n      }\n    }\n  }\n\n  upgradeA11y() {\n    // Turn off the observer while we update the DOM\n    // if (!this.autobuild) this._observer.disconnect();\n\n    // Get the light DOM\n    const parentList = this.querySelector(\"ul\") || this.querySelector(\"ol\");\n    if (!parentList) return;\n\n    // Loop through the markup and apply the appropriate tags\n    parentList.classList.add(\"pfe-jump-links-nav\");\n    // Note: only the first UL gets the tree role\n    parentList.role = \"tree\";\n\n    // Check to see if there is a heading tag preceeding this list\n    const label = parentList.closest(\"h1[id],h2[id],h3[id],h4[id],h5[id],h6[id]\");\n    if (label) parentList.setAttribute(\"aria-labelledby\", label.id);\n\n    // Iterate over each list item that is a direct child of the parentList\n    const listItems = parentList.querySelectorAll(\":scope > li\");\n    listItems.forEach(item => this.upgradeA11yListItem(item));\n\n    // Trigger the mutation observer\n    // if (!this.autobuild) this._observer.observe(this, PfeJumpLinksNav.observerSettings);\n  }\n\n  /**\n   * Connect the nav to it's associated panel after upgrade\n   * Note: this no longer has to be `pfe-jump-links-panel`\n   */\n  connectPanel(panel) {\n    this.panel = panel;\n\n    // If the panel does not have a scrolltarget attribute, go ahead and add it\n    if (!this.panel.hasAttribute(\"scrolltarget\")) this.panel.setAttribute(\"scrolltarget\", this.id);\n\n    // Set up a pointer to this nav element in the panel if it doesn't already exist\n    if (!this.panel.nav) this.panel.nav = this;\n\n    // Fire rebuild if autobuild is set\n    if (this.autobuild) this.rebuild();\n  }\n\n  /**\n   * Process the upgrade panel custom event to connect the panel to this navigation element\n   */\n  _upgradePanelHandler(evt) {\n    if (!evt && !evt.detail) return;\n\n    let panel = evt.detail.panel;\n\n    // If the target does not match the id of this nav\n    // Return but don't remove the event\n    if (!(panel && panel.scrolltarget === this.id)) return;\n\n    // Wire up the panel to this element\n    this.connectPanel(panel);\n\n    // Stop listening for the panel\n    document.body.removeEventListener(\"pfe-jump-links-panel:upgraded\", this._upgradePanelHandler);\n\n    // Stop the panel from listening for the nav upgrade (prevents duplication)\n    document.body.removeEventListener(PfeJumpLinksNav.events.upgrade, this.panel._connectToNav);\n  }\n\n  _horizontalHandler(oldVal, newVal) {\n    if (oldVal === newVal) return;\n\n    // @TODO await updateComplete re:lit\n    setTimeout(() => {\n      this.cssVariable(`${this.tag}--Height--actual`, `${this.clientHeight}px`, document.body);\n    }, 1000);\n  }\n\n  /*\n   * Build out a list item with the correct attributes and markup\n   * reference: https://www.w3.org/WAI/GL/wiki/Using_ARIA_trees\n   */\n  _buildItem(data) {\n    let item = document.createElement(\"li\");\n\n    // Create the link to the section\n    let link = document.createElement(\"a\");\n    link.href = `#${data.id}`;\n    link.textContent = data.label;\n\n    // Add the link to the list\n    item.appendChild(link);\n\n    return item;\n  }\n\n  _buildList(items, id = null) {\n    if (items.length <= 0) return;\n\n    let wrapper = document.createElement(\"ul\");\n    if (id) wrapper.setAttribute(\"aria-labelledby\", id);\n\n    // Loop through each item\n    items.forEach(item => {\n      // Pass the data object to the item builder\n      let result = this._buildItem(item);\n\n      // If there are children, set the result to the new list\n      // Otherwise, the result is the new list item\n      if (item.children && item.children.length > 0) {\n        // Pass the children array to a nested list call\n        let nested = this._buildList(item.children);\n        result.appendChild(nested);\n      }\n\n      wrapper.appendChild(result);\n    });\n\n    return wrapper;\n  }\n\n  /**\n   * Build out a navigation element based on data from the panel object\n   * @param {Array} set An array of section details\n   * @returns {Promise} When the navigation is done being built\n   * @TODO Post-IE11: convert to async / await\n   **/\n  build(set = this.data || []) {\n    // If there is no provided array and the global data pointer is empty, escape\n    if (!set) return;\n\n    let items = this.validateData(set);\n\n    // Create the list\n    let wrapper = this._buildList(items, `heading`);\n    console.log(wrapper);\n    if (!wrapper.outerHTML) return;\n\n    // Turn off the observer while we update the DOM\n    if (this._observer) this._observer.disconnect();\n\n    // Add the new content to the light DOM\n    this.innerHTML = wrapper.outerHTML;\n\n    // If it has not yet been rendered, fire it now\n    if (!this.rendered) this.render();\n\n    // Copy the light DOM to the shadow DOM\n    // Returns a NodeList of links in the shadow DOM navigation\n    this._copyListToShadow().then(links => this._connectLightDOM(links));\n\n    // Trigger the mutation observer\n    if (this._observer) this._observer.observe(this, PfeJumpLinksNav.observerSettings);\n  }\n\n  /**\n   * Validate the data array\n   * @param {Array} set\n   */\n  validateData(set = []) {\n    if (set.length === 0) return;\n\n    let items = [];\n    // Expect:\n    //-- id: \"sectionOne\" (required)\n    //-- label: \"Section 1\" (required)\n    //-- ref: h3#sectionOne.pfe-jump-links-panel__section (optional)\n    //-- isVisible: false (optional)\n    //-- childOf: null (optional)\n    Object.keys(set).forEach(key => {\n      let data = set[key];\n\n      if (!data.id && !data.ref) {\n        this.warn(`Objects requires at least an ID or a pointer to the heading element.`);\n        return;\n      }\n\n      if (!data.label) {\n        this.warn(`Objects requires a label for the heading link.`);\n        return;\n      }\n\n      // If the ID was provided but not a reference, capture it from the DOM\n      if (data.id && !data.ref) {\n        data.ref = document.querySelector(`#${data.id}`);\n      }\n\n      if (!data.ref) {\n        this.warn(\n          `If pointing to content inside a ShadowRoot, please provide the ref key with a pointer to that heading element.`\n        );\n        return;\n      }\n\n      if (data.childOf) {\n        if (!this.horizontal && !this.nesting) {\n          let lastItem = items[items.length - 1];\n          if (lastItem)\n            lastItem.children.push({\n              id: data.id,\n              ref: data.ref,\n              isVisible: data.isVisible || false,\n              label: data.label,\n              children: []\n            });\n        } else {\n          this.warn(`Horizontal jump links do not support nested sections. This item was skipped: #${data.id}`);\n        }\n      } else {\n        items.push({\n          id: data.id,\n          ref: data.ref,\n          isVisible: data.isVisible || false,\n          label: data.label,\n          children: []\n        });\n      }\n    });\n\n    return items;\n  }\n\n  /*\n   * Validate the light DOM provided for the manually coded navigation\n   */\n  _isValidLightDom() {\n    if (!this.hasLightDOM() || !(this.querySelector(\"ul\") || this.querySelector(\"ol\"))) {\n      this.warn(`You must have a <ul> or <ol> tag in the light DOM or use the autobuild attribute.`);\n      return false;\n    }\n\n    if ((this.logo || this.cta) && !this.horizontal) {\n      this.warn(`logo and link slots are %cnot%c supported in vertical jump links`, \"font-style: italic\", \"\");\n    }\n\n    return true;\n  }\n\n  /*\n   * Copy the light DOM list to the shadow DOM for control of styling\n   */\n  _copyListToShadow() {\n    return new Promise((resolve, reject) => {\n      const menu = this.querySelector(\"ul\") || this.querySelector(\"ol\");\n\n      if (!menu) reject(`No menu elements (ul or ol) could be foundin the light DOM.`);\n\n      // Upgrade the accessibility of the light DOM provided\n      // including attaching appropriate classes\n      this.upgradeA11y();\n\n      if (!this.rendered) this.render();\n\n      // Copy the menu into the shadow DOM\n      this.shadowRoot.querySelector(\"#container\").innerHTML = menu.outerHTML;\n\n      // Return a NodeList of the links\n      resolve(this.shadowRoot.querySelectorAll(\"#container li > a\"));\n    });\n  }\n\n  /*\n   * Initialize the navigation element\n   */\n  _init() {\n    // Set up backwards compatibility for slots with old tag-prefixed naming\n    [\"logo\", \"cta\", \"heading\"].forEach(region => {\n      this.getSlot(`${this.tag}--${region}`).forEach(slot => {\n        slot.setAttribute(\"slot\", region);\n      });\n    });\n\n    // If this is a manually build component but it doesn't have valid light DOM, return\n    // Note: The _isValidLightDOM function throws the necessary warnings, no warnings needed here\n    if (!this.autobuild && !this._isValidLightDom()) return;\n\n    // Capture the light DOM content from the panel\n    // passing that to the build navigation method to render the markup\n    if (this.autobuild) {\n      // @TODO Set up an API for this instead\n      if (this.panel) this.build(this.panel.sectionRefs);\n      else return;\n    }\n  }\n\n  _connectLightDOM(links) {\n    // Recapture the panel references; start by emptying it\n    this.panelRefs = [];\n\n    // Attach event listeners to each link in the shadow DOM\n    links.forEach(link => {\n      // Add a click event listener\n      link.addEventListener(\"click\", this._clickHandler);\n\n      // Capture the panel reference\n      if (this.panel) {\n        const ref = this.panel.getRefById(link.hash.replace(/^#/, \"\"));\n        if (ref) this.panelRefs.push(ref);\n      }\n\n      // Pass information back the panels when the navigation was manually built\n      // if (!this.autobuild) {\n      //   console.log(this.panelRefs);\n      // }\n    });\n\n    // Create a global pointer for the link elements\n    this.links = links;\n\n    // If the upgrade was successful, remove the hidden attribute\n    if (links.length > 0) this.removeAttribute(\"hidden\");\n  }\n\n  /*\n   * Handle on click events\n   */\n  _clickHandler(evt) {\n    evt.preventDefault();\n\n    let entry;\n\n    // Throw a warning if the returned value is using something other than px for units\n    const getValue = variableName => {\n      const value = this.cssVariable(variableName);\n      if (!value) return;\n      if (!Number.isInteger(Number(value)) && !value.match(/px$/)) {\n        this.warn(\n          `Using an integer with a unit (other than px) is not supported for custom property ${variableName}. Received ${value}. The component strips the unit using parseInt(). For example, 1rem would become 1 and behave as if you had entered 1px.`\n        );\n      }\n      return value;\n    };\n\n    // Note that the offset attribute will override a value stored in the offset CSS variable\n    let offsetInput = getValue(`${this.tag}--offset`) || 0;\n    // Capture the height of the navigation component\n    let navigation = getValue(`pfe-navigation--Height--actual`) || 0;\n    // Capture the height of the navigation for jump links, including the older, deprecated --pfe-jump-links--nav-height\n    let jumpLinksNav = getValue(`pfe-jump-links-nav--Height--actual`) || getValue(`pfe-jump-links--nav-height`) || 0;\n\n    // The total offset value is the user-provided offset plus the height of the navigation plus the height of the jump links navigation\n    let offset = parseInt(offsetInput) + parseInt(navigation) + parseInt(jumpLinksNav) + 8 || 200;\n\n    // Fire scroll event to the section referenced\n    if (!evt || !evt.path || !evt.path[0] || !evt.path[0].hash) return;\n\n    const id = evt.path[0].hash;\n    const key = id.replace(/^#/, \"\");\n\n    if (!id) return;\n\n    if (this.panel) {\n      const refs = this.panel.sectionRefs;\n      const capture = Object.values(refs).filter(data => data.id === key);\n      if (capture.length === 1) entry = capture[0].ref;\n\n      // Fallback to any ID reference from the panel light or shadow DOM\n      if (!entry) entry = this.panel.querySelector(id) || this.panel.shadowRoot.querySelector(id);\n    }\n\n    // Fallback to any ID reference from the document\n    if (!entry) entry = document.querySelector(id);\n\n    if (!entry) {\n      this.warn(`A corresponding panel was not found for ${id}`);\n      return;\n    }\n\n    // If there are no attached panels, let the default click behavior do it's thing\n    /* JavaScript MediaQueryList Interface */\n    let behavior = \"smooth\";\n    if (window.matchMedia(\"(prefers-reduced-motion)\").matches) behavior = \"auto\";\n\n    // Set up the scroll animation\n    if (this.panel) offset = this.panel.offsetValue;\n\n    window.scrollTo({\n      top: entry.getBoundingClientRect().top + window.pageYOffset - offset,\n      behavior: behavior\n    });\n\n    // @TODO: Create JSON tokens for media query breakpoints\n    // If the window is less than 992px, escape (do nothing)\n    if (window.matchMedia(\"(min-width: 992px)\").matches) return;\n\n    // Close the accordion after 750ms\n    setTimeout(this.closeAccordion, 750);\n  }\n\n  /*\n   * Sets a navigation item to active when event surfaced from panel\n   */\n  _activeItemHandler(evt) {\n    // Capture the panel that fired the event\n    const panel = evt.detail.panel;\n    // @TODO Use this array to highlight all visible items\n    const ids = evt.detail.activeIds;\n\n    // If it's not the right panel, get out of here!\n    if (!panel || (panel && panel.scrolltarget !== this.id)) return;\n\n    // This this is an autobuild component and the nav is complete, process the activation\n    if (!this.autobuild || (this.autobuild && this._building)) {\n      // If the array is empty, clear active state\n      if (!ids || ids.length === 0) {\n        this.removeAllActive();\n        return;\n      }\n\n      // Capture the first item in the set\n      const firstId = ids[0];\n\n      if (!firstId) return;\n\n      // Get the link by ID\n      const link = this.getLinkById(firstId);\n      const ref = panel.getRefById(firstId);\n\n      if (!link) return;\n\n      // If this is already an active link, do nothing\n      if (this.activeLinks.length > 0) {\n        if (this.activeLinks.filter(active => active === link).length > 0) return;\n\n        // If there are active links in the pointer, clear the array\n        this.removeAllActive();\n      }\n\n      // Set the activeLinks array to the new link element\n      this.activeLinks.push(link);\n\n      // const checkForAncestors = (ref) => {\n      //   if (!ref.childOf) return;\n\n      //   // Get the link for the parent element\n      //   const parentLink = this.getLinkById(ref.childOf);\n      //   this.activeLinks.unshift(parentLink);\n\n      //   // Get the reference to the parent\n      //   const parentRef = panel.getRefById(ref.childOf);\n      //   checkForAncestors(parentRef);\n      // };\n\n      // // Kick off the parent check\n      // if (ref) checkForAncestors(ref);\n\n      // Activate the link\n      this.activeLinks.map(link => this.setActive(link));\n    } else setTimeout(this._activeItemHandler(evt), 100);\n  }\n}\n\nexport default PfeJumpLinksNav;\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.9.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nclass PfeJumpLinksPanel extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.9.0\";\n  }\n\n  static get tag() {\n    return \"pfe-jump-links-panel\";\n  }\n\n  // No template or sass files because it's just a default slot\n  get html() {\n    return `<style>:host { display: block; } :host([hidden]) { display: none; }</style><slot></slot>`;\n  }\n\n  static get events() {\n    return {\n      change: `${this.tag}:change`,\n      activeNavItem: `${this.tag}:active-navItem`,\n      upgrade: `${this.tag}:upgraded`\n    };\n  }\n\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      offset: {\n        title: \"Offset\",\n        type: Number,\n        observer: \"_offsetChanged\"\n      },\n      scrolltarget: {\n        title: \"Scroll target\",\n        type: String\n      },\n      // @TODO: Deprecated in 1.0\n      oldOffset: {\n        alias: \"offset\",\n        attr: \"pfe-c-offset\"\n      },\n      // @TODO: Deprecated in 1.0\n      oldScrolltarget: {\n        alias: \"scrolltarget\",\n        attr: \"pfe-c-scrolltarget\"\n      }\n    };\n  }\n\n  static get observerSettings() {\n    return {\n      childList: true,\n      subtree: true,\n      characterData: true\n    };\n  }\n\n  get offsetValue() {\n    // Throw a warning if the returned value is using something other than px for units\n    const getValue = variableName => {\n      const value = this.cssVariable(variableName);\n      if (!value) return;\n      if (!Number.isInteger(Number(value)) && !value.match(/px$/)) {\n        this.warn(\n          `Using an integer with a unit (other than px) is not supported for custom property ${variableName}. Received ${value}. The component strips the unit using parseInt(). For example, 1rem would become 1 and behave as if you had entered 1px.`\n        );\n      }\n      return value;\n    };\n\n    // Note that the offset attribute will override a value stored in the offset CSS variable\n    let offsetInput = this.offset || getValue(`${this.tag}--offset`) || 0;\n    // Capture the height of the navigation component\n    let navigation = getValue(`pfe-navigation--Height--actual`) || 0;\n    // Capture the height of the navigation for jump links, including the older, deprecated --pfe-jump-links--nav-height\n    let jumpLinksNav = getValue(`pfe-jump-links-nav--Height--actual`) || getValue(`pfe-jump-links--nav-height`) || 0;\n\n    // The total offset value is the user-provided offset plus the height of the navigation plus the height of the jump links navigation\n    return parseInt(offsetInput) + parseInt(navigation) + parseInt(jumpLinksNav) + 8 || 200;\n  }\n\n  constructor() {\n    super(PfeJumpLinksPanel, { type: PfeJumpLinksPanel.PfeType });\n\n    // Global pointer to the associated navigation\n    // If this is empty, we know that no nav is attached to this panel yet\n    this.nav = undefined;\n\n    // Placeholders for the sections list and reference object\n    // This global variable stores a NodeList of all the sections\n    this.sections = [];\n    // This global variable stores an object using IDs as the keys\n    // for each section in the panel, these objects are built using `_sectionReference`\n    this.sectionRefs = {};\n\n    // Connect the internal only methods to the this context\n    this._connectToNav = this._connectToNav.bind(this);\n    this._sectionReference = this._sectionReference.bind(this);\n    this._parseSections = this._parseSections.bind(this);\n    this._init = this._init.bind(this);\n    this._attachIntersectionObservers = this._attachIntersectionObservers.bind(this);\n    this._intersectionCallback = this._intersectionCallback.bind(this);\n    this._resizeHandler = this._resizeHandler.bind(this);\n\n    // Define the observers\n    this._observer = new MutationObserver(this._init);\n    this._intersectionObserver = new IntersectionObserver(this._intersectionCallback, {\n      rootMargin: `${this.offsetValue}px 0px 0px 0px`,\n      // Threshold is an array of intervals that fire intersection observer event\n      // @TODO: Update this to be a dynamic property [0, 0.01, 0.02, 0.03, 0.04, ...]\n      threshold: Array(100)\n        .fill()\n        .map((_, i) => i / 100 || 0)\n    });\n    this._resizeObserver = new ResizeObserver(this._resizeHandler);\n\n    // Set up a listener for the paired navigation element, if one is not already attached\n    if (!this.nav) document.body.addEventListener(\"pfe-jump-links-nav:upgraded\", this._connectToNav);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Fire the initalize method and when complete, announce the upgrade to the document\n    this._init();\n\n    // Once the upgrade is complete, emit an event announcing the panel upgrade\n    if (this.sections) {\n      this.emitEvent(PfeJumpLinksPanel.events.upgrade, {\n        detail: {\n          panel: this,\n          sections: this.sections,\n          navigation: this.sectionRefs\n        }\n      });\n    }\n\n    // Set up the mutation observer to watch the Jump Links Panel for updates\n    this._observer.observe(this, PfeJumpLinksPanel.observerSettings);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._observer.disconnect();\n    this._resizeObserver.disconnect();\n\n    this.querySelectorAll(\"[section-container]\").forEach(container => this._intersectionObserver.disconnect(container));\n\n    document.body.removeEventListener(\"pfe-jump-links-nav:upgraded\", this._connectToNav);\n  }\n\n  getRefById(id) {\n    let capture = Object.values(this.sectionRefs).filter(data => data.id === id);\n    return capture[0];\n  }\n\n  updateActiveState() {\n    const visible = Object.values(this.sectionRefs)\n      // We want only sections that are visible\n      .filter(section => section.isVisible);\n\n    // Sort the items by largest intersectionRatio which will be the item\n    // that is the most visible on the screen.\n    // @todo we could take into account other variables like how big the section is on the page\n    // .sort((a, b) => a.intersectionRatio - b.intersectionRatio)\n    // .reverse()\n\n    // Check if the first item has a large enough ratio visible; if not, remove it\n    if (visible.length > 2 && visible[0].intersectionRatio < 1 && visible[1].intersectionRatio > 0.5) {\n      visible.shift();\n    }\n\n    this.emitEvent(PfeJumpLinksPanel.events.activeNavItem, {\n      detail: {\n        panel: this,\n        activeIds: visible.map(item => item.id) // All we need is the section id\n      }\n    });\n  }\n\n  /**\n   * Connect the panel to it's associated navigation after upgrade\n   */\n  _connectToNav(evt) {\n    // If the target does not match the id of this panel\n    if (!(evt.detail && evt.detail.nav && evt.detail.nav.id === this.scrolltarget)) {\n      // Return but don't remove the event\n      return;\n    }\n\n    // Assign the pointer to the nav reference\n    this.nav = evt.detail.nav;\n\n    // If a nav element is already defined, return without additional parsing\n    if (this.nav) {\n      // Stop listening for the navigation\n      document.body.removeEventListener(\"pfe-jump-links-nav:upgraded\", this._connectToNav);\n\n      // Stop the nav from listening for the panel to prevent duplication\n      document.body.removeEventListener(PfeJumpLinksPanel.events.upgrade, this.nav._upgradePanelHandler);\n\n      // Add the offset variable to the navigation component\n      this.cssVariable(`--pfe-jump-links-nav--offset`, `${this.offsetValue}px`, this.nav);\n\n      // If the nav does not have a pointer to this panel yet, add one\n      if (!this.nav.panel) {\n        this.nav.connectPanel(this);\n\n        // Fire the intialization\n        this.nav._init();\n      } else {\n        // If the navigation is set to autobuild, fire the build\n        if (this.nav.autobuild) this.nav.rebuild(this.sectionRefs);\n      }\n    }\n  }\n\n  /**\n   * Build an object reference to a section\n   */\n  _sectionReference(section) {\n    return {\n      id: section.id,\n      ref: section,\n      isVisible: false,\n      // @TODO Document the nav-label in the README\n      label: (section.getAttribute(\"nav-label\") || section.textContent).trim(),\n      childOf: null\n    };\n  }\n\n  // Note: sections is type array\n  _parseSections(sections, sets = [], type = \"classes\", lastItem = {}) {\n    if (sections.length === 0) return sets;\n\n    const section = sections[0];\n\n    // If the section provided does not have the correct classes applied OR\n    // If this section does not use an h-tag or is missing an ID\n    // Remove it from the list without parsing it\n    if (\n      (type === \"classes\" && !section.classList.contains(\"pfe-jump-links-panel__section\")) ||\n      (type !== \"classes\" && !section.tagName.startsWith(\"H\"))\n    ) {\n      sections.shift();\n    }\n\n    // Set defaults for relationship\n    let isChild = false;\n    let isParent = false;\n\n    // Get details about the item\n    const sectionRef = this._sectionReference(section);\n\n    // If the section does not have an ID, add one now\n    if (!section.id)\n      if (sectionRef.label) {\n        section.id = sectionRef.label\n          .toLowerCase()\n          .replace(/\\./, \"\")\n          .split(\" \")\n          .map(word => `${word.slice(0, 1).toUpperCase()}${word.slice(1)}`)\n          .join(\"\");\n      } else section.id = this.randomId;\n\n    // If classes are present, determining sibling vs. child relationship\n    if (type === \"classes\") {\n      // If the last item has a sub-section class but this one does not, it's a parent element\n      // (unless it contains has-sub-section in which case isChild will override)\n      if (lastItem && lastItem.ref) {\n        isParent = lastItem.ref.classList.contains(\"sub-section\") && !section.classList.contains(\"sub-section\");\n        // If this item has a sub-section class but the last one did not, this is a child\n        isChild = lastItem.ref.classList.contains(\"has-sub-section\") && section.classList.contains(\"sub-section\");\n      }\n    } else {\n      // Level represents the h-tag level; this helps us determine depth and relationship\n      // when no classes are present\n      const newLevel = section.tagName.slice(1, 2);\n\n      // Initialize previous level at 0, use last-item to set this value\n      let previousLevel = 1;\n\n      // Capture the previous level from the lastItem in the set\n      if (lastItem.ref) previousLevel = lastItem.ref.tagName.slice(1, 2);\n\n      // If the new heading is greater than the previous one, this is a child object\n      isChild = newLevel > previousLevel;\n      // If the new heading is less than the previous one, this is a parent object\n      isParent = newLevel < previousLevel;\n    }\n\n    // Add the reference to the children of the lastItem\n    if (isChild) {\n      sectionRef.childOf = lastItem.id;\n    } else if (!isParent && lastItem.childOf) {\n      sectionRef.childOf = lastItem.childOf;\n    } else if (isParent) {\n      let parent;\n      const sibling = Object.values(sets).filter(item => item.id === lastItem.id);\n      if (sibling.length > 0 && sibling[0].childOf) {\n        parent = Object.values(sets).filter(item => item.id === sibling[0].childOf);\n        // Add the parent ID as the childOf for this element\n        if (parent.length > 0 && parent[0].childOf) {\n          sectionRef.childOf = parent[0].childOf;\n        }\n      }\n    }\n\n    // Add the sibling or parent to the array\n    sets.push(sectionRef);\n\n    // Remove the entry from the sections before looping\n    sections.shift();\n\n    // Recurse to see if this has siblings or children\n    return this._parseSections(sections, sets, type, sectionRef);\n  }\n\n  _init() {\n    // Fetch the light DOM sections via class name\n    this.sections = this.querySelectorAll(\".pfe-jump-links-panel__section\");\n\n    // If sections are found, parse the results and store the refs\n    if (this.sections.length > 0) {\n      this.sectionRefs = this._parseSections([...this.sections]);\n    }\n\n    if (this.sections.length <= 0) {\n      this.warn(\n        `No elements in ${this.tag} included the .${this.tag}__section class. Grepping instead for h-level tags as a fallback.`\n      );\n\n      // Search for sections using h-level tags with IDs (the IDs are critical to the navigation working)\n      this.sections = this.querySelectorAll(\"h1[id],h2[id],h3[id],h4[id],h5[id],h6[id]\");\n      if (this.sections) this.sectionRefs = this._parseSections([...this.sections], [], \"markup\");\n    }\n\n    if (this.sectionRefs.length > 0) {\n      // If nav exists, pass the sections to it for building\n      if (this.nav) this.nav.buildNav(this.sectionRefs);\n    }\n\n    this.style.position = \"relative\";\n\n    // Attach the intersection observer for each section to determine if it's visible\n    this._attachIntersectionObservers();\n\n    // Set the offset value as a variable on the document for sticky nav elements to use\n    if (this.nav) this.cssVariable(`--pfe-jump-links-nav--offset`, `${this.offsetValue}px`, this.nav);\n\n    // Attach the resize observer\n    this._resizeObserver.observe(this);\n  }\n\n  _attachIntersectionObservers() {\n    // Attach the intersection observer for each section to determine if it's visible\n    this.sections.forEach(section => this._intersectionObserver.observe(section));\n  }\n\n  _resizeHandler(entries) {\n    // Disconnect the observer while we process\n    this._resizeObserver.disconnect();\n\n    this._attachIntersectionObservers();\n\n    // Attach the resize observer\n    this._resizeObserver.observe(this);\n  }\n\n  /**\n   * This handler processes the results of the intersection observer\n   */\n  _intersectionCallback(entries, observer) {\n    // Get all the sections that are visible in the viewport\n    entries.forEach(entry => {\n      let section = entry.target.parentNode;\n      if (section.id) {\n        // Find the targeted ID in the references\n        let ref = this.getRefById(section.id);\n        if (ref) {\n          (ref.isVisible = entry.isIntersecting), // && entry.intersectionRatio > 0.5 ? true : false;\n            (ref.intersectionRatio = entry.intersectionRatio);\n        }\n      }\n    });\n\n    this.updateActiveState();\n  }\n}\n\nexport default PfeJumpLinksPanel;\n","/*!\n * PatternFly Elements: PfeJumpLinks 1.9.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\n// Import polyfills:\nimport \"./polyfills--pfe-jump-links.js\";\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\nimport PfeJumpLinksNav from \"./pfe-jump-links-nav.js\";\nimport PfeJumpLinksPanel from \"./pfe-jump-links-panel.js\";\n\nPFElement.create(PfeJumpLinksPanel);\nPFElement.create(PfeJumpLinksNav);\n"],"names":["window","NodeList","prototype","forEach","Array","Number","isInteger","value","isFinite","Math","floor","Element","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","call","parentElement","parentNode","nodeType","Object","keys","obj","TypeError","p","k","hasOwnProperty","push","PfeJumpLinksNav","PFElement","version","html","horizontal","srText","tag","templateUrl","styleUrl","events","upgrade","PfeType","PfeTypes","Content","properties","autobuild","title","type","Boolean","observer","String","default","color","values","hideLabel","nesting","oldAutobuild","alias","attr","oldHorizontal","oldColor","observerSettings","childList","subtree","characterData","logo","getSlot","cta","heading","[object Object]","super","delayRender","isIE11","setAttribute","panel","_building","links","panelRefs","activeLinks","build","bind","validateData","getLinkById","closeAccordion","rebuild","setActive","isActive","removeActive","removeAllActive","upgradeA11y","upgradeA11yListItem","connectPanel","_buildItem","_isValidLightDom","_copyListToShadow","_connectLightDOM","_init","_clickHandler","_upgradePanelHandler","_activeItemHandler","_horizontalHandler","_observer","MutationObserver","connectedCallback","render","disconnectedCallback","link","removeEventListener","id","getLink","shadowRoot","querySelectorAll","filter","item","hash","length","then","querySelector","collapseAll","navset","tagName","sectionRefs","listItem","checkForAncestors","parentItem","classList","contains","tabindex","hasAttribute","removeAttribute","parentLink","parent","activeChildren","isSubSection","add","className","role","includes","nested","children","child","parentList","label","nav","evt","detail","scrolltarget","document","body","_connectToNav","oldVal","newVal","setTimeout","cssVariable","clientHeight","data","createElement","href","textContent","appendChild","items","wrapper","result","_buildList","set","console","log","outerHTML","disconnect","innerHTML","rendered","observe","key","ref","childOf","warn","lastItem","isVisible","hasLightDOM","Promise","resolve","reject","menu","region","slot","addEventListener","getRefById","replace","entry","preventDefault","getValue","variableName","match","offsetInput","navigation","jumpLinksNav","offset","parseInt","path","refs","capture","behavior","matchMedia","offsetValue","scrollTo","top","getBoundingClientRect","pageYOffset","ids","activeIds","firstId","active","map","PfeJumpLinksPanel","change","activeNavItem","oldOffset","oldScrolltarget","undefined","sections","_sectionReference","_parseSections","_attachIntersectionObservers","_intersectionCallback","_resizeHandler","_intersectionObserver","IntersectionObserver","rootMargin","threshold","fill","_","i","_resizeObserver","ResizeObserver","emitEvent","container","visible","section","intersectionRatio","shift","getAttribute","trim","sets","startsWith","isChild","isParent","sectionRef","toLowerCase","split","word","slice","toUpperCase","join","randomId","newLevel","previousLevel","sibling","buildNav","style","position","entries","target","isIntersecting","updateActiveState","create"],"mappings":"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"}