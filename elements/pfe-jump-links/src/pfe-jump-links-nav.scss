// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";

$LOCAL: jump-links;

$LOCAL-VARIABLES: (
  horizontal-spacer: calc(#{pfe-var(container-padding)} * 2),
  vertical-spacer: calc(#{pfe-var(container-padding)} * 2),
  BackgroundColor: pfe-var(surface--lightest),
  BorderColor: pfe-var(ui-accent),
  FontSize: pfe-var(FontSize--md),
  Padding: 0,
  heading: (
    FontSize: pfe-var(FontSize--sm)
  ),
  link: (
    horizontal-spacer: calc(#{pfe-var(content-spacer)} / 3),
    vertical-spacer: calc(#{pfe-var(content-spacer)} / 6),
  ),
  nav: (
      offset: calc(#{pfe-var(container-spacer)} * 4)
  )
);

:host {
  --context: var(--pfe-jump-links--context);

  box-sizing: border-box;
  font-family: pfe-var(font-family);
  font-weight: pfe-var(font-weight--normal);
  font-weight: 400; // @TODO: remove once font-weight--normal is 400
  display: block;
  position: sticky;
  top: var(--pfe-jump-links-nav--offset, #{pfe-var(container-spacer)});
  padding-left: 0;
  background-color: pfe-local(BackgroundColor, $fallback: transparent);
  z-index: pfe-zindex(subnavigation);

  @media(min-width: pfe-breakpoint(lg)) {
    border: pfe-var(surface--border-width) pfe-var(surface--border-style) transparent;
    padding: pfe-local(Padding, $region: nav, $fallback: 0);
  }
}

@include pfe-contexts((light, dark));

:host([sticky="false"]) {
  position: relative;
}

.pfe-jump-links-nav__heading > h3 {
  @include pfe-typography(sm, $region: heading, $light-dom-heading: true);
  color: pfe-broadcasted(text);
  text-transform: uppercase;

  @media (max-width: pfe-breakpoint(lg, $max: true)) {
    visibility: hidden;
  }
  
  &:not(:empty) {
    padding-bottom: pfe-var(container-padding);
    border-bottom: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(surface--border);
  }

  :host([hide-label]) & {
    @extend %sr-only;
  }
}

nav {
  visibility: visible;
  margin: 0;
  list-style: none;
  padding: 0;
}

ul {
  padding: 0;

  // The solid line connecting the navigation list items
  border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);
}

li {
  // The accent mark on an item, transparent until active
  border-left: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;

  display: block;
  text-decoration: none;
  margin-left: calc(#{pfe-var(surface--border-width)} * -1);

  &[active] {
    border-left-color: pfe-local(BorderColor);
  }
}

a {
  position: relative;
  display: table;

  color: pfe-var(ui-disabled--text);
  font-size: pfe-local(FontSize);
  text-decoration: none;
  line-height: pfe-var(line-height);

  padding-top:    calc(#{pfe-local(vertical-spacer, $region: link)} * 2);
  padding-right:  calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);
  padding-bottom: calc(#{pfe-local(vertical-spacer, $region: link)} * 2);
  padding-left:   calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);

  .has-sub-section > & {
    padding-bottom: pfe-local(vertical-spacer, $region: link);
  }

  .sub-section > & {
    margin-left: calc(#{pfe-var(container-spacer)} * 0.75);
    font-size: calc(#{pfe-local(FontSize)} * 0.85);
    padding: pfe-local(vertical-spacer, $region: link) calc(#{pfe-local(horizontal-spacer, $region: link)} * 2);

    @media(min-width: pfe-breakpoint(lg)) {
      display: none;
    }
    
    &:last-child {
      padding-bottom: pfe-local(horizontal-spacer, $region: link);
    }

    [aria-expanded="true"] & {
      display: table;
      height: auto;
    }
  }

  &:focus {
    outline: none;

    &::after {
      content: "";
      position: absolute;
      width: calc(100% - #{pfe-var(surface--border-width--heavy)});
      height: calc(100% - #{pfe-var(surface--border-width--heavy)});
      top: 0;
      left: 0;
      border-radius: pfe-var(surface--border-radius);
      border: pfe-var(ui--focus-outline-width) pfe-var(ui--focus-outline-style) pfe-broadcasted(link);
    }
  }

  &:hover,
  [active] & {
    color: pfe-broadcasted(text);
  }
}

// Nested lists
ul ul {
  display: flex;
  flex-direction: column;
  flex: 0;

  margin: 0;
  padding: 0;

  border-left: none !important;

  overflow-y: hidden;
  transition: flex 1s linear;
  
  li {
    border-left: none !important;
  }

  &[aria-expanded="true"] {
    flex: 1;
  }
}

//accordion padding override
:host {
  --pfe-accordion__panel-container--Padding: 0;
}

// 0 -> md breakpoint
@media (max-width: pfe-breakpoint(md, $max: true)) {
  //accordion padding override
  :host {
    --pfe-accordion__panel-container--Padding: 20px;
  }
}


// --------------------- //
// Accordion styles
pfe-accordion {
  z-index: pfe-zindex(subnavigation);
  // 0 -> LG breakpoint
  @media (max-width: pfe-breakpoint(lg, $max: true)) {
    border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled);
  }
}
  
pfe-accordion-header {
  // @TODO: When variables are available in accordion, remove theme changes from this file
  // hide accordion left border:
  --pfe-theme--color--surface--border: transparent;
  --pfe-theme--color--ui-base--on-dark: transparent;
  --pfe-theme--color--ui-base: transparent;

  position: sticky;
  top: 0;

  // 0 -> LG breakpoint
  @media (max-width: pfe-breakpoint(lg, $max: true)) {
    background-color: pfe-var(surface--lightest);
    --context: #{pfe-var(surface--lightest--context)};
  }
  // LG breakpoint+
  @media(min-width: pfe-breakpoint(lg)) {
    visibility: collapse !important;
    display: none;
  }
}

pfe-accordion-panel {
  // hide accordion left border:
  border-left-color: transparent;
  border-right: none;

  // LG breakpoint+
  @media(min-width: pfe-breakpoint(lg)) {
    visibility: collapse;
    display: none;
    opacity: 1;
    display: block;
    
    > pfe-jump-links-nav {
      width: 100%;
      display: block;
      visibility: visible;
    }
  }
}
// --------------------- //

@each $color in (lightest, darkest) {
  :host([color="#{$color}"]) {
    background-color: pfe-local(BackgroundColor, $fallback: pfe-var(surface--#{$color}));
    --context: #{pfe-var(surface--#{$color}--context)};

    @if $color == darkest {
      border: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(ui-disabled--text);
    }
  }
}

// Return the local variable to jump-links
// $LOCAL: $temp;

// :host([color="darkest"]) {
//   pfe-accordion-header,
//   pfe-accordion-panel,
//   button[aria-expanded="true"] {
//     --pfe-jump-links--BackgroundColor: #{pfe-var(surface--darkest)};
//     --pfe-jump-links--context: #{pfe-var(surface--darkest--context)};
//   }

//   .pfe-jump-links-nav__heading > h3,
//   ::slotted([slot="pfe-jump-links-nav--heading"]) {
//     color: pfe-var(text--on-dark);
//   }

//   ul {
//     border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-var(text--muted);

//     pfe-accordion {
//       --pfe-accordion--BackgroundColor: #{pfe-var(surface--#{$color})};
//       --context: #{pfe-var(surface--#{$color}--context)};
//     }

//     @if $color == darkest {
//       ul {
//         border-left: pfe-var(surface--border-width) pfe-var(surface--border-style) pfe-broadcasted(text--muted);

//         li[active] {
//           border-left: pfe-var(ui--border-width--active) pfe-var(surface--border-style) pfe-broadcasted(link);
//         }

//         a:focus::after {
//           border-color: pfe-var(link--on-dark);   // @TODO: What this is used for?
//         }
//       }
//     }
//   }
// }

:host([horizontal]) {
  padding: 0;
  top: var(--pfe-jump-links-panel--offset, 0);
  width: 100%;
  z-index: pfe-zindex(navigation);

  nav {
    // min-height: calc(#{pfe-var(container-spacer)} * 5.5);
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    align-items: center;

    position: relative;

    padding-left: calc(#{pfe-var(container-spacer)} * 2);
    padding-right: calc(#{pfe-var(container-spacer)} * 2);

    @media(min-width: pfe-breakpoint(lg)) {
      padding-left: calc(#{pfe-var(container-spacer)} * 4);
      padding-right: calc(#{pfe-var(container-spacer)} * 4);
    }

    .pfe-jump-links-nav__heading > h3 {
      flex-basis: 100%;
      text-align: center;
    }

    ::slotted([slot="logo"]) {
      max-height: calc(#{pfe-var(container-spacer)} * 3.5);
    }

    ::slotted([slot="logo"]),
    ::slotted([slot="cta"]) {
      max-width: calc(#{pfe-var(container-spacer)} * 7);
      @media(min-width: pfe-breakpoint(lg)) {
        max-width: calc(#{pfe-var(container-spacer)} * 14);
      }
    }
  }

  #container {
    flex: 1;
    display: flex;
    justify-items: center;
    flex-direction: column;
  }

  ul {
    border: none;
    text-align: center;

    flex: 1;
    display: flex;

    padding: 0;
    width: auto;
    margin: 0 auto;

    li {
      padding: 0 calc(#{pfe-var(container-spacer)} * 1.5);

      display: flex;
      // height: calc(#{pfe-var(container-spacer)} * 5);
      align-items: center;

      border-top: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;
      border-bottom: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) transparent;
      border-left: none;
      border-right: none;

      &[active] {
        border-top: pfe-var(surface--border-width--heavy) pfe-var(surface--border-style) pfe-var(ui-accent);
      }
    }

    a {
      text-decoration: none;
      color: pfe-var(ui-disabled--text);

      padding-top:    pfe-local(vertical-spacer, $region: link, $fallback: pfe-var(container-spacer));
      padding-right:  pfe-local(horizontal-spacer, $region: link, $fallback: pfe-var(container-spacer));
      padding-bottom: pfe-local(vertical-spacer, $region: link, $fallback: pfe-var(container-spacer));
      padding-left:   pfe-local(horizontal-spacer, $region: link, $fallback: pfe-var(container-spacer));

      [active] &,
      &:hover {
        color: pfe-broadcasted(text);
      }
    }
  }

  @media (max-width: pfe-breakpoint(lg, $max: true)) {
    nav {
      min-height: calc(#{pfe-var(container-spacer)} * 5.5);
      background-color: pfe-var(surface--lighter);
      --context: #{pfe-var(surface--lighter--context)};
    }

    .pfe-jump-links-nav {
      display: none;
    }
  }
}

:host([hidden]) {
  display: none;
}
