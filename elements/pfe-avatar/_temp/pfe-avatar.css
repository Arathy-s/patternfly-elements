/*
 * Copyright 2018 Red Hat, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/* Palette of Border Colors */
/* Palette of Feedback Colors */
:host {
  --pfe-avatar--width: 128px;
  display: block;
  position: relative;
  width: var(--pfe-avatar--width);
  height: var(--pfe-avatar--width);
}

:host canvas {
  width: 100%;
  height: 100%;
  image-rendering: optimizeSpeed;
  /* Older versions of FF          */
  image-rendering: -moz-crisp-edges;
  /* FF 6.0+                       */
  image-rendering: -webkit-optimize-contrast;
  /* Safari                        */
  image-rendering: -o-crisp-edges;
  /* OS X & Windows Opera (12.02+) */
  image-rendering: -o-pixelated;
  image-rendering: pixelated;
  /* Awesome future-browsers       */
  -ms-interpolation-mode: nearest-neighbor;
  /* IE                            */
}

:host([pfe-shape="rounded"]) img,
:host([pfe-shape="rounded"]) canvas {
  border-radius: calc(var(--pfe-avatar--width) / 8 + 1px);
}

:host([pfe-shape="circle"]) img,
:host([pfe-shape="circle"]) canvas {
  border-radius: 50%;
}

:host([pfe-src]) canvas {
  display: none;
}

:host([pfe-src]) img {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

:host(:not([pfe-src])) img {
  display: none;
}

:host([hidden]) {
  display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
