// Please see the pfe-sass README for guidance on using these tools
@import "../../pfe-sass/pfe-sass";


$LOCAL: clipboard;

$pfe-clipboard--BackgroundColor--focus: rgba(40, 151, 240, 0.2);
$pfe-clipboard--Color--fallback: #003366;

// Example local variable, using BEM format
// --pfe-clipboard__region--Property: value;

// This variable is global so that helper functions can reference it
$LOCAL-VARIABLES: (
  FontSize: 1rem,
  icon--Width: 16px,
  icon--Height: auto,
  BackgroundColor: transparent,
  BackgroundColor--hover: transparent,
  BackgroundColor--focus: $pfe-clipboard--BackgroundColor--focus,
  Color: pfe-broadcasted(link),
  Color--hover: pfe-broadcasted(link--hover),
  Color--focus: pfe-broadcasted(link--focus),
  container--Display: flex,
  toast--Position: fixed
);

:host {
  display: block;
}

:host([hidden]) {
  display: none;
}

//-- Custom styles applied to slot's shadow element
.pfe-clipboard {
  &__container {
    display: pfe-local(container--Display);
    flex: 0 0 auto;
    align-items: center;
    max-width: fit-content;
    border: 1px solid transparent;
    color: pfe-local(Color) !important;
    border: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-local(BorderColor);
    background-color: pfe-local(BackgroundColor);
    cursor: pointer;
    outline: 0;
  }
  &__icon {
    display: flex;
    width: pfe-local(icon--Width);
    // This is needed if the icon isn't square
    height: pfe-local(icon--Height);
    margin-right: 0.4825rem; // 7.72px 
  }
  &__text {
    font-size: pfe-local(FontSize) !important;
    color: pfe-local(Color) !important;
  }
}

//-- Custom styles applied to slot
// Targets icon in the shadowdom and lightdom
::slotted([slot="pfe-clipboard--icon"]),
.pfe-clipboard__icon > * {
  width: 100%;
}

/// ===========================================================================
/// CTA STATES: HOVER, FOCUS
/// ===========================================================================

// Note: Focus states need to be defined before hover states
.pfe-clipboard__container:not([aria-disabled="true"]):focus,
.pfe-clipboard__container:not([aria-disabled="true"]).focus-within {
  @include pfe-print-local((
    BackgroundColor: pfe-local(BackgroundColor--focus),
    BorderColor: pfe-local(BorderColor--focus),
    Color: pfe-local(Color--focus),
    TextDecoration: pfe-local(TextDecoration--focus),
    inner: (BorderColor: pfe-local(BorderColor--focus, $region: inner))
  ));
}

// Note: Hover states need to be defined after focus states
.pfe-clipboard__container:not([aria-disabled="true"]):hover,
.pfe-clipboard__container:not([aria-disabled="true"]) ::slotted(:hover) {
  @include pfe-print-local((
    BackgroundColor: pfe-local(BackgroundColor--hover),
    BorderColor: pfe-local(BorderColor--hover),
    Color: pfe-local(Color--hover),
    TextDecoration: pfe-local(TextDecoration--hover),
    inner: (BorderColor: pfe-local(BorderColor--hover, $region: inner)),
  ));
}

// Make sure the toast stays in the upper right hand corner of the browser
:host pfe-toast,
.pfe-clipboard pfe-toast {
  position: pfe-local(toast--Position);
}