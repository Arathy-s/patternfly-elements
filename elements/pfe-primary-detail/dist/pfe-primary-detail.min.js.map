{"version":3,"file":"pfe-primary-detail.min.js","sources":["../_temp/pfe-primary-detail.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfePrimaryDetail 1.11.0\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement.js\";\n\n// Config for mutation observer to see if things change inside of the component\nconst lightDomObserverConfig = {\n  childList: true,\n};\n\n/**\n * Debounce helper function\n * @see https://davidwalsh.name/javascript-debounce-function\n *\n * @param {function} func Function to be debounced\n * @param {number} delay How long until it will be run\n * @param {boolean} immediate Whether it should be run at the start instead of the end of the debounce\n */\nfunction debounce(func, delay, immediate = false) {\n  var timeout;\n  return function () {\n    var context = this,\n      args = arguments;\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, delay);\n    if (callNow) func.apply(context, args);\n  };\n}\n\n// @todo Add functions to open a specific item by index or ID\nclass PfePrimaryDetail extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.11.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>*{-webkit-box-sizing:border-box;box-sizing:border-box}:host{display:-ms-grid;display:grid;-ms-grid-columns:1fr 2fr;grid-template-columns:1fr 2fr;-ms-grid-columns:var(--pfe-primary-details--GridTemplateColumns,1fr 2fr);grid-template-columns:var(--pfe-primary-details--GridTemplateColumns,1fr 2fr);border:1px solid #d2d2d2;border:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2));-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch;overflow:hidden}:host([breakpoint=compact]){-ms-grid-columns:1fr;grid-template-columns:1fr}:host([hidden]){display:none}#details-nav,#details-nav__footer,#details-wrapper{-webkit-transition:-webkit-transform .25s ease-in-out;transition:-webkit-transform .25s ease-in-out;transition:transform .25s ease-in-out;transition:transform .25s ease-in-out,-webkit-transform .25s ease-in-out;will-change:transform;-webkit-backface-visibility:visible;backface-visibility:visible}@media (prefers-reduced-motion){#details-nav,#details-nav__footer,#details-wrapper{-webkit-transform:none;transform:none}}:host([breakpoint=compact]) #details-nav,:host([breakpoint=compact]) #details-nav__footer,:host([breakpoint=compact]) #details-wrapper{-ms-grid-row-align:stretch;align-self:stretch;-ms-grid-column-align:stretch;justify-self:stretch;-ms-grid-row:1;grid-row:1;-ms-grid-column:1;grid-column:1}:host([breakpoint=compact]) #details-nav,:host([breakpoint=compact]) #details-nav__footer{-webkit-transform:none;transform:none}:host([breakpoint=compact][active]) #details-nav,:host([breakpoint=compact][active]) #details-nav__footer{-webkit-transform:translateX(-100%);transform:translateX(-100%)}#details-nav{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin:0 2px;padding:9px 0;border-right:1px solid #d2d2d2;border-right:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2))}:host([breakpoint=compact]) #details-nav{border:0}:host([breakpoint=compact]) #details-nav__footer{-ms-grid-row:2;grid-row:2}::slotted([slot=details-nav]){position:relative;display:block!important;-webkit-appearance:none!important;-moz-appearance:none!important;appearance:none!important;background:0 0!important;border:0!important;margin:0!important;padding:.5em 1.5em .5em .75em!important;font:inherit;line-height:1.5;text-align:left!important;color:#151515!important;color:var(--pfe-primary-details__nav--Color,var(--pfe-theme--color--text,#151515))!important;cursor:pointer!important}::slotted([slot=details-nav]):before{content:'';position:absolute;top:50%;right:0;margin-right:16px;display:block;width:.75em;height:.75em;-webkit-box-shadow:inset -.1875em -.1875em 0 .0625em #000;box-shadow:inset -.1875em -.1875em 0 .0625em #000;-webkit-transform:translate(-50%,-50%) scale(.6) rotate(314deg);transform:translate(-50%,-50%) scale(.6) rotate(314deg)}:host([breakpoint=desktop]) ::slotted([slot=details-nav]):before{content:none}::slotted([aria-expanded=true]),::slotted([aria-selected=true]){color:#06c!important;color:var(--pfe-primary-details__nav--Color--active,var(--pfe-theme--color--link,#06c))!important;background:#f0f0f0!important;background:var(--pfe-primary-details__nav--Background--active,#f0f0f0)!important}#details-wrapper{padding:.5em 1.5em;background:#fff;background:var(--pfe-primary-details__details--Background,var(--pfe-theme--color--surface--lightest,#fff))}:host([breakpoint=compact]) #details-wrapper{-webkit-transform:translateX(100%);transform:translateX(100%);-ms-grid-row:1;-ms-grid-row-span:2;grid-row:1/span 2;padding-top:0}:host([breakpoint=compact][active]) #details-wrapper{-webkit-transform:none;transform:none}:host([consistent-height]) #details-wrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}@supports (display:grid){:host([consistent-height]) #details-wrapper{display:-ms-grid;display:grid;-ms-grid-rows:1fr;-ms-grid-columns:1fr;grid-template:1fr/1fr;justify-items:start;-webkit-box-align:start;-webkit-align-items:start;-ms-flex-align:start;align-items:start}}:host([consistent-height][breakpoint=compact]) #details-wrapper:before{content:'';display:block;-ms-grid-row:1;grid-row:1;-ms-grid-column:1;grid-column:1;-ms-grid-row-align:end;align-self:end;border-bottom:1px solid #d2d2d2;border-bottom:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2));width:calc(100% + 3em);margin-left:-1.5em}#details-wrapper__header{display:none;-ms-grid-row:1;-ms-grid-row-span:1;grid-row:1/span 1;-ms-grid-column:1;-ms-grid-column-span:1;grid-column:1/span 1;-ms-grid-row-align:start;align-self:start;-ms-grid-column-align:stretch;justify-self:stretch}:host([breakpoint=compact]) #details-wrapper__header{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}#details-wrapper__back{display:none;position:relative;-webkit-align-self:stretch;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch;border:0;margin:2px 0 0;background:0 0;font-size:inherit;font-family:inherit;font-weight:700;cursor:pointer;text-align:left}#details-wrapper__back:focus{outline:1px dashed #000!important;outline-width:2px!important}:host([active]) #details-wrapper__back{display:inline-block;width:100%;padding-left:16px}#details-wrapper__back:before{content:'';position:absolute;top:50%;left:.5em;display:block;width:.75em;height:.75em;-webkit-box-shadow:inset -.1875em -.1875em 0 .0625em #000;box-shadow:inset -.1875em -.1875em 0 .0625em #000;-webkit-transform:translate(-50%,-50%) scale(.6) rotate(135deg);transform:translate(-50%,-50%) scale(.6) rotate(135deg)}#details-wrapper__heading{margin:0;padding:0;font-size:inherit;line-height:1.5;padding:.5em 0}:host([consistent-height]) ::slotted([slot=details]){display:block!important;-ms-grid-row:1!important;-ms-grid-row-span:1!important;grid-row:1/span 1!important;-ms-grid-column:1!important;-ms-grid-column-span:1!important;grid-column:1/span 1!important}:host([consistent-height][breakpoint=compact]) ::slotted([slot=details]){-ms-grid-row:2!important;-ms-grid-row-span:1!important;grid-row:2/span 1!important}::slotted([hidden]){visibility:hidden!important;position:absolute!important}:host([consistent-height]) ::slotted([hidden]){position:static!important}::slotted([slot=details-nav--footer]){border-right:1px solid #d2d2d2!important;border-right:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2))!important}::slotted(.is-focused:focus),::slotted(.is-focused:hover){outline:1px dashed #000!important;outline-width:2px!important} /*# sourceMappingURL=pfe-primary-detail.min.css.map */</style>\n<div id=\"details-nav\" data-pristine>\n  <slot name=\"details-nav--header\"></slot>\n  <slot name=\"details-nav\"></slot>\n</div>\n<div id=\"details-wrapper\">\n  <div id=\"details-wrapper__header\">\n    <button id=\"details-wrapper__back\"><div id=\"details-wrapper__heading\"></div></button>\n  </div>\n  <slot name=\"details\"></slot>\n</div>\n<div id=\"details-nav__footer\">\n  <slot name=\"details-nav--footer\"></slot>\n</div>`;\n  }\n\n  static get tag() {\n    return \"pfe-primary-detail\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Primary detail\",\n      description: \"Reworks title/description content into a vertical-tabs like interface.\",\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-primary-detail.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-primary-detail.scss\";\n  }\n\n  static get events() {\n    return {\n      hiddenTab: `${this.tag}:hidden-tab`,\n      shownTab: `${this.tag}:shown-tab`,\n    };\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Container;\n  }\n\n  static get properties() {\n    return {\n      // Set aria-orientation (doesn't change)\n      orientation: {\n        title: \"Orientation\",\n        type: String,\n        attr: \"aria-orientation\",\n        default: \"vertical\",\n      },\n      // Set aria role (doesn't change)\n      role: {\n        type: String,\n        default: \"tablist\",\n      },\n      // The min-width of the _component_ where it has a desktop layout\n      breakpointWidth: {\n        type: Number,\n        default: 800,\n      },\n      // Read only: Displays the id of an open 'detailNav' element\n      active: {\n        type: String,\n      },\n      // Read only: Displays what breakpoint is currently being used\n      breakpoint: {\n        type: String,\n        values: [\"compact\", \"desktop\"],\n      },\n    };\n  }\n\n  static get slots() {\n    return {\n      // Content that shows above the navigation column\n      detailsNavHeader: {\n        title: \"Details Nav Header\",\n        type: \"array\",\n        namedSlot: true,\n      },\n      // Column of headings to expland the related contents\n      detailsNav: {\n        title: \"Details Nav\",\n        type: \"array\",\n        namedSlot: true,\n      },\n      // Content that shows below the navigation column\n      detailsNavFooter: {\n        title: \"Details Nav Footer\",\n        type: \"array\",\n        namedSlot: true,\n      },\n      // Content content that is shown when it's corresponding \"Details Nav\" item is active\n      details: {\n        title: \"Details\",\n        type: \"array\",\n        namedSlot: true,\n      },\n    };\n  }\n\n  constructor() {\n    super(PfePrimaryDetail, { type: PfePrimaryDetail.PfeType });\n\n    // Make sure 'this' is set to the instance of the component in child methods\n    this._handleHideShow = this._handleHideShow.bind(this);\n    this._initDetailsNav = this._initDetailsNav.bind(this);\n    this._initDetail = this._initDetail.bind(this);\n    this.closeAll = this.closeAll.bind(this);\n    this._processLightDom = this._processLightDom.bind(this);\n    this._keyboardControls = this._keyboardControls.bind(this);\n    this._setBreakpoint = this._setBreakpoint.bind(this);\n    this._setDetailsNavVisibility = this._setDetailsNavVisibility.bind(this);\n    this._updateBackButtonState = this._updateBackButtonState.bind(this);\n\n    // Place to store references to the slotted elements\n    this._slots = {\n      detailsNav: null,\n      details: null,\n      detailsNavHeader: null,\n      detailsNavFooter: null,\n    };\n\n    // Setup mutation observer to watch for content changes\n    this._observer = new MutationObserver(this._processLightDom);\n\n    // Commonly used shadow DOM elements\n    this._detailsNav = this.shadowRoot.getElementById(\"details-nav\");\n    this._detailsWrapper = this.shadowRoot.getElementById(\"details-wrapper\");\n    this._detailsWrapperHeader = this.shadowRoot.getElementById(\"details-wrapper__header\");\n    this._detailsWrapperHeading = this.shadowRoot.getElementById(\"details-wrapper__heading\");\n    this._detailsBackButton = this.shadowRoot.getElementById(\"details-wrapper__back\");\n\n    this._debouncedSetBreakpoint = null;\n\n    // @todo: decide if we need this anymore\n    // Store all focusable element types in variable\n    this._focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Add appropriate markup and behaviors if DOM is ready\n    if (this.hasLightDOM()) {\n      this._processLightDom();\n    }\n\n    // Lower debounce delay for automated testing\n    const debounceDelay = this.hasAttribute(\"automated-testing\") ? 0 : 100;\n\n    this._debouncedSetBreakpoint = debounce(this._setBreakpoint, debounceDelay);\n    window.addEventListener(\"resize\", this._debouncedSetBreakpoint);\n\n    // Process the light DOM on any update\n    this._observer.observe(this, lightDomObserverConfig);\n\n    this._detailsBackButton.addEventListener(\"click\", this.closeAll);\n\n    // A11y: add keydown event listener to activate keyboard controls\n    this.addEventListener(\"keydown\", this._keyboardControls);\n  }\n\n  disconnectedCallback() {\n    this._observer.disconnect();\n\n    window.removeEventListener(\"resize\", this._debouncedSetBreakpoint);\n\n    if (this._slots.detailsNav) {\n      for (let index = 0; index < this._slots.detailsNav.length; index++) {\n        this._slots.detailsNav[index].removeEventListener(\"click\", this._handleHideShow);\n      }\n    }\n\n    // Remove keydown event listener if component disconnects\n    this.removeEventListener(\"keydown\", this._keyboardControls);\n  }\n\n  /**\n   * Updates markup of details-nav elements to be toggle buttons\n   * @param {object} toggle Slotted element (probably a headline, unless it's been initialized already)\n   * @param {integer} index The index of the item in the details-nav slot\n   */\n  _initDetailsNav(detailNavElement, index) {\n    const createToggleButton = detailNavElement.tagName !== \"BUTTON\";\n    let toggle = null;\n\n    if (createToggleButton) {\n      const attr = detailNavElement.attributes;\n      toggle = document.createElement(\"button\");\n\n      toggle.innerHTML = detailNavElement.innerHTML;\n      toggle.setAttribute(\"role\", \"tab\");\n\n      // list of attributes that we DO NOT want to pass to our shadow DOM.\n      const denyListAttributes = [\"style\", \"role\"];\n\n      // Copy over attributes from original element that aren't in denyList\n      [...attr].forEach((detailNavElement) => {\n        if (!denyListAttributes.includes(detailNavElement.name)) {\n          toggle.setAttribute(detailNavElement.name, detailNavElement.value);\n        }\n      });\n\n      // Keeping track of tagName which is used in mobile layout to maintain heading order\n      toggle.dataset.wasTag = detailNavElement.tagName;\n\n      // If the detailNavElement does not have a ID, set a unique ID\n      if (!detailNavElement.id) {\n        toggle.setAttribute(\"id\", `pfe-detail-toggle-${Math.random().toString(36).substr(2, 9)}`);\n      }\n    } else {\n      toggle = detailNavElement;\n    }\n\n    // If the detailNavElement does not have a ID, set a unique ID\n    if (!detailNavElement.id) {\n      detailNavElement.setAttribute(\"id\", `pfe-detail-toggle-${Math.random().toString(36).substr(2, 9)}`);\n    }\n\n    toggle.addEventListener(\"click\", this._handleHideShow);\n    toggle.dataset.index = index;\n\n    // Store a reference to our new detailsNav item\n    this._slots.detailsNav[index] = toggle;\n\n    if (createToggleButton) {\n      detailNavElement.replaceWith(toggle);\n    }\n  }\n\n  /**\n   * Process detail wrapper elements\n   * @param {object} detail DOM Object of detail wrapper\n   * @param {integer} index The index of the item when detail wrappers are queried\n   */\n  _initDetail(detail, index) {\n    detail.dataset.index = index;\n\n    // If the toggle does not have a ID, set a unique ID\n    if (!detail.hasAttribute(\"id\")) {\n      detail.setAttribute(\"id\", `pfe-detail-${Math.random().toString(36).substr(2, 9)}`);\n    }\n\n    detail.setAttribute(\"role\", \"tabpanel\");\n    // Set initial tabindex state for detail panel, -1 one when panel is inactive\n    detail.setAttribute(\"tabindex\", \"-1\");\n\n    const toggleId = this._slots.detailsNav[index].getAttribute(\"id\");\n    if (!detail.hasAttribute(\"aria-labelledby\") && toggleId) {\n      detail.setAttribute(\"aria-labelledby\", toggleId);\n    }\n\n    // Swing back to detailsNav to add aria-controls, now that details have an Id\n    if (!this._slots.detailsNav[index].hasAttribute(\"aria-controls\") && detail.id) {\n      this._slots.detailsNav[index].setAttribute(\"aria-controls\", detail.id);\n    }\n\n    // Leave a reliable indicator that this has been initialized so we don't do it again\n    detail.dataset.processed = true;\n  }\n\n  /**\n   * Evaluate whether component is smaller than breakpoint\n   * Then manage state of component and manage active/inactive elements\n   */\n  _setBreakpoint() {\n    const breakpointWas = this.breakpoint;\n    const breakpointIs = this.offsetWidth < this.breakpointWidth ? \"compact\" : \"desktop\";\n\n    this.breakpoint = breakpointIs;\n\n    // If nothing has been touched and we move to mobile, the details nav should be shown,\n    // not the item that was opened by default so the desktop design would work\n    if (this._detailsNav.hasAttribute(\"data-pristine\") && breakpointIs === \"compact\") {\n      const activeToggle = this.active ? document.getElementById(this.active) : false;\n      if (activeToggle) {\n        this._addCloseAttributes(activeToggle);\n        this.removeAttribute(\"active\");\n      }\n    }\n\n    // If the breakpoint changed we need to set all aria attributes since the UI design pattern changes\n    if (breakpointWas !== breakpointIs) {\n      for (let index = 0; index < this._slots.detailsNav.length; index++) {\n        const detailNavItem = this._slots.detailsNav[index];\n        if (detailNavItem.id === this.active) {\n          this._addActiveAttributes(detailNavItem);\n        } else {\n          this._addCloseAttributes(detailNavItem);\n        }\n      }\n    }\n\n    // If we've switched breakpoints or one wasn't set\n    if (breakpointWas !== \"desktop\" && breakpointIs === \"desktop\") {\n      // Desktop should never have nothing selected, default to first item if nothing is selected\n      if (!this.active) {\n        this._handleHideShow({ target: this._slots.detailsNav[0] });\n      }\n\n      // Make sure the left column items are visible\n      this._setDetailsNavVisibility(true);\n    } else if (breakpointWas !== \"compact\" && breakpointIs === \"compact\") {\n      // Hide the left column if it is out of view\n      if (this.active) {\n        this._setDetailsNavVisibility(false);\n      }\n    }\n  }\n\n  /**\n   * Utility function to hide elements in details nav\n   * @param {boolean} visible True to show nav elements, false to hide\n   */\n  _setDetailsNavVisibility(visible) {\n    const leftColumnSlots = [\"detailsNav\", \"detailsNavHeader\", \"detailsNavFooter\"];\n    // Manage detailsNav elements hidden attribute\n    for (let index = 0; index < leftColumnSlots.length; index++) {\n      const slotName = leftColumnSlots[index];\n      for (let j = 0; j < this._slots[slotName].length; j++) {\n        const detailNavItem = this._slots[slotName][j];\n        detailNavItem.hidden = !visible;\n      }\n    }\n  }\n\n  /**\n   * Adds nav functionality and adds additional HTML/attributes to markup\n   */\n  _processLightDom() {\n    // Update slots\n    this._slots = {\n      detailsNav: this.getSlot(\"details-nav\"),\n      details: this.getSlot(\"details\"),\n      detailsNavHeader: this.getSlot(\"details-nav--header\"),\n      detailsNavFooter: this.getSlot(\"details-nav--footer\"),\n    };\n\n    if (this._slots.detailsNav.length !== this._slots.details.length) {\n      this.error(\n        `The number of item headings does not match the number of item details. Found ${this._slots.detailsNav.length} item headings & ${this._slots.details.length} item details.`\n      );\n      return;\n    }\n\n    // Get active detailNavItem and corresponding details, if we have active elements\n    const activeDetailNavId = this.active;\n    let activeDetailId = null;\n    if (activeDetailNavId) {\n      activeDetailId = document.getElementById(activeDetailNavId).getAttribute(\"aria-controls\");\n    }\n\n    // Setup left sidebar navigation\n    this._slots.detailsNav.forEach((toggle, index) => {\n      this._initDetailsNav(toggle, index);\n    });\n\n    // Setup item detail elements\n    this._slots.details.forEach((detail, index) => {\n      this._initDetail(detail, index);\n      // Make sure all inactive detailNav and detail elements have closed attributes\n      if (detail.id !== activeDetailId) {\n        this._addCloseAttributes(this._slots.detailsNav[index], detail);\n      }\n    });\n\n    this._setBreakpoint();\n\n    // Desktop layout requires that something is active, if nothing is active make first item active\n    if (!this.active && this.breakpoint === \"desktop\") {\n      this._handleHideShow({ target: this._slots.detailsNav[0] });\n    }\n  } // end _processLightDom()\n\n  /**\n   * Add the appropriate active/open attributes\n   * @param {Object} toggle DOM element in the details-nav slot\n   * @param {Object} detail Optional, DOM element in the details slot\n   */\n  _addActiveAttributes(toggle, detail) {\n    // Get detail element if one isn't set\n    if (!detail) {\n      detail = document.getElementById(toggle.getAttribute(\"aria-controls\"));\n    }\n\n    detail.hidden = false;\n    detail.removeAttribute(\"aria-hidden\");\n    detail.removeAttribute(\"tabindex\");\n\n    if (this.breakpoint === \"desktop\") {\n      // Ideal toggle markup at desktop\n      // [aria-selected=true]:not([aria-expanded])\n      toggle.setAttribute(\"aria-selected\", \"true\");\n      toggle.removeAttribute(\"aria-expanded\");\n    }\n    // Compact layout\n    else {\n      // Ideal toggle markup at mobile\n      // [aria-expanded=true]:not([aria-selected])\n      toggle.setAttribute(\"aria-expanded\", \"true\");\n      toggle.removeAttribute(\"aria-selected\");\n    }\n  }\n\n  /**\n   * Set appropriate inactive/closed attributes\n   * @param {Object} toggle DOM element in the details-nav slot\n   * @param {Object} detail Optional, DOM element in the details slot\n   */\n  _addCloseAttributes(toggle, detail) {\n    if (!detail) {\n      detail = document.getElementById(toggle.getAttribute(\"aria-controls\"));\n    }\n\n    detail.hidden = true;\n    /**\n     * A11y note:\n     * tabindex = -1 removes element from the tab sequence, set when tab is not selected\n     * so that only the active tab (selected tab) is in the tab sequence.\n     * @see https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    detail.setAttribute(\"tabindex\", \"-1\");\n    detail.setAttribute(\"aria-hidden\", \"true\");\n\n    if (this.breakpoint === \"desktop\") {\n      // Ideal toggle markup at desktop\n      // [aria-selected=false]:not([aria-expanded])\n      toggle.setAttribute(\"aria-selected\", \"false\");\n      toggle.removeAttribute(\"aria-expanded\");\n    }\n    // Compact layout\n    else {\n      // aria-expanded attr on toggle since mobile view UI is a drawer dropdown\n      // Ideal toggle markup at mobile\n      // [aria-expanded=false]:not([aria-selected])\n      toggle.setAttribute(\"aria-expanded\", \"false\");\n      toggle.removeAttribute(\"aria-selected\");\n    }\n  }\n\n  /**\n   * Manages the back button's state attributes\n   */\n  _updateBackButtonState() {\n    // Element is hidden with CSS at desktop layout\n    if (this.breakpoint === \"compact\") {\n      if (this.active) {\n        this._detailsBackButton.setAttribute(\"aria-expanded\", \"true\");\n      } else {\n        this._detailsBackButton.setAttribute(\"aria-expanded\", \"false\");\n      }\n    }\n  }\n\n  /**\n   * Handles changes in state\n   * @param {object} e Event object\n   */\n  _handleHideShow(e) {\n    const nextToggle = e.target;\n\n    // Detect if handleHideShow was called by an event listener or manually in code\n    if (typeof e === \"object\" && Array.isArray(e.path)) {\n      // If the user has interacted with the component remove the pristine attribute\n      this._detailsNav.removeAttribute(\"data-pristine\");\n    }\n\n    if (typeof nextToggle === \"undefined\") {\n      return;\n    }\n    // If the clicked toggle is already open, no need to do anything\n    else if (nextToggle.getAttribute(\"aria-selected\") === \"true\" && nextToggle.id === this.active) {\n      return;\n    }\n\n    const nextDetails = this._slots.details[parseInt(nextToggle.dataset.index)];\n    const previousToggle = this.active ? document.getElementById(this.active) : false;\n    const currentToggle = document.getElementById(this.active);\n\n    // Update attribute to show which toggle is active\n    this.setAttribute(\"active\", nextToggle.id);\n\n    // Create the appropriate heading for the top of the content column\n    let newHeading = null;\n    if (nextToggle.dataset.wasTag && nextToggle.dataset.wasTag.substr(0, 1) === \"H\") {\n      newHeading = document.createElement(nextToggle.dataset.wasTag);\n    } else {\n      newHeading = document.createElement(\"strong\");\n    }\n    newHeading.innerText = nextToggle.innerText;\n    newHeading.id = this._detailsWrapperHeading.id;\n    // Replace old heading\n    this._detailsWrapperHeading.replaceWith(newHeading);\n    this._detailsWrapperHeading = newHeading;\n\n    // Make sure the aria-controls attribute is set to the details wrapper\n    this._detailsBackButton.setAttribute(\"aria-controls\", nextDetails.id);\n\n    // Shut previously active detail\n    if (currentToggle) {\n      const currentDetails = this._slots.details[parseInt(currentToggle.dataset.index)];\n\n      this._addCloseAttributes(currentToggle, currentDetails);\n\n      this.emitEvent(PfePrimaryDetail.events.hiddenTab, {\n        detail: {\n          tab: currentToggle,\n          details: currentDetails,\n        },\n      });\n    }\n\n    // Add active attributes to Next Item\n    this._addActiveAttributes(nextToggle, nextDetails);\n\n    // At compact make sure elements in left sidebar are hidden, otherwise make sure they're shown\n    if (this.getAttribute(\"breakpoint\") === \"compact\") {\n      if (this.active) {\n        this._setDetailsNavVisibility(false);\n        this._detailsBackButton.focus();\n      } else {\n        this._setDetailsNavVisibility(true);\n        if (previousToggle) {\n          previousToggle.focus();\n        }\n      }\n    }\n\n    this.emitEvent(PfePrimaryDetail.events.shownTab, {\n      detail: {\n        tab: nextToggle,\n        details: nextDetails,\n      },\n    });\n\n    this._updateBackButtonState();\n  } // end _handleHideShow()\n\n  /**\n   * Closes the open toggle and details\n   */\n  closeAll() {\n    this._setDetailsNavVisibility(true);\n\n    if (this.active) {\n      const detailNav = document.getElementById(this.active);\n      const details = document.getElementById(detailNav.getAttribute(\"aria-controls\"));\n      this._addCloseAttributes(detailNav, details);\n      this.emitEvent(PfePrimaryDetail.events.hiddenTab, {\n        detail: {\n          tab: detailNav,\n          details: details,\n        },\n      });\n\n      // Set focus back to toggle that was activated\n      detailNav.focus();\n      this.removeAttribute(\"active\");\n    }\n  }\n\n  /**\n   * Check if active element is a tab toggle\n   * @param {object} element Target slotted element\n   */\n  _isToggle(element) {\n    return element.getAttribute(\"slot\") === \"details-nav\";\n  }\n\n  /**\n   * Check if active element is a tab panel\n   * @param {object} element Target slotted element\n   */\n  _isPanel(element) {\n    return element.getAttribute(\"slot\") === \"details\";\n  }\n\n  /**\n   * Get the corresponding active tab panel for the active tab toggle\n   * @return {object} DOM Element for active panel\n   */\n  _getFocusedPanel() {\n    const toggles = this._slots.detailsNav;\n    let newIndex = toggles.findIndex((toggle) => toggle === document.activeElement);\n\n    return toggles[newIndex % toggles.length].nextElementSibling;\n  }\n\n  /**\n   * Get previous toggle in relation to the active toggle\n   * @return {object} DOM Element for toggle before the active one\n   */\n  _getPrevToggle() {\n    const toggles = this._slots.detailsNav;\n    let newIndex = toggles.findIndex((toggle) => toggle === document.activeElement) - 1;\n\n    return toggles[(newIndex + toggles.length) % toggles.length];\n  }\n\n  /**\n   * Get currently active toggle\n   * @return {object} DOM Element for active toggle\n   */\n  _getFocusedToggle() {\n    return document.getElementById(this.active);\n  }\n\n  /**\n   * Get next toggle in list order from currently focused\n   * @return {object} DOM Element for element after active toggle\n   */\n  _getNextToggle() {\n    const toggles = this._slots.detailsNav;\n    let newIndex = toggles.findIndex((toggle) => toggle === document.activeElement) + 1;\n\n    return toggles[newIndex % toggles.length];\n  }\n\n  /**\n   * Manual user activation vertical tab\n   * @param {event} Target event\n   */\n  _keyboardControls(event) {\n    const currentElement = event.target;\n\n    if (!this._isToggle(currentElement)) {\n      return;\n    }\n\n    let newToggle;\n\n    switch (event.key) {\n      // case \"Tab\":\n      // Tab (Default tab behavior)\n      /// When focus moves into the tab list, places focus on the active tab element\n      /// When the focus is in the tab list, move focus away from active tab element to next element in tab order which is the tabpanel element\n      /// When focus is moved outside of the tab list focus moves to the next focusable item in the DOM order\n\n      case \"ArrowUp\":\n      case \"Up\":\n      case \"ArrowLeft\":\n      case \"Left\":\n        event.preventDefault(); // Prevent scrolling\n        // Up Arrow/Left Arrow\n        /// When tab has focus:\n        /// Moves focus to the next tab\n        /// If focus is on the last tab, moves focus to the first tab\n        newToggle = this._getPrevToggle();\n        break;\n\n      case \"ArrowDown\":\n      case \"Down\":\n      case \"ArrowRight\":\n      case \"Right\":\n        event.preventDefault(); // Prevent scrolling\n        // Down Arrow/Right Arrow\n        /// When tab has focus:\n        /// Moves focus to previous tab\n        /// If focus is on the first tab, moves to the last tab\n        /// Activates the newly focused tab\n\n        newToggle = this._getNextToggle();\n        break;\n\n      case \"Home\":\n        event.preventDefault(); // Prevent scrolling\n        // Home\n        //// When a tab has focus, moves focus to the first tab\n\n        newToggle = this._slots.detailsNav[0];\n        break;\n\n      case \"End\":\n        event.preventDefault(); // Prevent scrolling\n        // End\n        /// When a tab has focus, moves focus to the last tab\n\n        newToggle = this._slots.detailsNav[this._slots.detailsNav.length - 1];\n        break;\n\n      case \"Escape\":\n        // Only closing all at compact sizes since something should always be selected at non-compact\n        if (this.getAttribute(\"breakpoint\") === \"compact\") {\n          this.closeAll();\n        }\n        break;\n      default:\n        return;\n    }\n\n    if (newToggle) newToggle.focus();\n  } // end _keyboardControls()\n} // end Class\n\nPFElement.create(PfePrimaryDetail);\n\nexport default PfePrimaryDetail;\n"],"names":["lightDomObserverConfig","childList","PfePrimaryDetail","PFElement","version","html","tag","meta","title","description","templateUrl","styleUrl","events","hiddenTab","this","shownTab","PfeType","PfeTypes","Container","properties","orientation","type","String","attr","default","role","breakpointWidth","Number","active","breakpoint","values","slots","detailsNavHeader","namedSlot","detailsNav","detailsNavFooter","details","[object Object]","super","_handleHideShow","bind","_initDetailsNav","_initDetail","closeAll","_processLightDom","_keyboardControls","_setBreakpoint","_setDetailsNavVisibility","_updateBackButtonState","_slots","_observer","MutationObserver","_detailsNav","shadowRoot","getElementById","_detailsWrapper","_detailsWrapperHeader","_detailsWrapperHeading","_detailsBackButton","_debouncedSetBreakpoint","_focusableElements","connectedCallback","hasLightDOM","debounceDelay","hasAttribute","func","delay","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","window","addEventListener","observe","disconnect","removeEventListener","index","length","detailNavElement","createToggleButton","tagName","toggle","attributes","document","createElement","innerHTML","setAttribute","denyListAttributes","forEach","includes","name","value","dataset","wasTag","id","Math","random","toString","substr","replaceWith","detail","toggleId","getAttribute","processed","breakpointWas","breakpointIs","offsetWidth","activeToggle","_addCloseAttributes","removeAttribute","detailNavItem","_addActiveAttributes","target","visible","leftColumnSlots","slotName","j","hidden","getSlot","error","activeDetailNavId","activeDetailId","e","nextToggle","Array","isArray","path","nextDetails","parseInt","previousToggle","currentToggle","newHeading","innerText","currentDetails","emitEvent","tab","focus","detailNav","element","toggles","newIndex","findIndex","activeElement","nextElementSibling","event","currentElement","_isToggle","newToggle","key","preventDefault","_getPrevToggle","_getNextToggle","create"],"mappings":"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"}