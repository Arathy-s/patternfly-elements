{"version":3,"file":"pfe-primary-detail.umd.min.js","sources":["../_temp/pfe-primary-detail.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfePrimaryDetail 1.2.0\n * @license\n * Copyright 2020 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\n\n// list of attributes that we DO NOT want to pass\n// to our shadow DOM. For example, the style attribute\n// could ruin our encapsulated styles in the shadow DOM\nconst denyListAttributes = [\"style\"];\n\n// Config for mutation observer to see if things change inside of the component\nconst lightDomObserverConfig = {\n  childList: true\n};\n\n// @todo Add keyboard controls for arrows?\n// @todo Add functions to open a specific item by index or ID\nclass PfePrimaryDetail extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.2.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>*{-webkit-box-sizing:border-box;box-sizing:border-box}:host{display:-ms-grid;display:grid;-ms-grid-columns:1fr 2fr;grid-template-columns:1fr 2fr;-ms-grid-columns:var(--pfe-primary-details--GridTemplateColumns,1fr 2fr);grid-template-columns:var(--pfe-primary-details--GridTemplateColumns,1fr 2fr);border:1px solid #d2d2d2;border:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2));-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:stretch;-webkit-justify-content:stretch;-ms-flex-pack:stretch;justify-content:stretch}:host([hidden]){display:none}#details-nav{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding:9px 0;border-right:1px solid #d2d2d2;border-right:var(--pfe-primary-details--Border,var(--pfe-theme--ui--border-width--sm,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--ui--border--lighter,#d2d2d2))}::slotted([slot=details-nav]){display:block!important;-webkit-appearance:none!important;-moz-appearance:none!important;appearance:none!important;background:0 0!important;border:0!important;margin:0!important;padding:.5em 1.5em .5em .75em!important;font:inherit;line-height:1.5;text-align:left!important;color:#151515!important;color:var(--pfe-primary-details__nav--Color,var(--pfe-theme--color--text,#151515))!important;cursor:pointer!important}::slotted([aria-selected=true]){color:#06c!important;color:var(--pfe-primary-details__nav--Color--active,var(--pfe-theme--color--link,#06c))!important;background:#f0f0f0!important;background:var(--pfe-primary-details__nav--Background--active,#f0f0f0)!important}#details-wrapper{width:100%;padding:.5em 1.5em;background:#fff;background:var(--pfe-primary-details__details--Background,var(--pfe-theme--color--surface--lightest,#fff))}:host([consistent-height]) #details-wrapper{display:-ms-grid;display:grid;-ms-grid-rows:1fr;-ms-grid-columns:1fr;grid-template:1fr/1fr;justify-items:start;-webkit-box-align:start;-webkit-align-items:start;-ms-flex-align:start;align-items:start}::slotted([slot=details]){display:none!important}:host([consistent-height]) ::slotted([slot=details]){display:block!important;-ms-grid-row:1!important;-ms-grid-row-span:1!important;grid-row:1/span 1!important;-ms-grid-column:1!important;-ms-grid-column-span:1!important;grid-column:1/span 1!important;visibility:hidden!important}::slotted([aria-hidden=false]){display:block!important}:host([consistent-height]) ::slotted([aria-hidden=false]){visibility:visible!important} /*# sourceMappingURL=pfe-primary-detail.min.css.map */</style>\n<div id=\"details-nav\">\n  <slot name=\"details-nav--header\"></slot>\n  <slot name=\"details-nav\"></slot>\n  <slot name=\"details-nav--footer\"></slot>\n</div>\n<div id=\"details-wrapper\">\n  <slot name=\"details\"></slot>\n</div>`;\n  }\n\n  static get tag() {\n    return \"pfe-primary-detail\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Primary detail\",\n      description: \"\"\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-primary-detail.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-primary-detail.scss\";\n  }\n\n  static get events() {\n    return {\n      hiddenTab: `${this.tag}:hidden-tab`,\n      shownTab: `${this.tag}:shown-tab`\n    };\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Container;\n  }\n\n  static get properties() {\n    return {\n      // Set orientation (doesn't change)\n      orientation: {\n        title: \"Orientation\",\n        type: String,\n        attr: \"aria-orientation\",\n        default: \"vertical\"\n      },\n      // Set aria role\n      role: {\n        type: String,\n        default: \"tablist\"\n      }\n    };\n  }\n\n  static get slots() {\n    return {\n      detailsNavHeader: {\n        title: \"Details Nav Header\",\n        type: \"array\",\n        namedSlot: true\n      },\n      detailsNav: {\n        title: \"Details Nav\",\n        type: \"array\",\n        namedSlot: true\n      },\n      detailsNavFooter: {\n        title: \"Details Nav Footer\",\n        type: \"array\",\n        namedSlot: true\n      },\n      details: {\n        title: \"Details\",\n        type: \"array\",\n        namedSlot: true\n      }\n    };\n  }\n\n  constructor() {\n    super(PfePrimaryDetail, { type: PfePrimaryDetail.PfeType });\n\n    this._handleHideShow = this._handleHideShow.bind(this);\n    this._initDetailsNav = this._initDetailsNav.bind(this);\n    this._initDetail = this._initDetail.bind(this);\n    this._processLightDom = this._processLightDom.bind(this);\n\n    this._slots = {\n      detailsNav: null,\n      details: null,\n      detailsNavHeader: null,\n      detailsNavFooter: null\n    };\n\n    // Setup mutation observer to watch for content changes\n    this._observer = new MutationObserver(this._processLightDom);\n\n    this._detailsNav = this.shadowRoot.getElementById(\"details-nav\");\n    this._detailsWrapper = this.shadowRoot.getElementById(\"details-wrapper\");\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Add appropriate markup and behaviors if DOM is ready\n    if (this.hasLightDOM()) {\n      this._processLightDom();\n    }\n\n    // Process the light DOM on any update\n    this._observer.observe(this, lightDomObserverConfig);\n\n    // Set first item as active for initial load\n    this._handleHideShow({ target: this._slots.detailsNav[0] });\n  }\n\n  disconnectedCallback() {\n    this._observer.disconnect();\n\n    if (this._slots.detailsNav) {\n      for (let index = 0; index < this._slots.detailsNav.length; index++) {\n        this._slots.detailsNav[index].removeEventListener(\"click\", this._handleHideShow);\n      }\n    }\n  }\n\n  /**\n   * Updates markup of details-nav elements to be toggle buttons\n   * @param {object} toggle Slotted element (probably a headline, unless it's been initialized already)\n   * @param {integer} index The index of the item in the details-nav slot\n   */\n  _initDetailsNav(detailNavElement, index) {\n    // Don't re-init anything that's been initialized already\n    if (detailNavElement.tagName === \"BUTTON\" && detailNavElement.dataset.index && detailNavElement.id) {\n      // Make sure the data-index attribute is up to date in case order has changed\n      detailNavElement.dataset.index = index;\n      return;\n    }\n\n    let attr = detailNavElement.attributes;\n    const toggle = document.createElement(\"button\");\n\n    toggle.innerHTML = detailNavElement.innerHTML;\n\n    // Copy over attributes from original element that aren't in denyList\n    [...attr].forEach(detailNavElement => {\n      if (!denyListAttributes.includes(detailNavElement.name)) {\n        toggle.setAttribute(detailNavElement.name, detailNavElement.value);\n      }\n    });\n\n    // Set data-index attribute\n    toggle.dataset.index = index;\n\n    // If the detailNavElement does not have a ID, set a unique ID\n    if (!detailNavElement.id) {\n      toggle.setAttribute(\n        \"id\",\n        `pfe-detail-toggle-${Math.random()\n          .toString(36)\n          .substr(2, 9)}`\n      );\n    }\n\n    toggle.setAttribute(\"role\", \"tab\");\n    toggle.setAttribute(\"aria-selected\", \"false\");\n\n    toggle.addEventListener(\"click\", this._handleHideShow);\n    this._slots.detailsNav[index] = toggle;\n    detailNavElement.replaceWith(toggle);\n  }\n\n  /**\n   * Process detail wrapper elements\n   * @param {object} detail DOM Object of detail wrapper\n   * @param {integer} index The index of the item when detail wrappers are queried\n   */\n  _initDetail(detail, index) {\n    detail.dataset.index = index;\n\n    // Don't re-init anything that's been initialized already\n    if (detail.dataset.processed === \"true\") {\n      return;\n    }\n\n    // If the toggle does not have a ID, set a unique ID\n    if (!detail.hasAttribute(\"id\")) {\n      detail.setAttribute(\n        \"id\",\n        `pfe-detail-${Math.random()\n          .toString(36)\n          .substr(2, 9)}`\n      );\n    }\n\n    detail.setAttribute(\"role\", \"tabpanel\");\n    detail.setAttribute(\"aria-hidden\", \"true\");\n\n    const toggleId = this._slots.detailsNav[index].getAttribute(\"id\");\n    if (!detail.hasAttribute(\"aria-labelledby\") && toggleId) {\n      detail.setAttribute(\"aria-labelledby\", toggleId);\n    }\n\n    // Swing back to detailsNav to add aria-controls, now that details have an Id\n    if (!this._slots.detailsNav[index].hasAttribute(\"aria-controls\") && detail.id) {\n      this._slots.detailsNav[index].setAttribute(\"aria-controls\", detail.id);\n    }\n\n    // Leave a reliable indicator that this has been initialized so we don't do it again\n    detail.dataset.processed = true;\n  }\n\n  /**\n   * Adds nav functionality and adds additional HTML/attributes to markup\n   */\n  _processLightDom() {\n    // Update slots\n    this._slots = {\n      detailsNav: this.getSlot(\"details-nav\"),\n      details: this.getSlot(\"details\"),\n      detailsNavHeader: this.getSlot(\"details-nav--header\"),\n      detailsNavFooter: this.getSlot(\"details-nav--footer\")\n    };\n\n    if (this._slots.detailsNav.length !== this._slots.details.length) {\n      this.error(\n        `The number of item headings does not match the number of item details. Found ${this._slots.detailsNav.length} item headings & ${this._slots.details.length} item details.`\n      );\n      return;\n    }\n\n    // Setup left sidebar navigation\n    this._slots.detailsNav.forEach((toggle, index) => {\n      this._initDetailsNav(toggle, index);\n    });\n\n    // Setup item detail elements\n    this._slots.details.forEach((detail, index) => {\n      this._initDetail(detail, index);\n    });\n  }\n\n  /**\n   * Handles changes in state\n   * @param {object} e Event object\n   */\n  _handleHideShow(e) {\n    const nextToggle = e.target;\n\n    if (typeof nextToggle === \"undefined\") {\n      return;\n    }\n    // If the clicked toggle is already open, no need to do anything\n    else if (nextToggle.hasAttribute(\"aria-selected\") && nextToggle.getAttribute(\"aria-selected\") === \"true\") {\n      return;\n    }\n\n    const currentToggle = this._slots.detailsNav.find(\n      toggle => toggle.hasAttribute(\"aria-selected\") && toggle.getAttribute(\"aria-selected\") === \"true\"\n    );\n\n    // Get details elements\n    const nextDetails = this._slots.details[parseInt(nextToggle.dataset.index)];\n\n    if (currentToggle) {\n      const currentDetails = this._slots.details[parseInt(currentToggle.dataset.index)];\n\n      // Remove Current Item's active attributes\n      currentToggle.setAttribute(\"aria-selected\", \"false\");\n\n      // Remove Current Detail's attributes\n      currentDetails.setAttribute(\"aria-hidden\", \"true\");\n\n      this.emitEvent(PfePrimaryDetail.events.hiddenTab, {\n        detail: {\n          tab: currentToggle,\n          details: currentDetails\n        }\n      });\n    }\n\n    // Add active attributes to Next Item\n    nextToggle.setAttribute(\"aria-selected\", \"true\");\n\n    // Add active attributes to Next Details\n    nextDetails.setAttribute(\"aria-hidden\", \"false\");\n\n    this.emitEvent(PfePrimaryDetail.events.shownTab, {\n      detail: {\n        tab: nextToggle,\n        details: nextDetails\n      }\n    });\n\n    // Set focus to pane\n    const firstFocusableElement = nextDetails.querySelector(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    if (firstFocusableElement) {\n      firstFocusableElement.focus();\n    }\n  }\n}\n\nPFElement.create(PfePrimaryDetail);\n\nexport default PfePrimaryDetail;\n"],"names":["denyListAttributes","lightDomObserverConfig","PfePrimaryDetail","PFElement","this","tag","PfeTypes","Container","String","hasLightDOM","_processLightDom","_observer","observe","_handleHideShow","target","_slots","detailsNav","disconnect","index","length","removeEventListener","detailNavElement","attr","toggle","tagName","dataset","id","attributes","document","createElement","innerHTML","forEach","includes","name","setAttribute","value","Math","random","toString","substr","addEventListener","replaceWith","detail","toggleId","processed","hasAttribute","getAttribute","getSlot","details","_initDetailsNav","_initDetail","error","e","currentToggle","firstFocusableElement","nextToggle","find","nextDetails","parseInt","currentDetails","emitEvent","events","hiddenTab","shownTab","querySelector","focus","type","PfeType","_this","bind","MutationObserver","_detailsNav","shadowRoot","getElementById","_detailsWrapper","create"],"mappings":"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"}