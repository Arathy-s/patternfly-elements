{"version":3,"sources":["pfe-primary-detail.scss","pfe-primary-detail.css","../../pfe-sass/functions/_custom-properties.scss"],"names":[],"mappings":"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","file":"pfe-primary-detail.css","sourcesContent":["// Please see the pfe-sass README for guidance on using these tools\n@import \"../../pfe-sass/pfe-sass\";\n\n\n$LOCAL: primary-details;\n\n// This variable is global so that helper functions can reference it\n$LOCAL-VARIABLES: (\n  Border: pfe-var(ui--border-width--sm) pfe-var(ui--border-style) pfe-var(ui--border--lighter),\n\n  // Applied to the layout of the nav vs details\n  GridTemplateColumns: 1fr 2fr,\n\n  nav: (\n    Color: pfe-var(text),\n    Color--active: pfe-var(link),\n    Background--active: #f0f0f0,\n  ),\n  details: (\n    Background: pfe-var(surface--lightest),\n  ),\n);\n\n* {\n  box-sizing: border-box;\n}\n\n:host {\n  display: grid;\n  grid-template-columns: pfe-local(GridTemplateColumns);\n  border: pfe-local(Border);\n  align-items: stretch;\n  justify-content: stretch;\n  // For compact styling and transitioning from compact to normal styling\n  overflow: hidden;\n}\n\n:host([breakpoint='compact']) {\n  grid-template-columns: 1fr;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n#details-nav,\n#details-wrapper,\n#details-nav__footer {\n  ///\n  // @todo [WR] Animation is janky nav item is selected,\n  // disabling overflow: hidden on parent is only fix\n  // I can find but we need that.\n  //\n  // Tried: delaying _setDetailsNavVisibility, changing to flexbox layout,\n  // transitioning position, adding extra wrappers, will-change,\n  // backface-visibility, and 4ish ways of laying this out and animating it\n  ///\n  transition: transform 0.25s ease-in-out;\n  will-change: transform;\n  backface-visibility: visible;\n\n  @media (prefers-reduced-motion) {\n    transform: none;\n  }\n\n  :host([breakpoint='compact']) & {\n    align-self: stretch;\n    justify-self: stretch;\n    // In compact layout all items are laid out in one column and\n    // transform is used to push the inactive column off screen\n    grid-row: 1;\n    grid-column: 1;\n  }\n}\n\n// Left column elements\n#details-nav,\n#details-nav__footer {\n\n  :host([breakpoint='compact']) & {\n    transform: none;\n  }\n\n  :host([breakpoint='compact'][active]) & {\n    // When active this column should be off the left side\n    transform: translateX(-100%);\n  }\n}\n\n#details-nav {\n  display: flex;\n  flex-direction: column;\n  margin: 0 2px; // Prevents focus ring from being clipped\n  padding: 9px 0;\n  border-right: pfe-local(Border);\n\n  :host([breakpoint='compact']) & {\n    border: 0;\n  }\n}\n\n#details-nav__footer {\n  :host([breakpoint='compact']) & {\n    grid-row: 2;\n  }\n}\n\n::slotted([slot=\"details-nav\"]) {\n  position: relative;\n  display: block!important;\n  appearance: none!important;\n  background: transparent!important;\n  border: 0!important;\n  margin: 0!important;\n  padding: 0.5em 1.5em 0.5em 0.75em!important;\n  font: inherit;\n  line-height: 1.5;\n  text-align: left!important;\n  color: pfe-local(Color, $region: nav)!important;\n  cursor: pointer!important;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: 0%;\n    margin-right: 16px;\n    display: block;\n    width: 0.75em;\n    height: 0.75em;\n    box-shadow: inset -0.1875em -0.1875em 0 0.0625em #000;\n    transform: translate(-50%, -50%) scale(0.6) rotate(314deg);\n  }\n\n  :host([breakpoint='desktop']) & {\n    &:before {\n      content: none;\n    }\n  }\n}\n\n::slotted([aria-selected=\"true\"]),\n::slotted([aria-expanded=\"true\"]) {\n  color: pfe-local(Color--active, $region: nav)!important;\n  background: pfe-local(Background--active, $region: nav)!important;\n}\n\n// Right column\n#details-wrapper {\n  $horizontal-padding: 1.5em;\n  padding: 0.5em $horizontal-padding;\n  background: pfe-local(Background, $region: details);\n\n  :host([breakpoint='compact']) & {\n    // When inactive this should be shoved off the right side of the screen at mobile\n    transform: translateX(100%);\n    grid-row: 1 / span 2;\n    padding-top: 0;\n  }\n\n  :host([breakpoint='compact'][active]) & {\n    transform: none;\n  }\n\n  // Consistent height is enforced with grid, which will respect the max-height of the tallest thing in the grid area\n  :host([consistent-height]) & {\n    display: flex;\n    @supports (display: grid) {\n      display: grid;\n      grid-template: 1fr / 1fr;\n      justify-items: start;\n      align-items: start;\n    }\n  }\n\n  :host([consistent-height][breakpoint='compact']) & {\n    // Horizontal rule under back button at compact\n    &:before {\n      content: '';\n      display: block;\n      grid-row: 1;\n      grid-column: 1;\n      align-self: end;\n      border-bottom: pfe-local(Border);\n      // Make the header as wide as the full column\n      width: calc(100% + #{$horizontal-padding * 2});\n      // Make sure it's flush with the left edge\n      margin-left: ($horizontal-padding * -1);\n    }\n  }\n}\n\n#details-wrapper__header {\n  display: none;\n  grid-row: 1 / span 1;\n  grid-column: 1 / span 1;\n  align-self: start;\n  justify-self: stretch;\n\n  :host([breakpoint='compact']) & {\n    display: flex;\n    align-items: flex-start;\n  }\n}\n\n#details-wrapper__back {\n  $focus-width: 2px;\n  display: none;\n  position: relative;\n  align-self: stretch;\n  border: 0;\n  margin: 2px 0 0; // Prevents focus border from being clipped\n  background: transparent;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: bold;\n  cursor: pointer;\n  text-align: left;\n\n  &:focus {\n    outline: 1px dashed #000 !important;\n    outline-width: $focus-width !important;\n  }\n\n  :host([active]) & {\n    display: inline-block;\n    width: 100%;\n    padding-left: 16px;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0.5em;\n    display: block;\n    width: 0.75em;\n    height: 0.75em;\n    box-shadow: inset -0.1875em -0.1875em 0 0.0625em #000;\n    transform: translate(-50%, -50%) scale(0.6) rotate(135deg);\n  }\n}\n\n#details-wrapper__heading {\n  margin: 0;\n  padding: 0;\n  font-size: inherit;\n  line-height: 1.5;\n  // Add top padding that's half of minimum back button size\n  padding: 0.5em 0;\n}\n\n::slotted([slot=\"details\"]) {\n\n  :host([consistent-height]) & {\n    display: block!important;\n    grid-row: 1 / span 1!important;\n    grid-column: 1 / span 1!important;\n  }\n\n  :host([consistent-height][breakpoint='compact']) & {\n    grid-row: 2 / span 1!important;\n  }\n}\n\n::slotted([hidden]) {\n  visibility: hidden!important;\n  // Using position absolute so grid doesn't account for them in the layout\n  position: absolute!important;\n\n  :host([consistent-height]) & {\n    // Consistent height is setup so we want unopen panes to have a height that grid accounts for\n    position: static!important;\n  }\n}\n\n::slotted([slot=\"details-nav--footer\"]) {\n  border-right: pfe-local(Border) !important;\n}\n\n// @todo: add note in readme with focus indicator example and show ppl that they need to add a good focus indicator to focusable elements\n// @todo: (KS) figure out if we still need this now that we have the lightdom stylesheet\n::slotted(.is-focused:focus),\n::slotted(.is-focused:hover) {\n  outline: 1px dashed #000 !important;\n  outline-width: 2px !important;\n}\n","* {\n  box-sizing: border-box;\n}\n\n:host {\n  display: grid;\n  grid-template-columns: var(--pfe-primary-details--GridTemplateColumns, 1fr 2fr);\n  border: var(--pfe-primary-details--Border, var(--pfe-theme--ui--border-width--sm, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--ui--border--lighter, #d2d2d2));\n  align-items: stretch;\n  justify-content: stretch;\n  overflow: hidden;\n}\n\n:host([breakpoint='compact']) {\n  grid-template-columns: 1fr;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n#details-nav,\n#details-wrapper,\n#details-nav__footer {\n  transition: transform 0.25s ease-in-out;\n  will-change: transform;\n  backface-visibility: visible;\n}\n\n@media (prefers-reduced-motion) {\n  #details-nav,\n  #details-wrapper,\n  #details-nav__footer {\n    transform: none;\n  }\n}\n\n:host([breakpoint='compact']) #details-nav, :host([breakpoint='compact'])\n#details-wrapper, :host([breakpoint='compact'])\n#details-nav__footer {\n  align-self: stretch;\n  justify-self: stretch;\n  grid-row: 1;\n  grid-column: 1;\n}\n\n:host([breakpoint='compact']) #details-nav, :host([breakpoint='compact'])\n#details-nav__footer {\n  transform: none;\n}\n\n:host([breakpoint='compact'][active]) #details-nav, :host([breakpoint='compact'][active])\n#details-nav__footer {\n  transform: translateX(-100%);\n}\n\n#details-nav {\n  display: flex;\n  flex-direction: column;\n  margin: 0 2px;\n  padding: 9px 0;\n  border-right: var(--pfe-primary-details--Border, var(--pfe-theme--ui--border-width--sm, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--ui--border--lighter, #d2d2d2));\n}\n\n:host([breakpoint='compact']) #details-nav {\n  border: 0;\n}\n\n:host([breakpoint='compact']) #details-nav__footer {\n  grid-row: 2;\n}\n\n::slotted([slot=\"details-nav\"]) {\n  position: relative;\n  display: block !important;\n  appearance: none !important;\n  background: transparent !important;\n  border: 0 !important;\n  margin: 0 !important;\n  padding: 0.5em 1.5em 0.5em 0.75em !important;\n  font: inherit;\n  line-height: 1.5;\n  text-align: left !important;\n  color: var(--pfe-primary-details__nav--Color, var(--pfe-theme--color--text, #151515)) !important;\n  cursor: pointer !important;\n}\n\n::slotted([slot=\"details-nav\"]):before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  right: 0%;\n  margin-right: 16px;\n  display: block;\n  width: 0.75em;\n  height: 0.75em;\n  box-shadow: inset -0.1875em -0.1875em 0 0.0625em #000;\n  transform: translate(-50%, -50%) scale(0.6) rotate(314deg);\n}\n\n:host([breakpoint='desktop']) ::slotted([slot=\"details-nav\"]):before {\n  content: none;\n}\n\n::slotted([aria-selected=\"true\"]),\n::slotted([aria-expanded=\"true\"]) {\n  color: var(--pfe-primary-details__nav--Color--active, var(--pfe-theme--color--link, #06c)) !important;\n  background: var(--pfe-primary-details__nav--Background--active, #f0f0f0) !important;\n}\n\n#details-wrapper {\n  padding: 0.5em 1.5em;\n  background: var(--pfe-primary-details__details--Background, var(--pfe-theme--color--surface--lightest, #fff));\n}\n\n:host([breakpoint='compact']) #details-wrapper {\n  transform: translateX(100%);\n  grid-row: 1 / span 2;\n  padding-top: 0;\n}\n\n:host([breakpoint='compact'][active]) #details-wrapper {\n  transform: none;\n}\n\n:host([consistent-height]) #details-wrapper {\n  display: flex;\n}\n\n@supports (display: grid) {\n  :host([consistent-height]) #details-wrapper {\n    display: grid;\n    grid-template: 1fr / 1fr;\n    justify-items: start;\n    align-items: start;\n  }\n}\n\n:host([consistent-height][breakpoint='compact']) #details-wrapper:before {\n  content: '';\n  display: block;\n  grid-row: 1;\n  grid-column: 1;\n  align-self: end;\n  border-bottom: var(--pfe-primary-details--Border, var(--pfe-theme--ui--border-width--sm, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--ui--border--lighter, #d2d2d2));\n  width: calc(100% + 3em);\n  margin-left: -1.5em;\n}\n\n#details-wrapper__header {\n  display: none;\n  grid-row: 1 / span 1;\n  grid-column: 1 / span 1;\n  align-self: start;\n  justify-self: stretch;\n}\n\n:host([breakpoint='compact']) #details-wrapper__header {\n  display: flex;\n  align-items: flex-start;\n}\n\n#details-wrapper__back {\n  display: none;\n  position: relative;\n  align-self: stretch;\n  border: 0;\n  margin: 2px 0 0;\n  background: transparent;\n  font-size: inherit;\n  font-family: inherit;\n  font-weight: bold;\n  cursor: pointer;\n  text-align: left;\n}\n\n#details-wrapper__back:focus {\n  outline: 1px dashed #000 !important;\n  outline-width: 2px !important;\n}\n\n:host([active]) #details-wrapper__back {\n  display: inline-block;\n  width: 100%;\n  padding-left: 16px;\n}\n\n#details-wrapper__back:before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 0.5em;\n  display: block;\n  width: 0.75em;\n  height: 0.75em;\n  box-shadow: inset -0.1875em -0.1875em 0 0.0625em #000;\n  transform: translate(-50%, -50%) scale(0.6) rotate(135deg);\n}\n\n#details-wrapper__heading {\n  margin: 0;\n  padding: 0;\n  font-size: inherit;\n  line-height: 1.5;\n  padding: 0.5em 0;\n}\n\n:host([consistent-height]) ::slotted([slot=\"details\"]) {\n  display: block !important;\n  grid-row: 1/span 1 !important;\n  grid-column: 1/span 1 !important;\n}\n\n:host([consistent-height][breakpoint='compact']) ::slotted([slot=\"details\"]) {\n  grid-row: 2/span 1 !important;\n}\n\n::slotted([hidden]) {\n  visibility: hidden !important;\n  position: absolute !important;\n}\n\n:host([consistent-height]) ::slotted([hidden]) {\n  position: static !important;\n}\n\n::slotted([slot=\"details-nav--footer\"]) {\n  border-right: var(--pfe-primary-details--Border, var(--pfe-theme--ui--border-width--sm, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--ui--border--lighter, #d2d2d2)) !important;\n}\n\n::slotted(.is-focused:focus),\n::slotted(.is-focused:hover) {\n  outline: 1px dashed #000 !important;\n  outline-width: 2px !important;\n}\n","////\n/// Tools for leveraging custom property stacks\n/// @group custom-properties\n/// @author castastrophe\n////\n\n/// Get full theme stack with a fallback from the provided map - used by pfe-var and pfe-zindex\n/// @param {String} $category  - Category name to be appended to variables within the map/system\n/// @param {String} $key - Variable name to be used and prepended with --pfe-theme\n/// @param {Map} $map  - Sass map of variables\n/// @param {String} $fallback [null]  - Optional fallback override\n/// @param {Boolean} $use-fallback [true]  - Optional hook to return a stack with no fallback value\n/// @requires $custom-prop-prefix\n/// @return {String} theme stack with fallback value from a sass map\n@function pfe-get-from-map($category, $key, $map, $fallback: null, $prefix: \"#{$custom-prop-prefix}-theme\", $use-fallback: true) {\n    // Start building the variable declaration\n    $var-declaration: \"--#{$prefix}--\";\n    @if $prefix == \"pf-c\" {\n        $var-declaration: \"--#{$prefix}-\";  // one dash at the end\n    }\n    // If the category exists, inject that into the string\n    @if $category != \"\" {\n        $var-declaration: \"#{$var-declaration}#{$category}--\";\n    }\n    // Append the key to the string\n    $var-declaration: \"#{$var-declaration}#{$key}\";\n\n    // If the fallback is not provided but use-fallback is set to true\n    @if $fallback == null and $use-fallback and map-get($map, $key) != null {\n        $fallback: map-get($map, $key);\n    }\n    @if $fallback != null {\n        // Create the variable declaration\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});   \n}\n\n\n\n/// Returns CSS Var for the local component-scoped variable\n/// @param {String} $cssvar - Variable identifiers which are postfixed and combined using '--'\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $custom-prop-prefix\n/// @see $LOCAL\n/// @example\n///   :host {\n///       padding-top:      #{pfe-local(paddingTop)};\n///       padding-bottom:   #{pfe-local(paddingBottom)};\n///   }\n@function pfe-local($cssvar, $fallback: null, $region: null) {\n    // If a fallback is not defined, use the global variables map\n    @if $fallback == null and length($LOCAL-VARIABLES) > 0 {\n        @if $region == null {\n            $fallback: map-get($LOCAL-VARIABLES, $cssvar);\n        }\n        @else {\n            $submap: map-get($LOCAL-VARIABLES, $region);\n            @if type-of($submap) == \"map\" {\n                $fallback: map-deep-get($LOCAL-VARIABLES, $region, $cssvar);\n            }\n        }\n    }\n\n    // If a region value exists, build the region string\n    @if $region != null {\n        $region: \"__#{$region}\";\n    }\n\n    // Start building the variable declaration\n    $var-declaration: \"--#{$custom-prop-prefix}-#{$LOCAL}#{$region}--#{to-string($cssvar, '--')}\";\n    \n    @if $fallback != null {\n        $var-declaration: \"#{$var-declaration}, #{$fallback}\";\n    }\n\n    // Return the variable declaration string\n    @return var(#{$var-declaration});\n}\n\n/// Fetches a CSS variable stack for broadcasted variables, providing a hook for context\n/// to influence the styles of children elements such as p tags or links.\n/// @param {String} $broadcast - name of the broadcast variable to apply\n/// @requires {String} $custom-prop-prefix - Name of repo, which is \"pfe\"\n/// @example - scss\n///   :host {\n///     color: pfe-broadcasted(link);\n///   }\n/// @example - css\n///   :host {\n///     color: var(--pfe-broadcasted--link, #06c);\n///   }\n@function pfe-broadcasted($broadcast, $use-fallback: true) {\n    $fallback: \"\";\n    @if $use-fallback {\n        $fallback: \", #{map-get($pfe-broadcasted, #{to-string($broadcast,'--')})}\";\t\n    }\n    @if not index($BROADCAST-VARS, first(str-split($broadcast, '--'))) {\n      @error \"--#{$custom-prop-prefix}-broadcasted--#{$broadcast} variable is not currently supported.\";\n    }\n    @else {\n      @return var(--#{$custom-prop-prefix}-broadcasted--#{to-string($broadcast,'--')}#{unquote($fallback)});\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme--zindex\n/// @requires {Map} $pfe-zindex - SASS Map of z-index values\n/// @see $pfe-zindex\n/// @example - scss - In your component styles\n///   .my-element {\n///     z-index: pfe-zindex( content );\n///   }\n\n@function pfe-zindex($cssvar) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-zindex, $var-name) != null {\n        @return pfe-get-from-map(\"zindex\", $var-name, $pfe-zindex);\n    }\n    @else {\n        @error \"The key for #{$var-name} could not be found in the $pfe-zindex map.\";\n    }\n}\n\n/// Returns the value (only) of a property from the respective maps\n/// Similar to pfe-var, but does not include css variable in the compiled CSS\n/// @param {String} $name - Name of the key for the map\n/// @param {String} $region - Identifies the region or slot to which this is assigned\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example - scss - In your component styles\n///   .my-element {\n///     background-color: pfe-fetch( ui-base );\n///   }\n@function pfe-fetch($name, $region: null) {\n    $var-name: to-string($name, \"--\");\n    @if $region != null and map-deep-get($LOCAL-VARIABLES, $region, $var-name) != null {\n        @return map-deep-get($LOCAL-VARIABLES, $region, $var-name);\n    }\n    @else if $region == null and map-get($LOCAL-VARIABLES, $var-name) != null {\n        @return map-get($LOCAL-VARIABLES, $var-name);\n    }\n    @else if map-get($pfe-vars, $var-name) != null {\n        @return map-get($pfe-vars, $var-name);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return map-get($pfe-colors, $var-name);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return map-get($pfe-broadcasted, $var-name);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return map-get($pfe-typography-base, $var-name);\n    }\n\n    // PATTERNFLY CORE\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return map-get($pf-type-sizing, $var-name);\n    }\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return map-get($pf-type-sizing--component, $var-name);\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return map-get($pf-type-sizing--modifers, $var-name);\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return map-get($pf-type-sizing--content, $var-name);\n    }\n    // DEPRECATED\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-base-deprecated, $var-name);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return map-get($pfe-typography-deprecated, $var-name);\n    }\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}\n\n/// Returns CSS variable stack with exposed theme variable and respective fallback\n/// @param {String} $cssvar - Variable name to be used and prepended with --pfe-theme\n/// @param {String} $fallback [null] - Optional custom fallback\n/// @see $pfe-vars\n/// @see $pfe-colors\n/// @see $pfe-broadcasted\n/// @example scss - In your component styles\n///   .my-element {\n///     padding:     pfe-var( container-spacer );\n///     font-size:   pfe-var( font-size );\n///   }\n/// @example - css Rendered output\n///   .my-element {\n///      padding: var(--pfe-theme--container-spacer, 16px);\n///      font-size: var(--pfe-theme--font-size, 16px);\n///   }\n@function pfe-var($cssvar, $fallback: null) {\n    $var-name: to-string($cssvar, \"--\");\n    @if map-get($pfe-vars, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-vars, $fallback);\n    }\n    @else if map-get($pfe-colors, $var-name) != null {\n        @return pfe-get-from-map(\"color\", $var-name, $pfe-colors, $fallback);\n    }\n    @else if map-get($pfe-broadcasted, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-broadcasted);\n    }\n    @else if map-get($pfe-typography-base, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base, $fallback);\n    }\n    // PATTERNFLY CORE:\n    @else if map-get($pf-type-sizing, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing, $fallback, $prefix: \"pf-global\");\n    }\n    @else if map-get($pf-type-sizing--modifers, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--modifers, $fallback, $prefix: \"pf-c\");\n    }\n    @else if map-get($pf-type-sizing--content, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--content, $fallback, $prefix: \"pf-c\");\n    }\n    // PFE components (must be below core)\n    @else if map-get($pf-type-sizing--component, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pf-type-sizing--component, $fallback);\n    }\n\n    // DEPRECATED:\n    @else if map-get($pfe-typography-base-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-base-deprecated, $fallback);\n    }\n    @else if map-get($pfe-typography-deprecated, $var-name) != null {\n        @return pfe-get-from-map(\"\", $var-name, $pfe-typography-deprecated, $fallback);\n    }\n\n    @else {\n        @error \"#{$var-name} could not be found.\";\n    }\n}"],"sourceRoot":"../src"}