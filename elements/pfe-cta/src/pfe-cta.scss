$LOCAL: cta;

@import "../../pfe-sass/pfe-sass";
@import "pfe-cta--style-maps";

:host {
  display: inline-block;
  position: relative;
  z-index: 0;
  vertical-align: middle;
  background-color: pfe-local(BackgroundColor);
  border-color: pfe-local(BorderColor);

  background-color: pfe-local(BackgroundColor);
  border-radius: pfe-local(BorderRadius);
  border: pfe-var(ui--border-width) pfe-var(ui--border-style) pfe-local(
      BorderColor
    );
  max-width: fit-content;
}

// Note: Focus states need to be defined before hover states
:host(:focus),
:host(.focus-within) {
  outline: none !important;
  background-color: pfe-local(BackgroundColor--focus);
  border-color: pfe-local(BorderColor--focus);
}

:host(.focus-within) ::slotted(*),
::slotted(:focus) {
  outline: none !important;
  color: pfe-local(Color--focus) !important;
  text-decoration: pfe-local(TextDecoration--focus) !important;
}

// Note: Hover states need to be defined after focus states
:host(:hover),
:host(:hover) ::slotted(*),
::slotted(:hover) {
  --#{$repo}-#{$LOCAL}-local__arrow--Padding: #{$arrow-hover};
}

:host(:hover) {
  background-color: pfe-local(BackgroundColor--hover);
  border-color: pfe-local(BorderColor--hover);
}

:host(:hover),
:host(:hover) ::slotted(*) {
  color: pfe-local(Color--hover) !important;
}

::slotted(button),
::slotted(input) {
  @extend %reset-button;
}

::slotted(*) {
  white-space: normal; 
  display: inline; 
  padding: pfe-local(Padding) !important;
  color: pfe-local(Color) !important;
  font-family: pfe-local(FontFamily);
  font-size: pfe-local(FontSize);
  font-weight: pfe-local(FontWeight);
  line-height: pfe-local(LineHeight);
  text-decoration: pfe-local(TextDecoration) !important;

  @include browser-query(ie11 edge) {
    padding: 0 !important;
  }

  :host(:hover) & {
    color: pfe-local(Color--hover) !important;
    text-decoration: pfe-local(TextDecoration--hover) !important;
  }

  :host([pfe-priority]) & {
    text-align: center;
    font-size: pfe-local(FontSize--priority);
  }

  :host([aria-disabled="true"]) & {
    cursor: default !important;
    font-size: pfe-local(FontSize--priority);
  }
}

:host(:not([aria-disabled="true"])) ::slotted(*:not(:disabled)),
:host ::slotted(*:not(:disabled)) {
  cursor: pointer;
}

.pfe-cta {
  &--wrapper {
    display: block; 
    white-space: nowrap;
    min-width: 100%;

    :host([pfe-priority]) &,
    :host([aria-disabled="true"]) & {
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      height: 100%;
    }
    // Default CTA arrow wrap fix for Firefox
    :host(:not([pfe-priority]):not([aria-disabled="true"])) & {
      @include browser-query(firefox) {
        max-width: calc(100% - 1ch - #{pfe-local(size, $region: arrow)});
      }
    }
    @include browser-query(edge) {
      button,
      input {
        @extend %reset-button;
      }
    }
  }
  &--inner {
    // inner border on priority CTAs
    display: block;
    height: calc(100% - 4px);
    width: calc(100% - 4px);

    box-sizing: border-box;
    position: absolute;
    top: 2px;
    left: 2px;
    z-index: -1;

    border: pfe-var(surface--border-width) pfe-var(surface--border-style)
      pfe-local(BorderColor, $region: inner);
    border-radius: 2px;
    outline: none;

    :host(.focus-within) & {
      border-color: pfe-local(BorderColor--focus, $region: inner);
    }

    :host(:hover) & {
      border-color: pfe-local(BorderColor--hover, $region: inner);
    }
  }
  &--arrow {
    display: pfe-local(Display, $region: arrow);
    padding: pfe-local(Padding, $region: arrow);
    fill: pfe-local(Color);
    width: pfe-local(size, $region: arrow);
    height: pfe-local(size, $region: arrow);
    transition: padding pfe-var(animation-speed) pfe-var(animation-timing);
    margin-bottom: -1px;
    :host(.focus-within) & {
      fill: pfe-local(Color--focus);
    }

    :host(:hover) & {
      fill: pfe-local(Color--hover);
    }

    @include browser-query(ie11 edge) {
      width: 18px;
    }
  }
}

// Set svg to none so it won't render in nav on iOS versions 12>
:host([pfe-priority]) svg {
  display: none;
}

:host([pfe-priority]),
:host([aria-disabled="true"]) {
  --#{$repo}-#{$LOCAL}-local--Padding: #{pfe-var(container-padding)} calc(#{pfe-var(container-padding)} * 2);
}

@each $theme in $THEMES {
  :host([on="#{$theme}"]) {
    @include pfe-set-broadcast-theme($theme);
  }
}

/// ===========================================================================
/// BELOW THIS POINT, LOCAL VARIABLE OVERRIDES ONLY

// Broadcast colors: The CTA is tuning into whatever colors the containers are offering up, per priority level

// - The location of these styles in the doc is important for clarity (readable code FTW!)
// - pfe-priority="primary" sets its own background colors, so it ignores broadcast
// - if there is no broadcast variable available, these are still seen by the browser, so we also set fallbacks here!
// - Fallback values should match whats above

:host([pfe-priority="secondary"]) {
  @include pfe-set-local(priority secondary default);
}

/// ===========================================================================
/// PRIMARY CTAs
/// ===========================================================================
:host([pfe-priority="primary"]) {
  @include pfe-set-local(priority primary default);
}

/// ===========================================================================
// COLOR ATTRIBUTE OVERRIDES
//
// Set values of local vars because more
// colors are needed than whats available in broadcast
/// ===========================================================================

/// ===========================================================================
/// COLOR=ACCENT
/// ===========================================================================
// Primary omitted because it already uses the accent color

:host(:not([pfe-priority])[pfe-color="accent"]:not([on="saturated"])) {
  --#{$repo}-#{$LOCAL}-local--Color: #{pfe-var(ui-accent)};
}

:host([pfe-priority="secondary"][pfe-color="accent"]) {
  @include pfe-set-local(priority secondary color accent);
}

:host([pfe-priority="secondary"][pfe-color="accent"].focus-within) {
  --#{$repo}-#{$LOCAL}-local--Color--hover: #{pfe-var(ui-accent--text)};
}

/// ===========================================================================
/// COLOR=BASE
/// ===========================================================================

:host([pfe-priority="primary"][pfe-color="base"]) {
  @include pfe-set-local(priority primary color base);
}

:host([pfe-priority="secondary"][pfe-color="base"]) {
  @include pfe-set-local(priority secondary color base);
}

:host([pfe-priority="secondary"][pfe-color="base"].focus-within) {
  --#{$repo}-#{$LOCAL}-local--Color--hover: pfe-var(ui-base--text);
}

/// ===========================================================================
/// COLOR=COMPLEMENT
/// ===========================================================================

:host(:not([pfe-priority])[pfe-color="complement"]:not([on="dark"], [on="saturated"])) {
  --#{$repo}-#{$LOCAL}-local--Color: #{pfe-var(ui-complement)};
  --#{$repo}-#{$LOCAL}-local--Color--hover: #{pfe-var(ui-complement--hover)};
}

:host([pfe-priority="primary"][pfe-color="complement"]) {
  @include pfe-set-local(priority primary color complement);
}

:host([pfe-priority="secondary"][pfe-color="complement"]) {
  @include pfe-set-local(priority secondary color complement);
}

:host([pfe-priority="secondary"][pfe-color="complement"].focus-within) {
  --#{$repo}-#{$LOCAL}-local--Color--hover: #{pfe-var(ui-complement--text)};
}

/// ===========================================================================
/// WIND CTA VARIANTS
/// ===========================================================================

:host([pfe-priority="secondary"][pfe-variant="wind"]) {
  @include pfe-set-local(priority secondary variant wind);
}

:host([pfe-priority="secondary"][pfe-variant="wind"].focus-within) {
  --#{$repo}-#{$LOCAL}-local--Color--hover: pfe-var(link--hover);
}

/// ===========================================================================
/// CONTEXT CTA VARIANTS
/// ===========================================================================

:host([pfe-priority="secondary"][on="dark"]),
:host([pfe-priority="secondary"][on="saturated"]) {
  @include pfe-set-local(priority, secondary, context, dark);
}

:host([pfe-priority="primary"][on="saturated"]),
:host([pfe-priority="primary"][pfe-color="complement"][on="dark"]) {
  @include pfe-set-local(priority, primary, context, saturated);
}

/// ===========================================================================
/// DISABLED CTA VARIANTS
/// ===========================================================================

:host([aria-disabled="true"]) {
  @include pfe-set-local(disabled);
}
