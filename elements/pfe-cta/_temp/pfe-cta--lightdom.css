/*
 * Copyright 2018 Red Hat, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/* Palette of Border Colors */
/* Palette of Feedback Colors */
/* IE + EDGE only */
[class^="pfe-cta"] {
  display: inline-block;
}

/*************************/
/** Set link tag styles for IE11 & EDGE **/
[class^="pfe-cta"][class="PFElement"] a,
[class^="pfe-cta"][class="PFElement"] a:visited,
.pfe-cta--wrapper a,
.pfe-cta--wrapper a:visited {
  font-family: "Overpass", Overpass, Helvetica, helvetica, arial, sans-serif;
  display: inline;
  color: #06c !important;
  color: var(--pfe-cta--Color, #06c) !important;
}

[class^="pfe-cta"][class="PFElement"]:hover input,
[class^="pfe-cta"][class="PFElement"]:hover button,
[class^="pfe-cta"][class="PFElement"]:hover a,
[class^="pfe-cta"][class="PFElement"] input:hover,
[class^="pfe-cta"][class="PFElement"] button:hover,
[class^="pfe-cta"][class="PFElement"] a:hover,
.pfe-cta--wrapper:hover input,
.pfe-cta--wrapper:hover button,
.pfe-cta--wrapper:hover a,
.pfe-cta--wrapper input:hover,
.pfe-cta--wrapper button:hover,
.pfe-cta--wrapper a:hover {
  color: #003366 !important;
  color: var(--pfe-cta--Color--hover, #003366) !important;
}

[class^="pfe-cta"][class="PFElement"]:focus input,
[class^="pfe-cta"][class="PFElement"]:focus button,
[class^="pfe-cta"][class="PFElement"]:focus a,
[class^="pfe-cta"][class="PFElement"] input:focus,
[class^="pfe-cta"][class="PFElement"] button:focus,
[class^="pfe-cta"][class="PFElement"] a:focus,
.pfe-cta--wrapper:focus input,
.pfe-cta--wrapper:focus button,
.pfe-cta--wrapper:focus a,
.pfe-cta--wrapper input:focus,
.pfe-cta--wrapper button:focus,
.pfe-cta--wrapper a:focus {
  color: #003366 !important;
  color: var(--pfe-cta--Color--focus, #003366) !important;
}

[class^="pfe-cta"][class="PFElement"] a:focus,
.pfe-cta--wrapper a:focus {
  outline: none !important;
}

[class^="pfe-cta"][class="PFElement"] a:focus::before,
.pfe-cta--wrapper a:focus::before {
  content: "";
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  border: 1px solid;
  border-color: #99ccff;
  border-color: var(--pfe-cta--inner--BorderColor, #99ccff);
  outline: none;
  position: absolute;
  top: 2px;
  left: 2px;
  bottom: 2px;
  right: 2px;
  border-radius: 2px;
}

[class^="pfe-cta"][class="PFElement"] a:focus .pfe-cta--arrow,
.pfe-cta--wrapper a:focus .pfe-cta--arrow {
  fill: var(--pfe-cta--Color--focus);
}

[class^="pfe-cta"][class="PFElement"][pfe-priority] a,
[class^="pfe-cta"][class="PFElement"][pfe-priority] input,
[pfe-priority] .pfe-cta--wrapper a,
[pfe-priority] .pfe-cta--wrapper input {
  text-decoration: none;
}

[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] {
  background-color: #fff;
  background-color: var(--pfe-cta--BackgroundColor, #fff);
}

[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] input,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] button,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] a,
[pfe-priority="secondary"] .pfe-cta--wrapper input,
[pfe-priority="secondary"] .pfe-cta--wrapper button,
[pfe-priority="secondary"] .pfe-cta--wrapper a {
  color: #333 !important;
  color: var(--pfe-cta--Color, #333) !important;
}

[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"]:hover input,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"]:hover button,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"]:hover a,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] input:hover,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] button:hover,
[class^="pfe-cta"][class="PFElement"][pfe-priority="secondary"] a:hover,
[pfe-priority="secondary"] .pfe-cta--wrapper:hover input,
[pfe-priority="secondary"] .pfe-cta--wrapper:hover button,
[pfe-priority="secondary"] .pfe-cta--wrapper:hover a,
[pfe-priority="secondary"] .pfe-cta--wrapper input:hover,
[pfe-priority="secondary"] .pfe-cta--wrapper button:hover,
[pfe-priority="secondary"] .pfe-cta--wrapper a:hover {
  color: #fff !important;
  color: var(--pfe-cta--Color--hover, #fff) !important;
}

@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {
  pfe-cta.PFElement[pfe-priority="primary"] a, pfe-cta.PFElement[pfe-priority="primary"] a:visited, pfe-cta.PFElement[pfe-priority="primary"] a:focus, pfe-cta.PFElement[pfe-priority="primary"] a:hover {
    color: #fff !important;
  }
  pfe-cta.PFElement[pfe-priority="primary"][pfe-color="lightest"] a, pfe-cta.PFElement[pfe-priority="primary"][pfe-color="lightest"] a:visited, pfe-cta.PFElement[pfe-priority="primary"][pfe-color="lightest"] a:focus, pfe-cta.PFElement[pfe-priority="primary"][pfe-color="lightest"] a:hover {
    color: #06c !important;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
